var TextMiningApplierDirective_1;
import { __decorate, __metadata } from "tslib";
import { NgModule, Component, Directive, ElementRef, Input, AfterViewInit } from "@angular/core";
import { getAttributes } from "@carbon/icon-helpers";
let TextMiningApplierComponent = class TextMiningApplierComponent {
    constructor() {
        this.focusable = false;
    }
};
__decorate([
    Input(),
    __metadata("design:type", String)
], TextMiningApplierComponent.prototype, "ariaLabel", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], TextMiningApplierComponent.prototype, "ariaLabelledby", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], TextMiningApplierComponent.prototype, "ariaHidden", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], TextMiningApplierComponent.prototype, "title", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], TextMiningApplierComponent.prototype, "focusable", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], TextMiningApplierComponent.prototype, "innerClass", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], TextMiningApplierComponent.prototype, "size", void 0);
TextMiningApplierComponent = __decorate([
    Component({
        selector: "ibm-icon-text-mining-applier",
        template: `
    <svg
      ibmIconTextMiningApplier
      [size]="size"
      [ariaLabel]="ariaLabel"
      [ariaLabelledby]="ariaLabelledby"
      [ariaHidden]="ariaHidden"
      [title]="title"
      [isFocusable]="focusable"
      [attr.class]="innerClass">
    </svg>
  `
    })
], TextMiningApplierComponent);
export { TextMiningApplierComponent };
let TextMiningApplierDirective = TextMiningApplierDirective_1 = class TextMiningApplierDirective {
    constructor(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
        this.icons = {
            "32": {
                metadata: { "moduleName": "TextMiningApplier32", "filepath": "text-mining--applier/32.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 32, "height": 32 }, "content": [{ "elem": "path", "attrs": { "d": "M16.001 26.473L16 26.473 4.284 12.955 9.5 6 22.5 6 27.716 12.955 24.476 16.692 25.989 18.002 30.284 13.045 23.5 4 8.5 4 1.716 13.045 14.488 27.782 16.001 26.473z" } }, { "elem": "path", "attrs": { "d": "M20 19L27 24 20 29 20 19z" } }], "name": "text-mining--applier", "size": 32 }, "size": 32 },
                svg: `<svg focusable="false" preserveAspectRatio="xMidYMid meet" xmlns="http://www.w3.org/2000/svg" fill="currentColor" width="32" height="32" viewBox="0 0 32 32" aria-hidden="true"><path d="M16.001 26.473L16 26.473 4.284 12.955 9.5 6 22.5 6 27.716 12.955 24.476 16.692 25.989 18.002 30.284 13.045 23.5 4 8.5 4 1.716 13.045 14.488 27.782 16.001 26.473z"></path><path d="M20 19L27 24 20 29 20 19z"></path></svg>`
            },
            "24": {
                metadata: { "moduleName": "TextMiningApplier24", "filepath": "text-mining--applier/24.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 24, "height": 24 }, "content": [{ "elem": "path", "attrs": { "d": "M16.001 26.473L16 26.473 4.284 12.955 9.5 6 22.5 6 27.716 12.955 24.476 16.692 25.989 18.002 30.284 13.045 23.5 4 8.5 4 1.716 13.045 14.488 27.782 16.001 26.473z" } }, { "elem": "path", "attrs": { "d": "M20 19L27 24 20 29 20 19z" } }], "name": "text-mining--applier", "size": 24 }, "size": 24 },
                svg: `<svg focusable="false" preserveAspectRatio="xMidYMid meet" xmlns="http://www.w3.org/2000/svg" fill="currentColor" width="24" height="24" viewBox="0 0 32 32" aria-hidden="true"><path d="M16.001 26.473L16 26.473 4.284 12.955 9.5 6 22.5 6 27.716 12.955 24.476 16.692 25.989 18.002 30.284 13.045 23.5 4 8.5 4 1.716 13.045 14.488 27.782 16.001 26.473z"></path><path d="M20 19L27 24 20 29 20 19z"></path></svg>`
            },
            "20": {
                metadata: { "moduleName": "TextMiningApplier20", "filepath": "text-mining--applier/20.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 20, "height": 20 }, "content": [{ "elem": "path", "attrs": { "d": "M16.001 26.473L16 26.473 4.284 12.955 9.5 6 22.5 6 27.716 12.955 24.476 16.692 25.989 18.002 30.284 13.045 23.5 4 8.5 4 1.716 13.045 14.488 27.782 16.001 26.473z" } }, { "elem": "path", "attrs": { "d": "M20 19L27 24 20 29 20 19z" } }], "name": "text-mining--applier", "size": 20 }, "size": 20 },
                svg: `<svg focusable="false" preserveAspectRatio="xMidYMid meet" xmlns="http://www.w3.org/2000/svg" fill="currentColor" width="20" height="20" viewBox="0 0 32 32" aria-hidden="true"><path d="M16.001 26.473L16 26.473 4.284 12.955 9.5 6 22.5 6 27.716 12.955 24.476 16.692 25.989 18.002 30.284 13.045 23.5 4 8.5 4 1.716 13.045 14.488 27.782 16.001 26.473z"></path><path d="M20 19L27 24 20 29 20 19z"></path></svg>`
            },
            "16": {
                metadata: { "moduleName": "TextMiningApplier16", "filepath": "text-mining--applier/16.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 16, "height": 16 }, "content": [{ "elem": "path", "attrs": { "d": "M16.001 26.473L16 26.473 4.284 12.955 9.5 6 22.5 6 27.716 12.955 24.476 16.692 25.989 18.002 30.284 13.045 23.5 4 8.5 4 1.716 13.045 14.488 27.782 16.001 26.473z" } }, { "elem": "path", "attrs": { "d": "M20 19L27 24 20 29 20 19z" } }], "name": "text-mining--applier", "size": 16 }, "size": 16 },
                svg: `<svg focusable="false" preserveAspectRatio="xMidYMid meet" xmlns="http://www.w3.org/2000/svg" fill="currentColor" width="16" height="16" viewBox="0 0 32 32" aria-hidden="true"><path d="M16.001 26.473L16 26.473 4.284 12.955 9.5 6 22.5 6 27.716 12.955 24.476 16.692 25.989 18.002 30.284 13.045 23.5 4 8.5 4 1.716 13.045 14.488 27.782 16.001 26.473z"></path><path d="M20 19L27 24 20 29 20 19z"></path></svg>`
            },
        };
    }
    ngAfterViewInit() {
        const svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        const icon = this.icons[this.size];
        const domParser = new DOMParser();
        const rawSVG = icon.svg;
        const svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        let node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        const attributes = getAttributes({
            width: icon.metadata.descriptor.attrs.height,
            height: icon.metadata.descriptor.attrs.height,
            viewBox: icon.metadata.descriptor.attrs.viewBox,
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        const attrKeys = Object.keys(attributes);
        for (let i = 0; i < attrKeys.length; i++) {
            const key = attrKeys[i];
            const value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            const title = document.createElement("title");
            title.textContent = attributes.title;
            TextMiningApplierDirective_1.titleIdCounter++;
            title.setAttribute("id", `text-mining-applier-${TextMiningApplierDirective_1.titleIdCounter}`);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", `text-mining-applier-${TextMiningApplierDirective_1.titleIdCounter}`);
        }
    }
};
TextMiningApplierDirective.titleIdCounter = 0;
TextMiningApplierDirective.ctorParameters = () => [
    { type: ElementRef }
];
__decorate([
    Input(),
    __metadata("design:type", String)
], TextMiningApplierDirective.prototype, "ariaLabel", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], TextMiningApplierDirective.prototype, "ariaLabelledby", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], TextMiningApplierDirective.prototype, "ariaHidden", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], TextMiningApplierDirective.prototype, "title", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], TextMiningApplierDirective.prototype, "isFocusable", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], TextMiningApplierDirective.prototype, "size", void 0);
TextMiningApplierDirective = TextMiningApplierDirective_1 = __decorate([
    Directive({
        selector: "[ibmIconTextMiningApplier]"
    }),
    __metadata("design:paramtypes", [ElementRef])
], TextMiningApplierDirective);
export { TextMiningApplierDirective };
let TextMiningApplierModule = class TextMiningApplierModule {
};
TextMiningApplierModule = __decorate([
    NgModule({
        declarations: [
            TextMiningApplierComponent,
            TextMiningApplierDirective,
        ],
        exports: [
            TextMiningApplierComponent,
            TextMiningApplierDirective,
        ]
    })
], TextMiningApplierModule);
export { TextMiningApplierModule };
//# sourceMappingURL=data:application/json;base64,