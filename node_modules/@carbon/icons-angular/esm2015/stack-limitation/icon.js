var StackLimitationDirective_1;
import { __decorate, __metadata } from "tslib";
import { NgModule, Component, Directive, ElementRef, Input, AfterViewInit } from "@angular/core";
import { getAttributes } from "@carbon/icon-helpers";
let StackLimitationComponent = class StackLimitationComponent {
    constructor() {
        this.focusable = false;
    }
};
__decorate([
    Input(),
    __metadata("design:type", String)
], StackLimitationComponent.prototype, "ariaLabel", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], StackLimitationComponent.prototype, "ariaLabelledby", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], StackLimitationComponent.prototype, "ariaHidden", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], StackLimitationComponent.prototype, "title", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], StackLimitationComponent.prototype, "focusable", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], StackLimitationComponent.prototype, "innerClass", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], StackLimitationComponent.prototype, "size", void 0);
StackLimitationComponent = __decorate([
    Component({
        selector: "ibm-icon-stack-limitation",
        template: `
    <svg
      ibmIconStackLimitation
      [size]="size"
      [ariaLabel]="ariaLabel"
      [ariaLabelledby]="ariaLabelledby"
      [ariaHidden]="ariaHidden"
      [title]="title"
      [isFocusable]="focusable"
      [attr.class]="innerClass">
    </svg>
  `
    })
], StackLimitationComponent);
export { StackLimitationComponent };
let StackLimitationDirective = StackLimitationDirective_1 = class StackLimitationDirective {
    constructor(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
        this.icons = {
            "32": {
                metadata: { "moduleName": "StackLimitation32", "filepath": "stack-limitation/32.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 32, "height": 32 }, "content": [{ "elem": "path", "attrs": { "d": "M8 22H16V30H8zM24 12H20v2h4v2H21v2h3v2H20v2h4a2.0027 2.0027 0 002-2V14A2.0023 2.0023 0 0024 12zM16 20H8V12h8zm-6-2h4V14H10zM16 3.41L14.59 2 12 4.59 9.41 2 8 3.41 10.59 6 8 8.59 9.41 10 12 7.41 14.59 10 16 8.59 13.41 6 16 3.41z" } }], "name": "stack-limitation", "size": 32 }, "size": 32 },
                svg: `<svg focusable="false" preserveAspectRatio="xMidYMid meet" xmlns="http://www.w3.org/2000/svg" fill="currentColor" width="32" height="32" viewBox="0 0 32 32" aria-hidden="true"><path d="M8 22H16V30H8zM24 12H20v2h4v2H21v2h3v2H20v2h4a2.0027 2.0027 0 002-2V14A2.0023 2.0023 0 0024 12zM16 20H8V12h8zm-6-2h4V14H10zM16 3.41L14.59 2 12 4.59 9.41 2 8 3.41 10.59 6 8 8.59 9.41 10 12 7.41 14.59 10 16 8.59 13.41 6 16 3.41z"></path></svg>`
            },
            "24": {
                metadata: { "moduleName": "StackLimitation24", "filepath": "stack-limitation/24.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 24, "height": 24 }, "content": [{ "elem": "path", "attrs": { "d": "M8 22H16V30H8zM24 12H20v2h4v2H21v2h3v2H20v2h4a2.0027 2.0027 0 002-2V14A2.0023 2.0023 0 0024 12zM16 20H8V12h8zm-6-2h4V14H10zM16 3.41L14.59 2 12 4.59 9.41 2 8 3.41 10.59 6 8 8.59 9.41 10 12 7.41 14.59 10 16 8.59 13.41 6 16 3.41z" } }], "name": "stack-limitation", "size": 24 }, "size": 24 },
                svg: `<svg focusable="false" preserveAspectRatio="xMidYMid meet" xmlns="http://www.w3.org/2000/svg" fill="currentColor" width="24" height="24" viewBox="0 0 32 32" aria-hidden="true"><path d="M8 22H16V30H8zM24 12H20v2h4v2H21v2h3v2H20v2h4a2.0027 2.0027 0 002-2V14A2.0023 2.0023 0 0024 12zM16 20H8V12h8zm-6-2h4V14H10zM16 3.41L14.59 2 12 4.59 9.41 2 8 3.41 10.59 6 8 8.59 9.41 10 12 7.41 14.59 10 16 8.59 13.41 6 16 3.41z"></path></svg>`
            },
            "20": {
                metadata: { "moduleName": "StackLimitation20", "filepath": "stack-limitation/20.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 20, "height": 20 }, "content": [{ "elem": "path", "attrs": { "d": "M8 22H16V30H8zM24 12H20v2h4v2H21v2h3v2H20v2h4a2.0027 2.0027 0 002-2V14A2.0023 2.0023 0 0024 12zM16 20H8V12h8zm-6-2h4V14H10zM16 3.41L14.59 2 12 4.59 9.41 2 8 3.41 10.59 6 8 8.59 9.41 10 12 7.41 14.59 10 16 8.59 13.41 6 16 3.41z" } }], "name": "stack-limitation", "size": 20 }, "size": 20 },
                svg: `<svg focusable="false" preserveAspectRatio="xMidYMid meet" xmlns="http://www.w3.org/2000/svg" fill="currentColor" width="20" height="20" viewBox="0 0 32 32" aria-hidden="true"><path d="M8 22H16V30H8zM24 12H20v2h4v2H21v2h3v2H20v2h4a2.0027 2.0027 0 002-2V14A2.0023 2.0023 0 0024 12zM16 20H8V12h8zm-6-2h4V14H10zM16 3.41L14.59 2 12 4.59 9.41 2 8 3.41 10.59 6 8 8.59 9.41 10 12 7.41 14.59 10 16 8.59 13.41 6 16 3.41z"></path></svg>`
            },
            "16": {
                metadata: { "moduleName": "StackLimitation16", "filepath": "stack-limitation/16.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 16, "height": 16 }, "content": [{ "elem": "path", "attrs": { "d": "M8 22H16V30H8zM24 12H20v2h4v2H21v2h3v2H20v2h4a2.0027 2.0027 0 002-2V14A2.0023 2.0023 0 0024 12zM16 20H8V12h8zm-6-2h4V14H10zM16 3.41L14.59 2 12 4.59 9.41 2 8 3.41 10.59 6 8 8.59 9.41 10 12 7.41 14.59 10 16 8.59 13.41 6 16 3.41z" } }], "name": "stack-limitation", "size": 16 }, "size": 16 },
                svg: `<svg focusable="false" preserveAspectRatio="xMidYMid meet" xmlns="http://www.w3.org/2000/svg" fill="currentColor" width="16" height="16" viewBox="0 0 32 32" aria-hidden="true"><path d="M8 22H16V30H8zM24 12H20v2h4v2H21v2h3v2H20v2h4a2.0027 2.0027 0 002-2V14A2.0023 2.0023 0 0024 12zM16 20H8V12h8zm-6-2h4V14H10zM16 3.41L14.59 2 12 4.59 9.41 2 8 3.41 10.59 6 8 8.59 9.41 10 12 7.41 14.59 10 16 8.59 13.41 6 16 3.41z"></path></svg>`
            },
        };
    }
    ngAfterViewInit() {
        const svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        const icon = this.icons[this.size];
        const domParser = new DOMParser();
        const rawSVG = icon.svg;
        const svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        let node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        const attributes = getAttributes({
            width: icon.metadata.descriptor.attrs.height,
            height: icon.metadata.descriptor.attrs.height,
            viewBox: icon.metadata.descriptor.attrs.viewBox,
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        const attrKeys = Object.keys(attributes);
        for (let i = 0; i < attrKeys.length; i++) {
            const key = attrKeys[i];
            const value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            const title = document.createElement("title");
            title.textContent = attributes.title;
            StackLimitationDirective_1.titleIdCounter++;
            title.setAttribute("id", `stack-limitation-${StackLimitationDirective_1.titleIdCounter}`);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", `stack-limitation-${StackLimitationDirective_1.titleIdCounter}`);
        }
    }
};
StackLimitationDirective.titleIdCounter = 0;
StackLimitationDirective.ctorParameters = () => [
    { type: ElementRef }
];
__decorate([
    Input(),
    __metadata("design:type", String)
], StackLimitationDirective.prototype, "ariaLabel", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], StackLimitationDirective.prototype, "ariaLabelledby", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], StackLimitationDirective.prototype, "ariaHidden", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], StackLimitationDirective.prototype, "title", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], StackLimitationDirective.prototype, "isFocusable", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], StackLimitationDirective.prototype, "size", void 0);
StackLimitationDirective = StackLimitationDirective_1 = __decorate([
    Directive({
        selector: "[ibmIconStackLimitation]"
    }),
    __metadata("design:paramtypes", [ElementRef])
], StackLimitationDirective);
export { StackLimitationDirective };
let StackLimitationModule = class StackLimitationModule {
};
StackLimitationModule = __decorate([
    NgModule({
        declarations: [
            StackLimitationComponent,
            StackLimitationDirective,
        ],
        exports: [
            StackLimitationComponent,
            StackLimitationDirective,
        ]
    })
], StackLimitationModule);
export { StackLimitationModule };
//# sourceMappingURL=data:application/json;base64,