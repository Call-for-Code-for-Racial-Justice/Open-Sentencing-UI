var DocumentWordProcessorReferenceDirective_1;
import { __decorate, __metadata } from "tslib";
import { NgModule, Component, Directive, ElementRef, Input, AfterViewInit } from "@angular/core";
import { getAttributes } from "@carbon/icon-helpers";
let DocumentWordProcessorReferenceComponent = class DocumentWordProcessorReferenceComponent {
    constructor() {
        this.focusable = false;
    }
};
__decorate([
    Input(),
    __metadata("design:type", String)
], DocumentWordProcessorReferenceComponent.prototype, "ariaLabel", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], DocumentWordProcessorReferenceComponent.prototype, "ariaLabelledby", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], DocumentWordProcessorReferenceComponent.prototype, "ariaHidden", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], DocumentWordProcessorReferenceComponent.prototype, "title", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], DocumentWordProcessorReferenceComponent.prototype, "focusable", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], DocumentWordProcessorReferenceComponent.prototype, "innerClass", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], DocumentWordProcessorReferenceComponent.prototype, "size", void 0);
DocumentWordProcessorReferenceComponent = __decorate([
    Component({
        selector: "ibm-icon-document-word-processor-reference",
        template: `
    <svg
      ibmIconDocumentWordProcessorReference
      [size]="size"
      [ariaLabel]="ariaLabel"
      [ariaLabelledby]="ariaLabelledby"
      [ariaHidden]="ariaHidden"
      [title]="title"
      [isFocusable]="focusable"
      [attr.class]="innerClass">
    </svg>
  `
    })
], DocumentWordProcessorReferenceComponent);
export { DocumentWordProcessorReferenceComponent };
let DocumentWordProcessorReferenceDirective = DocumentWordProcessorReferenceDirective_1 = class DocumentWordProcessorReferenceDirective {
    constructor(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
        this.icons = {
            "32": {
                metadata: { "moduleName": "DocumentWordProcessorReference32", "filepath": "document--word-processor--reference/32.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 32, "height": 32 }, "content": [{ "elem": "path", "attrs": { "d": "M28.3 20L27.391 28.611 26 20 24 20 22.609 28.611 21.7 20 20 20 21.36 30 23.64 30 25 21.626 26.36 30 28.64 30 30 20 28.3 20zM4 20L4 22 8.586 22 2 28.586 3.414 30 10 23.414 10 28 12 28 12 20 4 20zM25.707 9.293l-7-7A1 1 0 0018 2H8A2.002 2.002 0 006 4V16H8V4h8v6a2.002 2.002 0 002 2h6v4h2V10A1 1 0 0025.707 9.293zM18 10V4.4141L23.5859 10z" } }], "name": "document--word-processor--reference", "size": 32 }, "size": 32 },
                svg: `<svg focusable="false" preserveAspectRatio="xMidYMid meet" xmlns="http://www.w3.org/2000/svg" fill="currentColor" width="32" height="32" viewBox="0 0 32 32" aria-hidden="true"><path d="M28.3 20L27.391 28.611 26 20 24 20 22.609 28.611 21.7 20 20 20 21.36 30 23.64 30 25 21.626 26.36 30 28.64 30 30 20 28.3 20zM4 20L4 22 8.586 22 2 28.586 3.414 30 10 23.414 10 28 12 28 12 20 4 20zM25.707 9.293l-7-7A1 1 0 0018 2H8A2.002 2.002 0 006 4V16H8V4h8v6a2.002 2.002 0 002 2h6v4h2V10A1 1 0 0025.707 9.293zM18 10V4.4141L23.5859 10z"></path></svg>`
            },
            "24": {
                metadata: { "moduleName": "DocumentWordProcessorReference24", "filepath": "document--word-processor--reference/24.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 24, "height": 24 }, "content": [{ "elem": "path", "attrs": { "d": "M28.3 20L27.391 28.611 26 20 24 20 22.609 28.611 21.7 20 20 20 21.36 30 23.64 30 25 21.626 26.36 30 28.64 30 30 20 28.3 20zM4 20L4 22 8.586 22 2 28.586 3.414 30 10 23.414 10 28 12 28 12 20 4 20zM25.707 9.293l-7-7A1 1 0 0018 2H8A2.002 2.002 0 006 4V16H8V4h8v6a2.002 2.002 0 002 2h6v4h2V10A1 1 0 0025.707 9.293zM18 10V4.4141L23.5859 10z" } }], "name": "document--word-processor--reference", "size": 24 }, "size": 24 },
                svg: `<svg focusable="false" preserveAspectRatio="xMidYMid meet" xmlns="http://www.w3.org/2000/svg" fill="currentColor" width="24" height="24" viewBox="0 0 32 32" aria-hidden="true"><path d="M28.3 20L27.391 28.611 26 20 24 20 22.609 28.611 21.7 20 20 20 21.36 30 23.64 30 25 21.626 26.36 30 28.64 30 30 20 28.3 20zM4 20L4 22 8.586 22 2 28.586 3.414 30 10 23.414 10 28 12 28 12 20 4 20zM25.707 9.293l-7-7A1 1 0 0018 2H8A2.002 2.002 0 006 4V16H8V4h8v6a2.002 2.002 0 002 2h6v4h2V10A1 1 0 0025.707 9.293zM18 10V4.4141L23.5859 10z"></path></svg>`
            },
            "20": {
                metadata: { "moduleName": "DocumentWordProcessorReference20", "filepath": "document--word-processor--reference/20.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 20, "height": 20 }, "content": [{ "elem": "path", "attrs": { "d": "M28.3 20L27.391 28.611 26 20 24 20 22.609 28.611 21.7 20 20 20 21.36 30 23.64 30 25 21.626 26.36 30 28.64 30 30 20 28.3 20zM4 20L4 22 8.586 22 2 28.586 3.414 30 10 23.414 10 28 12 28 12 20 4 20zM25.707 9.293l-7-7A1 1 0 0018 2H8A2.002 2.002 0 006 4V16H8V4h8v6a2.002 2.002 0 002 2h6v4h2V10A1 1 0 0025.707 9.293zM18 10V4.4141L23.5859 10z" } }], "name": "document--word-processor--reference", "size": 20 }, "size": 20 },
                svg: `<svg focusable="false" preserveAspectRatio="xMidYMid meet" xmlns="http://www.w3.org/2000/svg" fill="currentColor" width="20" height="20" viewBox="0 0 32 32" aria-hidden="true"><path d="M28.3 20L27.391 28.611 26 20 24 20 22.609 28.611 21.7 20 20 20 21.36 30 23.64 30 25 21.626 26.36 30 28.64 30 30 20 28.3 20zM4 20L4 22 8.586 22 2 28.586 3.414 30 10 23.414 10 28 12 28 12 20 4 20zM25.707 9.293l-7-7A1 1 0 0018 2H8A2.002 2.002 0 006 4V16H8V4h8v6a2.002 2.002 0 002 2h6v4h2V10A1 1 0 0025.707 9.293zM18 10V4.4141L23.5859 10z"></path></svg>`
            },
            "16": {
                metadata: { "moduleName": "DocumentWordProcessorReference16", "filepath": "document--word-processor--reference/16.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 16, "height": 16 }, "content": [{ "elem": "path", "attrs": { "d": "M28.3 20L27.391 28.611 26 20 24 20 22.609 28.611 21.7 20 20 20 21.36 30 23.64 30 25 21.626 26.36 30 28.64 30 30 20 28.3 20zM4 20L4 22 8.586 22 2 28.586 3.414 30 10 23.414 10 28 12 28 12 20 4 20zM25.707 9.293l-7-7A1 1 0 0018 2H8A2.002 2.002 0 006 4V16H8V4h8v6a2.002 2.002 0 002 2h6v4h2V10A1 1 0 0025.707 9.293zM18 10V4.4141L23.5859 10z" } }], "name": "document--word-processor--reference", "size": 16 }, "size": 16 },
                svg: `<svg focusable="false" preserveAspectRatio="xMidYMid meet" xmlns="http://www.w3.org/2000/svg" fill="currentColor" width="16" height="16" viewBox="0 0 32 32" aria-hidden="true"><path d="M28.3 20L27.391 28.611 26 20 24 20 22.609 28.611 21.7 20 20 20 21.36 30 23.64 30 25 21.626 26.36 30 28.64 30 30 20 28.3 20zM4 20L4 22 8.586 22 2 28.586 3.414 30 10 23.414 10 28 12 28 12 20 4 20zM25.707 9.293l-7-7A1 1 0 0018 2H8A2.002 2.002 0 006 4V16H8V4h8v6a2.002 2.002 0 002 2h6v4h2V10A1 1 0 0025.707 9.293zM18 10V4.4141L23.5859 10z"></path></svg>`
            },
        };
    }
    ngAfterViewInit() {
        const svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        const icon = this.icons[this.size];
        const domParser = new DOMParser();
        const rawSVG = icon.svg;
        const svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        let node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        const attributes = getAttributes({
            width: icon.metadata.descriptor.attrs.height,
            height: icon.metadata.descriptor.attrs.height,
            viewBox: icon.metadata.descriptor.attrs.viewBox,
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        const attrKeys = Object.keys(attributes);
        for (let i = 0; i < attrKeys.length; i++) {
            const key = attrKeys[i];
            const value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            const title = document.createElement("title");
            title.textContent = attributes.title;
            DocumentWordProcessorReferenceDirective_1.titleIdCounter++;
            title.setAttribute("id", `document-word-processor-reference-${DocumentWordProcessorReferenceDirective_1.titleIdCounter}`);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", `document-word-processor-reference-${DocumentWordProcessorReferenceDirective_1.titleIdCounter}`);
        }
    }
};
DocumentWordProcessorReferenceDirective.titleIdCounter = 0;
DocumentWordProcessorReferenceDirective.ctorParameters = () => [
    { type: ElementRef }
];
__decorate([
    Input(),
    __metadata("design:type", String)
], DocumentWordProcessorReferenceDirective.prototype, "ariaLabel", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], DocumentWordProcessorReferenceDirective.prototype, "ariaLabelledby", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], DocumentWordProcessorReferenceDirective.prototype, "ariaHidden", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], DocumentWordProcessorReferenceDirective.prototype, "title", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], DocumentWordProcessorReferenceDirective.prototype, "isFocusable", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], DocumentWordProcessorReferenceDirective.prototype, "size", void 0);
DocumentWordProcessorReferenceDirective = DocumentWordProcessorReferenceDirective_1 = __decorate([
    Directive({
        selector: "[ibmIconDocumentWordProcessorReference]"
    }),
    __metadata("design:paramtypes", [ElementRef])
], DocumentWordProcessorReferenceDirective);
export { DocumentWordProcessorReferenceDirective };
let DocumentWordProcessorReferenceModule = class DocumentWordProcessorReferenceModule {
};
DocumentWordProcessorReferenceModule = __decorate([
    NgModule({
        declarations: [
            DocumentWordProcessorReferenceComponent,
            DocumentWordProcessorReferenceDirective,
        ],
        exports: [
            DocumentWordProcessorReferenceComponent,
            DocumentWordProcessorReferenceDirective,
        ]
    })
], DocumentWordProcessorReferenceModule);
export { DocumentWordProcessorReferenceModule };
//# sourceMappingURL=data:application/json;base64,