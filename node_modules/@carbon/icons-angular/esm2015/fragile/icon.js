var FragileDirective_1;
import { __decorate, __metadata } from "tslib";
import { NgModule, Component, Directive, ElementRef, Input, AfterViewInit } from "@angular/core";
import { getAttributes } from "@carbon/icon-helpers";
let FragileComponent = class FragileComponent {
    constructor() {
        this.focusable = false;
    }
};
__decorate([
    Input(),
    __metadata("design:type", String)
], FragileComponent.prototype, "ariaLabel", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], FragileComponent.prototype, "ariaLabelledby", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], FragileComponent.prototype, "ariaHidden", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], FragileComponent.prototype, "title", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], FragileComponent.prototype, "focusable", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], FragileComponent.prototype, "innerClass", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], FragileComponent.prototype, "size", void 0);
FragileComponent = __decorate([
    Component({
        selector: "ibm-icon-fragile",
        template: `
    <svg
      ibmIconFragile
      [size]="size"
      [ariaLabel]="ariaLabel"
      [ariaLabelledby]="ariaLabelledby"
      [ariaHidden]="ariaHidden"
      [title]="title"
      [isFocusable]="focusable"
      [attr.class]="innerClass">
    </svg>
  `
    })
], FragileComponent);
export { FragileComponent };
let FragileDirective = FragileDirective_1 = class FragileDirective {
    constructor(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
        this.icons = {
            "32": {
                metadata: { "moduleName": "Fragile32", "filepath": "fragile/32.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 32, "height": 32 }, "content": [{ "elem": "path", "attrs": { "d": "M23,12V6H21v6a5,5,0,0,1-10,0V4h5.5859L14.293,6.293a.9994.9994,0,0,0,0,1.414L15.5859,9,13.293,11.293l1.414,1.414,3-3a.9994.9994,0,0,0,0-1.414L16.4141,7,19.707,3.707A1,1,0,0,0,19,2H10A1,1,0,0,0,9,3v9a7.0053,7.0053,0,0,0,6,6.92V28H10v2H22V28H17V18.92A7.0053,7.0053,0,0,0,23,12Z" } }], "name": "fragile", "size": 32 }, "size": 32 },
                svg: `<svg focusable="false" preserveAspectRatio="xMidYMid meet" xmlns="http://www.w3.org/2000/svg" fill="currentColor" width="32" height="32" viewBox="0 0 32 32" aria-hidden="true"><path d="M23,12V6H21v6a5,5,0,0,1-10,0V4h5.5859L14.293,6.293a.9994.9994,0,0,0,0,1.414L15.5859,9,13.293,11.293l1.414,1.414,3-3a.9994.9994,0,0,0,0-1.414L16.4141,7,19.707,3.707A1,1,0,0,0,19,2H10A1,1,0,0,0,9,3v9a7.0053,7.0053,0,0,0,6,6.92V28H10v2H22V28H17V18.92A7.0053,7.0053,0,0,0,23,12Z"></path></svg>`
            },
            "24": {
                metadata: { "moduleName": "Fragile24", "filepath": "fragile/24.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 24, "height": 24 }, "content": [{ "elem": "path", "attrs": { "d": "M23,12V6H21v6a5,5,0,0,1-10,0V4h5.5859L14.293,6.293a.9994.9994,0,0,0,0,1.414L15.5859,9,13.293,11.293l1.414,1.414,3-3a.9994.9994,0,0,0,0-1.414L16.4141,7,19.707,3.707A1,1,0,0,0,19,2H10A1,1,0,0,0,9,3v9a7.0053,7.0053,0,0,0,6,6.92V28H10v2H22V28H17V18.92A7.0053,7.0053,0,0,0,23,12Z" } }], "name": "fragile", "size": 24 }, "size": 24 },
                svg: `<svg focusable="false" preserveAspectRatio="xMidYMid meet" xmlns="http://www.w3.org/2000/svg" fill="currentColor" width="24" height="24" viewBox="0 0 32 32" aria-hidden="true"><path d="M23,12V6H21v6a5,5,0,0,1-10,0V4h5.5859L14.293,6.293a.9994.9994,0,0,0,0,1.414L15.5859,9,13.293,11.293l1.414,1.414,3-3a.9994.9994,0,0,0,0-1.414L16.4141,7,19.707,3.707A1,1,0,0,0,19,2H10A1,1,0,0,0,9,3v9a7.0053,7.0053,0,0,0,6,6.92V28H10v2H22V28H17V18.92A7.0053,7.0053,0,0,0,23,12Z"></path></svg>`
            },
            "20": {
                metadata: { "moduleName": "Fragile20", "filepath": "fragile/20.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 20, "height": 20 }, "content": [{ "elem": "path", "attrs": { "d": "M23,12V6H21v6a5,5,0,0,1-10,0V4h5.5859L14.293,6.293a.9994.9994,0,0,0,0,1.414L15.5859,9,13.293,11.293l1.414,1.414,3-3a.9994.9994,0,0,0,0-1.414L16.4141,7,19.707,3.707A1,1,0,0,0,19,2H10A1,1,0,0,0,9,3v9a7.0053,7.0053,0,0,0,6,6.92V28H10v2H22V28H17V18.92A7.0053,7.0053,0,0,0,23,12Z" } }], "name": "fragile", "size": 20 }, "size": 20 },
                svg: `<svg focusable="false" preserveAspectRatio="xMidYMid meet" xmlns="http://www.w3.org/2000/svg" fill="currentColor" width="20" height="20" viewBox="0 0 32 32" aria-hidden="true"><path d="M23,12V6H21v6a5,5,0,0,1-10,0V4h5.5859L14.293,6.293a.9994.9994,0,0,0,0,1.414L15.5859,9,13.293,11.293l1.414,1.414,3-3a.9994.9994,0,0,0,0-1.414L16.4141,7,19.707,3.707A1,1,0,0,0,19,2H10A1,1,0,0,0,9,3v9a7.0053,7.0053,0,0,0,6,6.92V28H10v2H22V28H17V18.92A7.0053,7.0053,0,0,0,23,12Z"></path></svg>`
            },
            "16": {
                metadata: { "moduleName": "Fragile16", "filepath": "fragile/16.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 16, "height": 16 }, "content": [{ "elem": "path", "attrs": { "d": "M23,12V6H21v6a5,5,0,0,1-10,0V4h5.5859L14.293,6.293a.9994.9994,0,0,0,0,1.414L15.5859,9,13.293,11.293l1.414,1.414,3-3a.9994.9994,0,0,0,0-1.414L16.4141,7,19.707,3.707A1,1,0,0,0,19,2H10A1,1,0,0,0,9,3v9a7.0053,7.0053,0,0,0,6,6.92V28H10v2H22V28H17V18.92A7.0053,7.0053,0,0,0,23,12Z" } }], "name": "fragile", "size": 16 }, "size": 16 },
                svg: `<svg focusable="false" preserveAspectRatio="xMidYMid meet" xmlns="http://www.w3.org/2000/svg" fill="currentColor" width="16" height="16" viewBox="0 0 32 32" aria-hidden="true"><path d="M23,12V6H21v6a5,5,0,0,1-10,0V4h5.5859L14.293,6.293a.9994.9994,0,0,0,0,1.414L15.5859,9,13.293,11.293l1.414,1.414,3-3a.9994.9994,0,0,0,0-1.414L16.4141,7,19.707,3.707A1,1,0,0,0,19,2H10A1,1,0,0,0,9,3v9a7.0053,7.0053,0,0,0,6,6.92V28H10v2H22V28H17V18.92A7.0053,7.0053,0,0,0,23,12Z"></path></svg>`
            },
        };
    }
    ngAfterViewInit() {
        const svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        const icon = this.icons[this.size];
        const domParser = new DOMParser();
        const rawSVG = icon.svg;
        const svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        let node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        const attributes = getAttributes({
            width: icon.metadata.descriptor.attrs.height,
            height: icon.metadata.descriptor.attrs.height,
            viewBox: icon.metadata.descriptor.attrs.viewBox,
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        const attrKeys = Object.keys(attributes);
        for (let i = 0; i < attrKeys.length; i++) {
            const key = attrKeys[i];
            const value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            const title = document.createElement("title");
            title.textContent = attributes.title;
            FragileDirective_1.titleIdCounter++;
            title.setAttribute("id", `fragile-${FragileDirective_1.titleIdCounter}`);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", `fragile-${FragileDirective_1.titleIdCounter}`);
        }
    }
};
FragileDirective.titleIdCounter = 0;
FragileDirective.ctorParameters = () => [
    { type: ElementRef }
];
__decorate([
    Input(),
    __metadata("design:type", String)
], FragileDirective.prototype, "ariaLabel", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], FragileDirective.prototype, "ariaLabelledby", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], FragileDirective.prototype, "ariaHidden", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], FragileDirective.prototype, "title", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], FragileDirective.prototype, "isFocusable", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], FragileDirective.prototype, "size", void 0);
FragileDirective = FragileDirective_1 = __decorate([
    Directive({
        selector: "[ibmIconFragile]"
    }),
    __metadata("design:paramtypes", [ElementRef])
], FragileDirective);
export { FragileDirective };
let FragileModule = class FragileModule {
};
FragileModule = __decorate([
    NgModule({
        declarations: [
            FragileComponent,
            FragileDirective,
        ],
        exports: [
            FragileComponent,
            FragileDirective,
        ]
    })
], FragileModule);
export { FragileModule };
//# sourceMappingURL=data:application/json;base64,