var JoinOuterDirective_1;
import { __decorate, __metadata } from "tslib";
import { NgModule, Component, Directive, ElementRef, Input, AfterViewInit } from "@angular/core";
import { getAttributes } from "@carbon/icon-helpers";
let JoinOuterComponent = class JoinOuterComponent {
    constructor() {
        this.focusable = false;
    }
};
__decorate([
    Input(),
    __metadata("design:type", String)
], JoinOuterComponent.prototype, "ariaLabel", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], JoinOuterComponent.prototype, "ariaLabelledby", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], JoinOuterComponent.prototype, "ariaHidden", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], JoinOuterComponent.prototype, "title", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], JoinOuterComponent.prototype, "focusable", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], JoinOuterComponent.prototype, "innerClass", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], JoinOuterComponent.prototype, "size", void 0);
JoinOuterComponent = __decorate([
    Component({
        selector: "ibm-icon-join-outer",
        template: `
    <svg
      ibmIconJoinOuter
      [size]="size"
      [ariaLabel]="ariaLabel"
      [ariaLabelledby]="ariaLabelledby"
      [ariaHidden]="ariaHidden"
      [title]="title"
      [isFocusable]="focusable"
      [attr.class]="innerClass">
    </svg>
  `
    })
], JoinOuterComponent);
export { JoinOuterComponent };
let JoinOuterDirective = JoinOuterDirective_1 = class JoinOuterDirective {
    constructor(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
        this.icons = {
            "32": {
                metadata: { "moduleName": "JoinOuter32", "filepath": "join--outer/32.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 32, "height": 32 }, "content": [{ "elem": "path", "attrs": { "d": "M20 6a9.9539 9.9539 0 00-4 .8379 9.9953 9.9953 0 010 18.3242A9.9988 9.9988 0 1020 6zM10 16a9.9976 9.9976 0 016-9.1621 10 10 0 100 18.3242A9.9976 9.9976 0 0110 16z" } }], "name": "join--outer", "size": 32 }, "size": 32 },
                svg: `<svg focusable="false" preserveAspectRatio="xMidYMid meet" xmlns="http://www.w3.org/2000/svg" fill="currentColor" width="32" height="32" viewBox="0 0 32 32" aria-hidden="true"><path d="M20 6a9.9539 9.9539 0 00-4 .8379 9.9953 9.9953 0 010 18.3242A9.9988 9.9988 0 1020 6zM10 16a9.9976 9.9976 0 016-9.1621 10 10 0 100 18.3242A9.9976 9.9976 0 0110 16z"></path></svg>`
            },
            "24": {
                metadata: { "moduleName": "JoinOuter24", "filepath": "join--outer/24.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 24, "height": 24 }, "content": [{ "elem": "path", "attrs": { "d": "M20 6a9.9539 9.9539 0 00-4 .8379 9.9953 9.9953 0 010 18.3242A9.9988 9.9988 0 1020 6zM10 16a9.9976 9.9976 0 016-9.1621 10 10 0 100 18.3242A9.9976 9.9976 0 0110 16z" } }], "name": "join--outer", "size": 24 }, "size": 24 },
                svg: `<svg focusable="false" preserveAspectRatio="xMidYMid meet" xmlns="http://www.w3.org/2000/svg" fill="currentColor" width="24" height="24" viewBox="0 0 32 32" aria-hidden="true"><path d="M20 6a9.9539 9.9539 0 00-4 .8379 9.9953 9.9953 0 010 18.3242A9.9988 9.9988 0 1020 6zM10 16a9.9976 9.9976 0 016-9.1621 10 10 0 100 18.3242A9.9976 9.9976 0 0110 16z"></path></svg>`
            },
            "20": {
                metadata: { "moduleName": "JoinOuter20", "filepath": "join--outer/20.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 20, "height": 20 }, "content": [{ "elem": "path", "attrs": { "d": "M20 6a9.9539 9.9539 0 00-4 .8379 9.9953 9.9953 0 010 18.3242A9.9988 9.9988 0 1020 6zM10 16a9.9976 9.9976 0 016-9.1621 10 10 0 100 18.3242A9.9976 9.9976 0 0110 16z" } }], "name": "join--outer", "size": 20 }, "size": 20 },
                svg: `<svg focusable="false" preserveAspectRatio="xMidYMid meet" xmlns="http://www.w3.org/2000/svg" fill="currentColor" width="20" height="20" viewBox="0 0 32 32" aria-hidden="true"><path d="M20 6a9.9539 9.9539 0 00-4 .8379 9.9953 9.9953 0 010 18.3242A9.9988 9.9988 0 1020 6zM10 16a9.9976 9.9976 0 016-9.1621 10 10 0 100 18.3242A9.9976 9.9976 0 0110 16z"></path></svg>`
            },
            "16": {
                metadata: { "moduleName": "JoinOuter16", "filepath": "join--outer/16.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 16, "height": 16 }, "content": [{ "elem": "path", "attrs": { "d": "M20 6a9.9539 9.9539 0 00-4 .8379 9.9953 9.9953 0 010 18.3242A9.9988 9.9988 0 1020 6zM10 16a9.9976 9.9976 0 016-9.1621 10 10 0 100 18.3242A9.9976 9.9976 0 0110 16z" } }], "name": "join--outer", "size": 16 }, "size": 16 },
                svg: `<svg focusable="false" preserveAspectRatio="xMidYMid meet" xmlns="http://www.w3.org/2000/svg" fill="currentColor" width="16" height="16" viewBox="0 0 32 32" aria-hidden="true"><path d="M20 6a9.9539 9.9539 0 00-4 .8379 9.9953 9.9953 0 010 18.3242A9.9988 9.9988 0 1020 6zM10 16a9.9976 9.9976 0 016-9.1621 10 10 0 100 18.3242A9.9976 9.9976 0 0110 16z"></path></svg>`
            },
        };
    }
    ngAfterViewInit() {
        const svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        const icon = this.icons[this.size];
        const domParser = new DOMParser();
        const rawSVG = icon.svg;
        const svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        let node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        const attributes = getAttributes({
            width: icon.metadata.descriptor.attrs.height,
            height: icon.metadata.descriptor.attrs.height,
            viewBox: icon.metadata.descriptor.attrs.viewBox,
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        const attrKeys = Object.keys(attributes);
        for (let i = 0; i < attrKeys.length; i++) {
            const key = attrKeys[i];
            const value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            const title = document.createElement("title");
            title.textContent = attributes.title;
            JoinOuterDirective_1.titleIdCounter++;
            title.setAttribute("id", `join-outer-${JoinOuterDirective_1.titleIdCounter}`);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", `join-outer-${JoinOuterDirective_1.titleIdCounter}`);
        }
    }
};
JoinOuterDirective.titleIdCounter = 0;
JoinOuterDirective.ctorParameters = () => [
    { type: ElementRef }
];
__decorate([
    Input(),
    __metadata("design:type", String)
], JoinOuterDirective.prototype, "ariaLabel", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], JoinOuterDirective.prototype, "ariaLabelledby", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], JoinOuterDirective.prototype, "ariaHidden", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], JoinOuterDirective.prototype, "title", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], JoinOuterDirective.prototype, "isFocusable", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], JoinOuterDirective.prototype, "size", void 0);
JoinOuterDirective = JoinOuterDirective_1 = __decorate([
    Directive({
        selector: "[ibmIconJoinOuter]"
    }),
    __metadata("design:paramtypes", [ElementRef])
], JoinOuterDirective);
export { JoinOuterDirective };
let JoinOuterModule = class JoinOuterModule {
};
JoinOuterModule = __decorate([
    NgModule({
        declarations: [
            JoinOuterComponent,
            JoinOuterDirective,
        ],
        exports: [
            JoinOuterComponent,
            JoinOuterDirective,
        ]
    })
], JoinOuterModule);
export { JoinOuterModule };
//# sourceMappingURL=data:application/json;base64,