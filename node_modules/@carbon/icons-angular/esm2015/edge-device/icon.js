var EdgeDeviceDirective_1;
import { __decorate, __metadata } from "tslib";
import { NgModule, Component, Directive, ElementRef, Input, AfterViewInit } from "@angular/core";
import { getAttributes } from "@carbon/icon-helpers";
let EdgeDeviceComponent = class EdgeDeviceComponent {
    constructor() {
        this.focusable = false;
    }
};
__decorate([
    Input(),
    __metadata("design:type", String)
], EdgeDeviceComponent.prototype, "ariaLabel", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], EdgeDeviceComponent.prototype, "ariaLabelledby", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], EdgeDeviceComponent.prototype, "ariaHidden", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], EdgeDeviceComponent.prototype, "title", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], EdgeDeviceComponent.prototype, "focusable", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], EdgeDeviceComponent.prototype, "innerClass", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], EdgeDeviceComponent.prototype, "size", void 0);
EdgeDeviceComponent = __decorate([
    Component({
        selector: "ibm-icon-edge-device",
        template: `
    <svg
      ibmIconEdgeDevice
      [size]="size"
      [ariaLabel]="ariaLabel"
      [ariaLabelledby]="ariaLabelledby"
      [ariaHidden]="ariaHidden"
      [title]="title"
      [isFocusable]="focusable"
      [attr.class]="innerClass">
    </svg>
  `
    })
], EdgeDeviceComponent);
export { EdgeDeviceComponent };
let EdgeDeviceDirective = EdgeDeviceDirective_1 = class EdgeDeviceDirective {
    constructor(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
        this.icons = {
            "32": {
                metadata: { "moduleName": "EdgeDevice32", "filepath": "edge-device/32.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 32, "height": 32 }, "content": [{ "elem": "path", "attrs": { "d": "M9 21H23V23H9zM11 14a2 2 0 102 2A1.9806 1.9806 0 0011 14zM21 14a2 2 0 102 2A1.9806 1.9806 0 0021 14z" } }, { "elem": "path", "attrs": { "d": "M28,8H18.4141l2.0722-2.0723A2.04,2.04,0,0,0,21,6a2,2,0,1,0-2-2,2.0412,2.0412,0,0,0,.0723.5137L15.5859,8H4a2.0025,2.0025,0,0,0-2,2V26a2.0025,2.0025,0,0,0,2,2H28a2.0025,2.0025,0,0,0,2-2V10A2.0025,2.0025,0,0,0,28,8ZM4,26V10H28V26Z" } }], "name": "edge-device", "size": 32 }, "size": 32 },
                svg: `<svg focusable="false" preserveAspectRatio="xMidYMid meet" xmlns="http://www.w3.org/2000/svg" fill="currentColor" width="32" height="32" viewBox="0 0 32 32" aria-hidden="true"><path d="M9 21H23V23H9zM11 14a2 2 0 102 2A1.9806 1.9806 0 0011 14zM21 14a2 2 0 102 2A1.9806 1.9806 0 0021 14z"></path><path d="M28,8H18.4141l2.0722-2.0723A2.04,2.04,0,0,0,21,6a2,2,0,1,0-2-2,2.0412,2.0412,0,0,0,.0723.5137L15.5859,8H4a2.0025,2.0025,0,0,0-2,2V26a2.0025,2.0025,0,0,0,2,2H28a2.0025,2.0025,0,0,0,2-2V10A2.0025,2.0025,0,0,0,28,8ZM4,26V10H28V26Z"></path></svg>`
            },
            "24": {
                metadata: { "moduleName": "EdgeDevice24", "filepath": "edge-device/24.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 24, "height": 24 }, "content": [{ "elem": "path", "attrs": { "d": "M9 21H23V23H9zM11 14a2 2 0 102 2A1.9806 1.9806 0 0011 14zM21 14a2 2 0 102 2A1.9806 1.9806 0 0021 14z" } }, { "elem": "path", "attrs": { "d": "M28,8H18.4141l2.0722-2.0723A2.04,2.04,0,0,0,21,6a2,2,0,1,0-2-2,2.0412,2.0412,0,0,0,.0723.5137L15.5859,8H4a2.0025,2.0025,0,0,0-2,2V26a2.0025,2.0025,0,0,0,2,2H28a2.0025,2.0025,0,0,0,2-2V10A2.0025,2.0025,0,0,0,28,8ZM4,26V10H28V26Z" } }], "name": "edge-device", "size": 24 }, "size": 24 },
                svg: `<svg focusable="false" preserveAspectRatio="xMidYMid meet" xmlns="http://www.w3.org/2000/svg" fill="currentColor" width="24" height="24" viewBox="0 0 32 32" aria-hidden="true"><path d="M9 21H23V23H9zM11 14a2 2 0 102 2A1.9806 1.9806 0 0011 14zM21 14a2 2 0 102 2A1.9806 1.9806 0 0021 14z"></path><path d="M28,8H18.4141l2.0722-2.0723A2.04,2.04,0,0,0,21,6a2,2,0,1,0-2-2,2.0412,2.0412,0,0,0,.0723.5137L15.5859,8H4a2.0025,2.0025,0,0,0-2,2V26a2.0025,2.0025,0,0,0,2,2H28a2.0025,2.0025,0,0,0,2-2V10A2.0025,2.0025,0,0,0,28,8ZM4,26V10H28V26Z"></path></svg>`
            },
            "20": {
                metadata: { "moduleName": "EdgeDevice20", "filepath": "edge-device/20.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 20, "height": 20 }, "content": [{ "elem": "path", "attrs": { "d": "M9 21H23V23H9zM11 14a2 2 0 102 2A1.9806 1.9806 0 0011 14zM21 14a2 2 0 102 2A1.9806 1.9806 0 0021 14z" } }, { "elem": "path", "attrs": { "d": "M28,8H18.4141l2.0722-2.0723A2.04,2.04,0,0,0,21,6a2,2,0,1,0-2-2,2.0412,2.0412,0,0,0,.0723.5137L15.5859,8H4a2.0025,2.0025,0,0,0-2,2V26a2.0025,2.0025,0,0,0,2,2H28a2.0025,2.0025,0,0,0,2-2V10A2.0025,2.0025,0,0,0,28,8ZM4,26V10H28V26Z" } }], "name": "edge-device", "size": 20 }, "size": 20 },
                svg: `<svg focusable="false" preserveAspectRatio="xMidYMid meet" xmlns="http://www.w3.org/2000/svg" fill="currentColor" width="20" height="20" viewBox="0 0 32 32" aria-hidden="true"><path d="M9 21H23V23H9zM11 14a2 2 0 102 2A1.9806 1.9806 0 0011 14zM21 14a2 2 0 102 2A1.9806 1.9806 0 0021 14z"></path><path d="M28,8H18.4141l2.0722-2.0723A2.04,2.04,0,0,0,21,6a2,2,0,1,0-2-2,2.0412,2.0412,0,0,0,.0723.5137L15.5859,8H4a2.0025,2.0025,0,0,0-2,2V26a2.0025,2.0025,0,0,0,2,2H28a2.0025,2.0025,0,0,0,2-2V10A2.0025,2.0025,0,0,0,28,8ZM4,26V10H28V26Z"></path></svg>`
            },
            "16": {
                metadata: { "moduleName": "EdgeDevice16", "filepath": "edge-device/16.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 16, "height": 16 }, "content": [{ "elem": "path", "attrs": { "d": "M9 21H23V23H9zM11 14a2 2 0 102 2A1.9806 1.9806 0 0011 14zM21 14a2 2 0 102 2A1.9806 1.9806 0 0021 14z" } }, { "elem": "path", "attrs": { "d": "M28,8H18.4141l2.0722-2.0723A2.04,2.04,0,0,0,21,6a2,2,0,1,0-2-2,2.0412,2.0412,0,0,0,.0723.5137L15.5859,8H4a2.0025,2.0025,0,0,0-2,2V26a2.0025,2.0025,0,0,0,2,2H28a2.0025,2.0025,0,0,0,2-2V10A2.0025,2.0025,0,0,0,28,8ZM4,26V10H28V26Z" } }], "name": "edge-device", "size": 16 }, "size": 16 },
                svg: `<svg focusable="false" preserveAspectRatio="xMidYMid meet" xmlns="http://www.w3.org/2000/svg" fill="currentColor" width="16" height="16" viewBox="0 0 32 32" aria-hidden="true"><path d="M9 21H23V23H9zM11 14a2 2 0 102 2A1.9806 1.9806 0 0011 14zM21 14a2 2 0 102 2A1.9806 1.9806 0 0021 14z"></path><path d="M28,8H18.4141l2.0722-2.0723A2.04,2.04,0,0,0,21,6a2,2,0,1,0-2-2,2.0412,2.0412,0,0,0,.0723.5137L15.5859,8H4a2.0025,2.0025,0,0,0-2,2V26a2.0025,2.0025,0,0,0,2,2H28a2.0025,2.0025,0,0,0,2-2V10A2.0025,2.0025,0,0,0,28,8ZM4,26V10H28V26Z"></path></svg>`
            },
        };
    }
    ngAfterViewInit() {
        const svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        const icon = this.icons[this.size];
        const domParser = new DOMParser();
        const rawSVG = icon.svg;
        const svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        let node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        const attributes = getAttributes({
            width: icon.metadata.descriptor.attrs.height,
            height: icon.metadata.descriptor.attrs.height,
            viewBox: icon.metadata.descriptor.attrs.viewBox,
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        const attrKeys = Object.keys(attributes);
        for (let i = 0; i < attrKeys.length; i++) {
            const key = attrKeys[i];
            const value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            const title = document.createElement("title");
            title.textContent = attributes.title;
            EdgeDeviceDirective_1.titleIdCounter++;
            title.setAttribute("id", `edge-device-${EdgeDeviceDirective_1.titleIdCounter}`);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", `edge-device-${EdgeDeviceDirective_1.titleIdCounter}`);
        }
    }
};
EdgeDeviceDirective.titleIdCounter = 0;
EdgeDeviceDirective.ctorParameters = () => [
    { type: ElementRef }
];
__decorate([
    Input(),
    __metadata("design:type", String)
], EdgeDeviceDirective.prototype, "ariaLabel", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], EdgeDeviceDirective.prototype, "ariaLabelledby", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], EdgeDeviceDirective.prototype, "ariaHidden", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], EdgeDeviceDirective.prototype, "title", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], EdgeDeviceDirective.prototype, "isFocusable", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], EdgeDeviceDirective.prototype, "size", void 0);
EdgeDeviceDirective = EdgeDeviceDirective_1 = __decorate([
    Directive({
        selector: "[ibmIconEdgeDevice]"
    }),
    __metadata("design:paramtypes", [ElementRef])
], EdgeDeviceDirective);
export { EdgeDeviceDirective };
let EdgeDeviceModule = class EdgeDeviceModule {
};
EdgeDeviceModule = __decorate([
    NgModule({
        declarations: [
            EdgeDeviceComponent,
            EdgeDeviceDirective,
        ],
        exports: [
            EdgeDeviceComponent,
            EdgeDeviceDirective,
        ]
    })
], EdgeDeviceModule);
export { EdgeDeviceModule };
//# sourceMappingURL=data:application/json;base64,