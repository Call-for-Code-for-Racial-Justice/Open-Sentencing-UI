var PercentageFilledDirective_1;
import { __decorate, __metadata } from "tslib";
import { NgModule, Component, Directive, ElementRef, Input, AfterViewInit } from "@angular/core";
import { getAttributes } from "@carbon/icon-helpers";
let PercentageFilledComponent = class PercentageFilledComponent {
    constructor() {
        this.focusable = false;
    }
};
__decorate([
    Input(),
    __metadata("design:type", String)
], PercentageFilledComponent.prototype, "ariaLabel", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], PercentageFilledComponent.prototype, "ariaLabelledby", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], PercentageFilledComponent.prototype, "ariaHidden", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], PercentageFilledComponent.prototype, "title", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], PercentageFilledComponent.prototype, "focusable", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], PercentageFilledComponent.prototype, "innerClass", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], PercentageFilledComponent.prototype, "size", void 0);
PercentageFilledComponent = __decorate([
    Component({
        selector: "ibm-icon-percentage-filled",
        template: `
    <svg
      ibmIconPercentageFilled
      [size]="size"
      [ariaLabel]="ariaLabel"
      [ariaLabelledby]="ariaLabelledby"
      [ariaHidden]="ariaHidden"
      [title]="title"
      [isFocusable]="focusable"
      [attr.class]="innerClass">
    </svg>
  `
    })
], PercentageFilledComponent);
export { PercentageFilledComponent };
let PercentageFilledDirective = PercentageFilledDirective_1 = class PercentageFilledDirective {
    constructor(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
        this.icons = {
            "32": {
                metadata: { "moduleName": "PercentageFilled32", "filepath": "percentage--filled/32.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 32, "height": 32 }, "content": [{ "elem": "path", "attrs": { "d": "M9,14a5,5,0,1,1,5-5A5.0055,5.0055,0,0,1,9,14Z" } }, { "elem": "path", "attrs": { "d": "M0.029 15H31.97V17H0.029z", "transform": "rotate(-45 16 16)" } }, { "elem": "path", "attrs": { "d": "M23,28a5,5,0,1,1,5-5A5.0055,5.0055,0,0,1,23,28Z" } }], "name": "percentage--filled", "size": 32 }, "size": 32 },
                svg: `<svg focusable="false" preserveAspectRatio="xMidYMid meet" xmlns="http://www.w3.org/2000/svg" fill="currentColor" width="32" height="32" viewBox="0 0 32 32" aria-hidden="true"><path d="M9,14a5,5,0,1,1,5-5A5.0055,5.0055,0,0,1,9,14Z"></path><path d="M0.029 15H31.97V17H0.029z" transform="rotate(-45 16 16)"></path><path d="M23,28a5,5,0,1,1,5-5A5.0055,5.0055,0,0,1,23,28Z"></path></svg>`
            },
            "24": {
                metadata: { "moduleName": "PercentageFilled24", "filepath": "percentage--filled/24.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 24, "height": 24 }, "content": [{ "elem": "path", "attrs": { "d": "M9,14a5,5,0,1,1,5-5A5.0055,5.0055,0,0,1,9,14Z" } }, { "elem": "path", "attrs": { "d": "M0.029 15H31.97V17H0.029z", "transform": "rotate(-45 16 16)" } }, { "elem": "path", "attrs": { "d": "M23,28a5,5,0,1,1,5-5A5.0055,5.0055,0,0,1,23,28Z" } }], "name": "percentage--filled", "size": 24 }, "size": 24 },
                svg: `<svg focusable="false" preserveAspectRatio="xMidYMid meet" xmlns="http://www.w3.org/2000/svg" fill="currentColor" width="24" height="24" viewBox="0 0 32 32" aria-hidden="true"><path d="M9,14a5,5,0,1,1,5-5A5.0055,5.0055,0,0,1,9,14Z"></path><path d="M0.029 15H31.97V17H0.029z" transform="rotate(-45 16 16)"></path><path d="M23,28a5,5,0,1,1,5-5A5.0055,5.0055,0,0,1,23,28Z"></path></svg>`
            },
            "20": {
                metadata: { "moduleName": "PercentageFilled20", "filepath": "percentage--filled/20.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 20, "height": 20 }, "content": [{ "elem": "path", "attrs": { "d": "M9,14a5,5,0,1,1,5-5A5.0055,5.0055,0,0,1,9,14Z" } }, { "elem": "path", "attrs": { "d": "M0.029 15H31.97V17H0.029z", "transform": "rotate(-45 16 16)" } }, { "elem": "path", "attrs": { "d": "M23,28a5,5,0,1,1,5-5A5.0055,5.0055,0,0,1,23,28Z" } }], "name": "percentage--filled", "size": 20 }, "size": 20 },
                svg: `<svg focusable="false" preserveAspectRatio="xMidYMid meet" xmlns="http://www.w3.org/2000/svg" fill="currentColor" width="20" height="20" viewBox="0 0 32 32" aria-hidden="true"><path d="M9,14a5,5,0,1,1,5-5A5.0055,5.0055,0,0,1,9,14Z"></path><path d="M0.029 15H31.97V17H0.029z" transform="rotate(-45 16 16)"></path><path d="M23,28a5,5,0,1,1,5-5A5.0055,5.0055,0,0,1,23,28Z"></path></svg>`
            },
            "16": {
                metadata: { "moduleName": "PercentageFilled16", "filepath": "percentage--filled/16.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 16, "height": 16 }, "content": [{ "elem": "path", "attrs": { "d": "M9,14a5,5,0,1,1,5-5A5.0055,5.0055,0,0,1,9,14Z" } }, { "elem": "path", "attrs": { "d": "M0.029 15H31.97V17H0.029z", "transform": "rotate(-45 16 16)" } }, { "elem": "path", "attrs": { "d": "M23,28a5,5,0,1,1,5-5A5.0055,5.0055,0,0,1,23,28Z" } }], "name": "percentage--filled", "size": 16 }, "size": 16 },
                svg: `<svg focusable="false" preserveAspectRatio="xMidYMid meet" xmlns="http://www.w3.org/2000/svg" fill="currentColor" width="16" height="16" viewBox="0 0 32 32" aria-hidden="true"><path d="M9,14a5,5,0,1,1,5-5A5.0055,5.0055,0,0,1,9,14Z"></path><path d="M0.029 15H31.97V17H0.029z" transform="rotate(-45 16 16)"></path><path d="M23,28a5,5,0,1,1,5-5A5.0055,5.0055,0,0,1,23,28Z"></path></svg>`
            },
        };
    }
    ngAfterViewInit() {
        const svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        const icon = this.icons[this.size];
        const domParser = new DOMParser();
        const rawSVG = icon.svg;
        const svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        let node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        const attributes = getAttributes({
            width: icon.metadata.descriptor.attrs.height,
            height: icon.metadata.descriptor.attrs.height,
            viewBox: icon.metadata.descriptor.attrs.viewBox,
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        const attrKeys = Object.keys(attributes);
        for (let i = 0; i < attrKeys.length; i++) {
            const key = attrKeys[i];
            const value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            const title = document.createElement("title");
            title.textContent = attributes.title;
            PercentageFilledDirective_1.titleIdCounter++;
            title.setAttribute("id", `percentage-filled-${PercentageFilledDirective_1.titleIdCounter}`);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", `percentage-filled-${PercentageFilledDirective_1.titleIdCounter}`);
        }
    }
};
PercentageFilledDirective.titleIdCounter = 0;
PercentageFilledDirective.ctorParameters = () => [
    { type: ElementRef }
];
__decorate([
    Input(),
    __metadata("design:type", String)
], PercentageFilledDirective.prototype, "ariaLabel", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], PercentageFilledDirective.prototype, "ariaLabelledby", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], PercentageFilledDirective.prototype, "ariaHidden", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], PercentageFilledDirective.prototype, "title", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], PercentageFilledDirective.prototype, "isFocusable", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], PercentageFilledDirective.prototype, "size", void 0);
PercentageFilledDirective = PercentageFilledDirective_1 = __decorate([
    Directive({
        selector: "[ibmIconPercentageFilled]"
    }),
    __metadata("design:paramtypes", [ElementRef])
], PercentageFilledDirective);
export { PercentageFilledDirective };
let PercentageFilledModule = class PercentageFilledModule {
};
PercentageFilledModule = __decorate([
    NgModule({
        declarations: [
            PercentageFilledComponent,
            PercentageFilledDirective,
        ],
        exports: [
            PercentageFilledComponent,
            PercentageFilledDirective,
        ]
    })
], PercentageFilledModule);
export { PercentageFilledModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaWNvbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3RzL3BlcmNlbnRhZ2UtLWZpbGxlZC9pY29uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQ0EsT0FBTyxFQUNMLFFBQVEsRUFDUixTQUFTLEVBQ1QsU0FBUyxFQUNULFVBQVUsRUFDVixLQUFLLEVBQ0wsYUFBYSxFQUNkLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQWtCckQsSUFBYSx5QkFBeUIsR0FBdEMsTUFBYSx5QkFBeUI7SUFBdEM7UUFLVyxjQUFTLEdBQVksS0FBSyxDQUFDO0lBR3RDLENBQUM7Q0FBQSxDQUFBO0FBUFU7SUFBUixLQUFLLEVBQUU7OzREQUFtQjtBQUNsQjtJQUFSLEtBQUssRUFBRTs7aUVBQXdCO0FBQ3ZCO0lBQVIsS0FBSyxFQUFFOzs2REFBcUI7QUFDcEI7SUFBUixLQUFLLEVBQUU7O3dEQUFlO0FBQ2Q7SUFBUixLQUFLLEVBQUU7OzREQUE0QjtBQUMzQjtJQUFSLEtBQUssRUFBRTs7NkRBQW9CO0FBQ25CO0lBQVIsS0FBSyxFQUFFOzt1REFBYztBQVBYLHlCQUF5QjtJQWZyQyxTQUFTLENBQUM7UUFDVixRQUFRLEVBQUUsNEJBQTRCO1FBQ3JDLFFBQVEsRUFBRTs7Ozs7Ozs7Ozs7R0FXVDtLQUNGLENBQUM7R0FDVyx5QkFBeUIsQ0FRckM7U0FSWSx5QkFBeUI7QUFldEMsSUFBYSx5QkFBeUIsaUNBQXRDLE1BQWEseUJBQXlCO0lBa0NwQyxZQUFzQixVQUFzQjtRQUF0QixlQUFVLEdBQVYsVUFBVSxDQUFZO1FBM0JuQyxnQkFBVyxHQUFZLEtBQUssQ0FBQztRQUc1QixVQUFLLEdBQUc7WUFFbEIsSUFBSSxFQUFFO2dCQUNKLFFBQVEsRUFBRSxFQUFDLFlBQVksRUFBQyxvQkFBb0IsRUFBQyxVQUFVLEVBQUMsMEJBQTBCLEVBQUMsWUFBWSxFQUFDLEVBQUMsTUFBTSxFQUFDLEtB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ekIsc0JBQXNCIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQge1xuICBOZ01vZHVsZSxcbiAgQ29tcG9uZW50LFxuICBEaXJlY3RpdmUsXG4gIEVsZW1lbnRSZWYsXG4gIElucHV0LFxuICBBZnRlclZpZXdJbml0XG59IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5pbXBvcnQgeyBnZXRBdHRyaWJ1dGVzIH0gZnJvbSBcIkBjYXJib24vaWNvbi1oZWxwZXJzXCI7XG5cblxuQENvbXBvbmVudCh7XG5cdHNlbGVjdG9yOiBcImlibS1pY29uLXBlcmNlbnRhZ2UtZmlsbGVkXCIsXG4gIHRlbXBsYXRlOiBgXG4gICAgPHN2Z1xuICAgICAgaWJtSWNvblBlcmNlbnRhZ2VGaWxsZWRcbiAgICAgIFtzaXplXT1cInNpemVcIlxuICAgICAgW2FyaWFMYWJlbF09XCJhcmlhTGFiZWxcIlxuICAgICAgW2FyaWFMYWJlbGxlZGJ5XT1cImFyaWFMYWJlbGxlZGJ5XCJcbiAgICAgIFthcmlhSGlkZGVuXT1cImFyaWFIaWRkZW5cIlxuICAgICAgW3RpdGxlXT1cInRpdGxlXCJcbiAgICAgIFtpc0ZvY3VzYWJsZV09XCJmb2N1c2FibGVcIlxuICAgICAgW2F0dHIuY2xhc3NdPVwiaW5uZXJDbGFzc1wiPlxuICAgIDwvc3ZnPlxuICBgXG59KVxuZXhwb3J0IGNsYXNzIFBlcmNlbnRhZ2VGaWxsZWRDb21wb25lbnQge1xuICBASW5wdXQoKSBhcmlhTGFiZWw6IHN0cmluZztcbiAgQElucHV0KCkgYXJpYUxhYmVsbGVkYnk6IHN0cmluZztcbiAgQElucHV0KCkgYXJpYUhpZGRlbjogYm9vbGVhbjtcbiAgQElucHV0KCkgdGl0bGU6IHN0cmluZztcbiAgQElucHV0KCkgZm9jdXNhYmxlOiBib29sZWFuID0gZmFsc2U7XG4gIEBJbnB1dCgpIGlubmVyQ2xhc3M6IHN0cmluZztcbiAgQElucHV0KCkgc2l6ZTogc3RyaW5nO1xufVxuXG5cblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiBcIltpYm1JY29uUGVyY2VudGFnZUZpbGxlZF1cIlxufSlcbmV4cG9ydCBjbGFzcyBQZXJjZW50YWdlRmlsbGVkRGlyZWN0aXZlIGltcGxlbWVudHMgQWZ0ZXJWaWV3SW5pdCB7XG4gIHN0YXRpYyB0aXRsZUlkQ291bnRlciA9IDA7XG5cbiAgQElucHV0KCkgYXJpYUxhYmVsOiBzdHJpbmc7XG4gIEBJbnB1dCgpIGFyaWFMYWJlbGxlZGJ5OiBzdHJpbmc7XG4gIEBJbnB1dCgpIGFyaWFIaWRkZW46IGJvb2xlYW47XG4gIEBJbnB1dCgpIHRpdGxlOiBzdHJpbmc7XG4gIEBJbnB1dCgpIGlzRm9jdXNhYmxlOiBib29sZWFuID0gZmFsc2U7XG4gIEBJbnB1dCgpIHNpemU6IHN0cmluZztcblxuICBwcm90ZWN0ZWQgaWNvbnMgPSB7XG4gICAgXG4gIFwiMzJcIjoge1xuICAgIG1ldGFkYXRhOiB7XCJtb2R1bGVOYW1lXCI6XCJQZXJjZW50YWdlRmlsbGVkMzJcIixcImZpbGVwYXRoXCI6XCJwZXJjZW50YWdlLS1maWxsZWQvMzIuanNcIixcImRlc2NyaXB0b3JcIjp7XCJlbGVtXCI6XCJzdmdcIixcImF0dHJzXCI6e1wieG1sbnNcIjpcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIsXCJ2aWV3Qm94XCI6XCIwIDAgMzIgMzJcIixcImZpbGxcIjpcImN1cnJlbnRDb2xvclwiLFwid2lkdGhcIjozMixcImhlaWdodFwiOjMyfSxcImNvbnRlbnRcIjpbe1wiZWxlbVwiOlwicGF0aFwiLFwiYXR0cnNcIjp7XCJkXCI6XCJNOSwxNGE1LDUsMCwxLDEsNS01QTUuMDA1NSw1LjAwNTUsMCwwLDEsOSwxNFpcIn19LHtcImVsZW1cIjpcInBhdGhcIixcImF0dHJzXCI6e1wiZFwiOlwiTTAuMDI5IDE1SDMxLjk3VjE3SDAuMDI5elwiLFwidHJhbnNmb3JtXCI6XCJyb3RhdGUoLTQ1IDE2IDE2KVwifX0se1wiZWxlbVwiOlwicGF0aFwiLFwiYXR0cnNcIjp7XCJkXCI6XCJNMjMsMjhhNSw1LDAsMSwxLDUtNUE1LjAwNTUsNS4wMDU1LDAsMCwxLDIzLDI4WlwifX1dLFwibmFtZVwiOlwicGVyY2VudGFnZS0tZmlsbGVkXCIsXCJzaXplXCI6MzJ9LFwic2l6ZVwiOjMyfSxcbiAgICBzdmc6IGA8c3ZnIGZvY3VzYWJsZT1cImZhbHNlXCIgcHJlc2VydmVBc3BlY3RSYXRpbz1cInhNaWRZTWlkIG1lZXRcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgZmlsbD1cImN1cnJlbnRDb2xvclwiIHdpZHRoPVwiMzJcIiBoZWlnaHQ9XCIzMlwiIHZpZXdCb3g9XCIwIDAgMzIgMzJcIiBhcmlhLWhpZGRlbj1cInRydWVcIj48cGF0aCBkPVwiTTksMTRhNSw1LDAsMSwxLDUtNUE1LjAwNTUsNS4wMDU1LDAsMCwxLDksMTRaXCI+PC9wYXRoPjxwYXRoIGQ9XCJNMC4wMjkgMTVIMzEuOTdWMTdIMC4wMjl6XCIgdHJhbnNmb3JtPVwicm90YXRlKC00NSAxNiAxNilcIj48L3BhdGg+PHBhdGggZD1cIk0yMywyOGE1LDUsMCwxLDEsNS01QTUuMDA1NSw1LjAwNTUsMCwwLDEsMjMsMjhaXCI+PC9wYXRoPjwvc3ZnPmBcbiAgfSxcblxuICBcIjI0XCI6IHtcbiAgICBtZXRhZGF0YToge1wibW9kdWxlTmFtZVwiOlwiUGVyY2VudGFnZUZpbGxlZDI0XCIsXCJmaWxlcGF0aFwiOlwicGVyY2VudGFnZS0tZmlsbGVkLzI0LmpzXCIsXCJkZXNjcmlwdG9yXCI6e1wiZWxlbVwiOlwic3ZnXCIsXCJhdHRyc1wiOntcInhtbG5zXCI6XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLFwidmlld0JveFwiOlwiMCAwIDMyIDMyXCIsXCJmaWxsXCI6XCJjdXJyZW50Q29sb3JcIixcIndpZHRoXCI6MjQsXCJoZWlnaHRcIjoyNH0sXCJjb250ZW50XCI6W3tcImVsZW1cIjpcInBhdGhcIixcImF0dHJzXCI6e1wiZFwiOlwiTTksMTRhNSw1LDAsMSwxLDUtNUE1LjAwNTUsNS4wMDU1LDAsMCwxLDksMTRaXCJ9fSx7XCJlbGVtXCI6XCJwYXRoXCIsXCJhdHRyc1wiOntcImRcIjpcIk0wLjAyOSAxNUgzMS45N1YxN0gwLjAyOXpcIixcInRyYW5zZm9ybVwiOlwicm90YXRlKC00NSAxNiAxNilcIn19LHtcImVsZW1cIjpcInBhdGhcIixcImF0dHJzXCI6e1wiZFwiOlwiTTIzLDI4YTUsNSwwLDEsMSw1LTVBNS4wMDU1LDUuMDA1NSwwLDAsMSwyMywyOFpcIn19XSxcIm5hbWVcIjpcInBlcmNlbnRhZ2UtLWZpbGxlZFwiLFwic2l6ZVwiOjI0fSxcInNpemVcIjoyNH0sXG4gICAgc3ZnOiBgPHN2ZyBmb2N1c2FibGU9XCJmYWxzZVwiIHByZXNlcnZlQXNwZWN0UmF0aW89XCJ4TWlkWU1pZCBtZWV0XCIgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIGZpbGw9XCJjdXJyZW50Q29sb3JcIiB3aWR0aD1cIjI0XCIgaGVpZ2h0PVwiMjRcIiB2aWV3Qm94PVwiMCAwIDMyIDMyXCIgYXJpYS1oaWRkZW49XCJ0cnVlXCI+PHBhdGggZD1cIk05LDE0YTUsNSwwLDEsMSw1LTVBNS4wMDU1LDUuMDA1NSwwLDAsMSw5LDE0WlwiPjwvcGF0aD48cGF0aCBkPVwiTTAuMDI5IDE1SDMxLjk3VjE3SDAuMDI5elwiIHRyYW5zZm9ybT1cInJvdGF0ZSgtNDUgMTYgMTYpXCI+PC9wYXRoPjxwYXRoIGQ9XCJNMjMsMjhhNSw1LDAsMSwxLDUtNUE1LjAwNTUsNS4wMDU1LDAsMCwxLDIzLDI4WlwiPjwvcGF0aD48L3N2Zz5gXG4gIH0sXG5cbiAgXCIyMFwiOiB7XG4gICAgbWV0YWRhdGE6IHtcIm1vZHVsZU5hbWVcIjpcIlBlcmNlbnRhZ2VGaWxsZWQyMFwiLFwiZmlsZXBhdGhcIjpcInBlcmNlbnRhZ2UtLWZpbGxlZC8yMC5qc1wiLFwiZGVzY3JpcHRvclwiOntcImVsZW1cIjpcInN2Z1wiLFwiYXR0cnNcIjp7XCJ4bWxuc1wiOlwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIixcInZpZXdCb3hcIjpcIjAgMCAzMiAzMlwiLFwiZmlsbFwiOlwiY3VycmVudENvbG9yXCIsXCJ3aWR0aFwiOjIwLFwiaGVpZ2h0XCI6MjB9LFwiY29udGVudFwiOlt7XCJlbGVtXCI6XCJwYXRoXCIsXCJhdHRyc1wiOntcImRcIjpcIk05LDE0YTUsNSwwLDEsMSw1LTVBNS4wMDU1LDUuMDA1NSwwLDAsMSw5LDE0WlwifX0se1wiZWxlbVwiOlwicGF0aFwiLFwiYXR0cnNcIjp7XCJkXCI6XCJNMC4wMjkgMTVIMzEuOTdWMTdIMC4wMjl6XCIsXCJ0cmFuc2Zvcm1cIjpcInJvdGF0ZSgtNDUgMTYgMTYpXCJ9fSx7XCJlbGVtXCI6XCJwYXRoXCIsXCJhdHRyc1wiOntcImRcIjpcIk0yMywyOGE1LDUsMCwxLDEsNS01QTUuMDA1NSw1LjAwNTUsMCwwLDEsMjMsMjhaXCJ9fV0sXCJuYW1lXCI6XCJwZXJjZW50YWdlLS1maWxsZWRcIixcInNpemVcIjoyMH0sXCJzaXplXCI6MjB9LFxuICAgIHN2ZzogYDxzdmcgZm9jdXNhYmxlPVwiZmFsc2VcIiBwcmVzZXJ2ZUFzcGVjdFJhdGlvPVwieE1pZFlNaWQgbWVldFwiIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiBmaWxsPVwiY3VycmVudENvbG9yXCIgd2lkdGg9XCIyMFwiIGhlaWdodD1cIjIwXCIgdmlld0JveD1cIjAgMCAzMiAzMlwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiPjxwYXRoIGQ9XCJNOSwxNGE1LDUsMCwxLDEsNS01QTUuMDA1NSw1LjAwNTUsMCwwLDEsOSwxNFpcIj48L3BhdGg+PHBhdGggZD1cIk0wLjAyOSAxNUgzMS45N1YxN0gwLjAyOXpcIiB0cmFuc2Zvcm09XCJyb3RhdGUoLTQ1IDE2IDE2KVwiPjwvcGF0aD48cGF0aCBkPVwiTTIzLDI4YTUsNSwwLDEsMSw1LTVBNS4wMDU1LDUuMDA1NSwwLDAsMSwyMywyOFpcIj48L3BhdGg+PC9zdmc+YFxuICB9LFxuXG4gIFwiMTZcIjoge1xuICAgIG1ldGFkYXRhOiB7XCJtb2R1bGVOYW1lXCI6XCJQZXJjZW50YWdlRmlsbGVkMTZcIixcImZpbGVwYXRoXCI6XCJwZXJjZW50YWdlLS1maWxsZWQvMTYuanNcIixcImRlc2NyaXB0b3JcIjp7XCJlbGVtXCI6XCJzdmdcIixcImF0dHJzXCI6e1wieG1sbnNcIjpcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIsXCJ2aWV3Qm94XCI6XCIwIDAgMzIgMzJcIixcImZpbGxcIjpcImN1cnJlbnRDb2xvclwiLFwid2lkdGhcIjoxNixcImhlaWdodFwiOjE2fSxcImNvbnRlbnRcIjpbe1wiZWxlbVwiOlwicGF0aFwiLFwiYXR0cnNcIjp7XCJkXCI6XCJNOSwxNGE1LDUsMCwxLDEsNS01QTUuMDA1NSw1LjAwNTUsMCwwLDEsOSwxNFpcIn19LHtcImVsZW1cIjpcInBhdGhcIixcImF0dHJzXCI6e1wiZFwiOlwiTTAuMDI5IDE1SDMxLjk3VjE3SDAuMDI5elwiLFwidHJhbnNmb3JtXCI6XCJyb3RhdGUoLTQ1IDE2IDE2KVwifX0se1wiZWxlbVwiOlwicGF0aFwiLFwiYXR0cnNcIjp7XCJkXCI6XCJNMjMsMjhhNSw1LDAsMSwxLDUtNUE1LjAwNTUsNS4wMDU1LDAsMCwxLDIzLDI4WlwifX1dLFwibmFtZVwiOlwicGVyY2VudGFnZS0tZmlsbGVkXCIsXCJzaXplXCI6MTZ9LFwic2l6ZVwiOjE2fSxcbiAgICBzdmc6IGA8c3ZnIGZvY3VzYWJsZT1cImZhbHNlXCIgcHJlc2VydmVBc3BlY3RSYXRpbz1cInhNaWRZTWlkIG1lZXRcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgZmlsbD1cImN1cnJlbnRDb2xvclwiIHdpZHRoPVwiMTZcIiBoZWlnaHQ9XCIxNlwiIHZpZXdCb3g9XCIwIDAgMzIgMzJcIiBhcmlhLWhpZGRlbj1cInRydWVcIj48cGF0aCBkPVwiTTksMTRhNSw1LDAsMSwxLDUtNUE1LjAwNTUsNS4wMDU1LDAsMCwxLDksMTRaXCI+PC9wYXRoPjxwYXRoIGQ9XCJNMC4wMjkgMTVIMzEuOTdWMTdIMC4wMjl6XCIgdHJhbnNmb3JtPVwicm90YXRlKC00NSAxNiAxNilcIj48L3BhdGg+PHBhdGggZD1cIk0yMywyOGE1LDUsMCwxLDEsNS01QTUuMDA1NSw1LjAwNTUsMCwwLDEsMjMsMjhaXCI+PC9wYXRoPjwvc3ZnPmBcbiAgfSxcblxuICB9O1xuXG4gIGNvbnN0cnVjdG9yKHByb3RlY3RlZCBlbGVtZW50UmVmOiBFbGVtZW50UmVmKSB7fVxuXG5cdG5nQWZ0ZXJWaWV3SW5pdCgpIHtcbiAgICBjb25zdCBzdmcgPSB0aGlzLmVsZW1lbnRSZWYubmF0aXZlRWxlbWVudDtcbiAgICBzdmcuc2V0QXR0cmlidXRlKFwieG1sbnNcIiwgXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiKTtcblxuICAgIGNvbnN0IGljb24gPSB0aGlzLmljb25zW3RoaXMuc2l6ZV1cblxuICAgIGNvbnN0IGRvbVBhcnNlciA9IG5ldyBET01QYXJzZXIoKTtcbiAgICBjb25zdCByYXdTVkcgPSBpY29uLnN2ZztcbiAgICBjb25zdCBzdmdFbGVtZW50ID0gZG9tUGFyc2VyLnBhcnNlRnJvbVN0cmluZyhyYXdTVkcsIFwiaW1hZ2Uvc3ZnK3htbFwiKS5kb2N1bWVudEVsZW1lbnQ7XG5cbiAgICBsZXQgbm9kZSA9IHN2Z0VsZW1lbnQuZmlyc3RDaGlsZDtcbiAgICB3aGlsZSAobm9kZSkge1xuICAgICAgLy8gaW1wb3J0Tm9kZSBtYWtlcyBhIGNsb25lIG9mIHRoZSBub2RlXG4gICAgICAvLyB0aGlzIGVuc3VyZXMgd2Uga2VlcCBsb29waW5nIG92ZXIgdGhlIG5vZGVzIGluIHRoZSBwYXJzZWQgZG9jdW1lbnRcbiAgICAgIHN2Zy5hcHBlbmRDaGlsZChzdmcub3duZXJEb2N1bWVudC5pbXBvcnROb2RlKG5vZGUsIHRydWUpKTtcbiAgICAgIG5vZGUgPSBub2RlLm5leHRTaWJsaW5nO1xuICAgIH1cblxuICAgIGNvbnN0IGF0dHJpYnV0ZXMgPSBnZXRBdHRyaWJ1dGVzKHtcbiAgICAgIHdpZHRoOiBpY29uLm1ldGFkYXRhLmRlc2NyaXB0b3IuYXR0cnMuaGVpZ2h0LFxuICAgICAgaGVpZ2h0OiBpY29uLm1ldGFkYXRhLmRlc2NyaXB0b3IuYXR0cnMuaGVpZ2h0LFxuICAgICAgdmlld0JveDogaWNvbi5tZXRhZGF0YS5kZXNjcmlwdG9yLmF0dHJzLnZpZXdCb3gsXG4gICAgICB0aXRsZTogdGhpcy50aXRsZSxcbiAgICAgIFwiYXJpYS1sYWJlbFwiOiB0aGlzLmFyaWFMYWJlbCxcbiAgICAgIFwiYXJpYS1sYWJlbGxlZGJ5XCI6IHRoaXMuYXJpYUxhYmVsbGVkYnksXG4gICAgICBcImFyaWEtaGlkZGVuXCI6IHRoaXMuYXJpYUhpZGRlbixcbiAgICAgIGZvY3VzYWJsZTogdGhpcy5pc0ZvY3VzYWJsZS50b1N0cmluZygpXG4gICAgfSk7XG5cbiAgICBjb25zdCBhdHRyS2V5cyA9IE9iamVjdC5rZXlzKGF0dHJpYnV0ZXMpO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYXR0cktleXMubGVuZ3RoOyBpKyspIHtcbiAgICAgIGNvbnN0IGtleSA9IGF0dHJLZXlzW2ldO1xuICAgICAgY29uc3QgdmFsdWUgPSBhdHRyaWJ1dGVzW2tleV07XG4gICAgICBpZiAoa2V5ID09PSBcInRpdGxlXCIpIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG4gICAgICBpZiAodmFsdWUpIHtcbiAgICAgICAgc3ZnLnNldEF0dHJpYnV0ZShrZXksIHZhbHVlKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoYXR0cmlidXRlcy50aXRsZSkge1xuICAgICAgY29uc3QgdGl0bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwidGl0bGVcIik7XG4gICAgICB0aXRsZS50ZXh0Q29udGVudCA9IGF0dHJpYnV0ZXMudGl0bGU7XG4gICAgICBQZXJjZW50YWdlRmlsbGVkRGlyZWN0aXZlLnRpdGxlSWRDb3VudGVyKys7XG4gICAgICB0aXRsZS5zZXRBdHRyaWJ1dGUoXCJpZFwiLCBgcGVyY2VudGFnZS1maWxsZWQtJHtQZXJjZW50YWdlRmlsbGVkRGlyZWN0aXZlLnRpdGxlSWRDb3VudGVyfWApO1xuICAgICAgc3ZnLmFwcGVuZENoaWxkKHRpdGxlKTtcbiAgICAgIHN2Zy5zZXRBdHRyaWJ1dGUoXCJhcmlhLWxhYmVsbGVkYnlcIiwgYHBlcmNlbnRhZ2UtZmlsbGVkLSR7UGVyY2VudGFnZUZpbGxlZERpcmVjdGl2ZS50aXRsZUlkQ291bnRlcn1gKTtcbiAgICB9XG5cdH1cbn1cblxuXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtcbiAgICBcbiAgUGVyY2VudGFnZUZpbGxlZENvbXBvbmVudCxcbiAgUGVyY2VudGFnZUZpbGxlZERpcmVjdGl2ZSxcblxuICBdLFxuICBleHBvcnRzOiBbXG4gICAgXG4gIFBlcmNlbnRhZ2VGaWxsZWRDb21wb25lbnQsXG4gIFBlcmNlbnRhZ2VGaWxsZWREaXJlY3RpdmUsXG5cbiAgXVxufSlcbmV4cG9ydCBjbGFzcyBQZXJjZW50YWdlRmlsbGVkTW9kdWxlIHt9XG4iXX0=