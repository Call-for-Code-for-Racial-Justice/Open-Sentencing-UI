var VolumeDownDirective_1;
import { __decorate, __metadata } from "tslib";
import { NgModule, Component, Directive, ElementRef, Input, AfterViewInit } from "@angular/core";
import { getAttributes } from "@carbon/icon-helpers";
let VolumeDownComponent = class VolumeDownComponent {
    constructor() {
        this.focusable = false;
    }
};
__decorate([
    Input(),
    __metadata("design:type", String)
], VolumeDownComponent.prototype, "ariaLabel", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], VolumeDownComponent.prototype, "ariaLabelledby", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], VolumeDownComponent.prototype, "ariaHidden", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], VolumeDownComponent.prototype, "title", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], VolumeDownComponent.prototype, "focusable", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], VolumeDownComponent.prototype, "innerClass", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], VolumeDownComponent.prototype, "size", void 0);
VolumeDownComponent = __decorate([
    Component({
        selector: "ibm-icon-volume-down",
        template: `
    <svg
      ibmIconVolumeDown
      [size]="size"
      [ariaLabel]="ariaLabel"
      [ariaLabelledby]="ariaLabelledby"
      [ariaHidden]="ariaHidden"
      [title]="title"
      [isFocusable]="focusable"
      [attr.class]="innerClass">
    </svg>
  `
    })
], VolumeDownComponent);
export { VolumeDownComponent };
let VolumeDownDirective = VolumeDownDirective_1 = class VolumeDownDirective {
    constructor(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
        this.icons = {
            "32": {
                metadata: { "moduleName": "VolumeDown32", "filepath": "volume--down/32.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 32, "height": 32 }, "content": [{ "elem": "path", "attrs": { "d": "M25.1 10.66L23.58 12a6 6 0 01-.18 7.94l1.47 1.36a8 8 0 00.23-10.59zM20 30a1 1 0 01-.71-.3L11.67 22H5a1 1 0 01-1-1H4V11a1 1 0 011-1h6.67l7.62-7.7a1 1 0 011.41 0A1 1 0 0121 3V29A1 1 0 0120 30zM6 20h6a1.17 1.17 0 01.79.3L19 26.57V5.43L12.79 11.7A1.17 1.17 0 0112 12H6z" } }], "name": "volume--down", "size": 32 }, "size": 32 },
                svg: `<svg focusable="false" preserveAspectRatio="xMidYMid meet" xmlns="http://www.w3.org/2000/svg" fill="currentColor" width="32" height="32" viewBox="0 0 32 32" aria-hidden="true"><path d="M25.1 10.66L23.58 12a6 6 0 01-.18 7.94l1.47 1.36a8 8 0 00.23-10.59zM20 30a1 1 0 01-.71-.3L11.67 22H5a1 1 0 01-1-1H4V11a1 1 0 011-1h6.67l7.62-7.7a1 1 0 011.41 0A1 1 0 0121 3V29A1 1 0 0120 30zM6 20h6a1.17 1.17 0 01.79.3L19 26.57V5.43L12.79 11.7A1.17 1.17 0 0112 12H6z"></path></svg>`
            },
            "24": {
                metadata: { "moduleName": "VolumeDown24", "filepath": "volume--down/24.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 24, "height": 24 }, "content": [{ "elem": "path", "attrs": { "d": "M25.1 10.66L23.58 12a6 6 0 01-.18 7.94l1.47 1.36a8 8 0 00.23-10.59zM20 30a1 1 0 01-.71-.3L11.67 22H5a1 1 0 01-1-1H4V11a1 1 0 011-1h6.67l7.62-7.7a1 1 0 011.41 0A1 1 0 0121 3V29A1 1 0 0120 30zM6 20h6a1.17 1.17 0 01.79.3L19 26.57V5.43L12.79 11.7A1.17 1.17 0 0112 12H6z" } }], "name": "volume--down", "size": 24 }, "size": 24 },
                svg: `<svg focusable="false" preserveAspectRatio="xMidYMid meet" xmlns="http://www.w3.org/2000/svg" fill="currentColor" width="24" height="24" viewBox="0 0 32 32" aria-hidden="true"><path d="M25.1 10.66L23.58 12a6 6 0 01-.18 7.94l1.47 1.36a8 8 0 00.23-10.59zM20 30a1 1 0 01-.71-.3L11.67 22H5a1 1 0 01-1-1H4V11a1 1 0 011-1h6.67l7.62-7.7a1 1 0 011.41 0A1 1 0 0121 3V29A1 1 0 0120 30zM6 20h6a1.17 1.17 0 01.79.3L19 26.57V5.43L12.79 11.7A1.17 1.17 0 0112 12H6z"></path></svg>`
            },
            "20": {
                metadata: { "moduleName": "VolumeDown20", "filepath": "volume--down/20.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 20, "height": 20 }, "content": [{ "elem": "path", "attrs": { "d": "M25.1 10.66L23.58 12a6 6 0 01-.18 7.94l1.47 1.36a8 8 0 00.23-10.59zM20 30a1 1 0 01-.71-.3L11.67 22H5a1 1 0 01-1-1H4V11a1 1 0 011-1h6.67l7.62-7.7a1 1 0 011.41 0A1 1 0 0121 3V29A1 1 0 0120 30zM6 20h6a1.17 1.17 0 01.79.3L19 26.57V5.43L12.79 11.7A1.17 1.17 0 0112 12H6z" } }], "name": "volume--down", "size": 20 }, "size": 20 },
                svg: `<svg focusable="false" preserveAspectRatio="xMidYMid meet" xmlns="http://www.w3.org/2000/svg" fill="currentColor" width="20" height="20" viewBox="0 0 32 32" aria-hidden="true"><path d="M25.1 10.66L23.58 12a6 6 0 01-.18 7.94l1.47 1.36a8 8 0 00.23-10.59zM20 30a1 1 0 01-.71-.3L11.67 22H5a1 1 0 01-1-1H4V11a1 1 0 011-1h6.67l7.62-7.7a1 1 0 011.41 0A1 1 0 0121 3V29A1 1 0 0120 30zM6 20h6a1.17 1.17 0 01.79.3L19 26.57V5.43L12.79 11.7A1.17 1.17 0 0112 12H6z"></path></svg>`
            },
            "16": {
                metadata: { "moduleName": "VolumeDown16", "filepath": "volume--down/16.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 16, "height": 16 }, "content": [{ "elem": "path", "attrs": { "d": "M25.1 10.66L23.58 12a6 6 0 01-.18 7.94l1.47 1.36a8 8 0 00.23-10.59zM20 30a1 1 0 01-.71-.3L11.67 22H5a1 1 0 01-1-1H4V11a1 1 0 011-1h6.67l7.62-7.7a1 1 0 011.41 0A1 1 0 0121 3V29A1 1 0 0120 30zM6 20h6a1.17 1.17 0 01.79.3L19 26.57V5.43L12.79 11.7A1.17 1.17 0 0112 12H6z" } }], "name": "volume--down", "size": 16 }, "size": 16 },
                svg: `<svg focusable="false" preserveAspectRatio="xMidYMid meet" xmlns="http://www.w3.org/2000/svg" fill="currentColor" width="16" height="16" viewBox="0 0 32 32" aria-hidden="true"><path d="M25.1 10.66L23.58 12a6 6 0 01-.18 7.94l1.47 1.36a8 8 0 00.23-10.59zM20 30a1 1 0 01-.71-.3L11.67 22H5a1 1 0 01-1-1H4V11a1 1 0 011-1h6.67l7.62-7.7a1 1 0 011.41 0A1 1 0 0121 3V29A1 1 0 0120 30zM6 20h6a1.17 1.17 0 01.79.3L19 26.57V5.43L12.79 11.7A1.17 1.17 0 0112 12H6z"></path></svg>`
            },
        };
    }
    ngAfterViewInit() {
        const svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        const icon = this.icons[this.size];
        const domParser = new DOMParser();
        const rawSVG = icon.svg;
        const svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        let node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        const attributes = getAttributes({
            width: icon.metadata.descriptor.attrs.height,
            height: icon.metadata.descriptor.attrs.height,
            viewBox: icon.metadata.descriptor.attrs.viewBox,
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        const attrKeys = Object.keys(attributes);
        for (let i = 0; i < attrKeys.length; i++) {
            const key = attrKeys[i];
            const value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            const title = document.createElement("title");
            title.textContent = attributes.title;
            VolumeDownDirective_1.titleIdCounter++;
            title.setAttribute("id", `volume-down-${VolumeDownDirective_1.titleIdCounter}`);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", `volume-down-${VolumeDownDirective_1.titleIdCounter}`);
        }
    }
};
VolumeDownDirective.titleIdCounter = 0;
VolumeDownDirective.ctorParameters = () => [
    { type: ElementRef }
];
__decorate([
    Input(),
    __metadata("design:type", String)
], VolumeDownDirective.prototype, "ariaLabel", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], VolumeDownDirective.prototype, "ariaLabelledby", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], VolumeDownDirective.prototype, "ariaHidden", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], VolumeDownDirective.prototype, "title", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], VolumeDownDirective.prototype, "isFocusable", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], VolumeDownDirective.prototype, "size", void 0);
VolumeDownDirective = VolumeDownDirective_1 = __decorate([
    Directive({
        selector: "[ibmIconVolumeDown]"
    }),
    __metadata("design:paramtypes", [ElementRef])
], VolumeDownDirective);
export { VolumeDownDirective };
let VolumeDownModule = class VolumeDownModule {
};
VolumeDownModule = __decorate([
    NgModule({
        declarations: [
            VolumeDownComponent,
            VolumeDownDirective,
        ],
        exports: [
            VolumeDownComponent,
            VolumeDownDirective,
        ]
    })
], VolumeDownModule);
export { VolumeDownModule };
//# sourceMappingURL=data:application/json;base64,