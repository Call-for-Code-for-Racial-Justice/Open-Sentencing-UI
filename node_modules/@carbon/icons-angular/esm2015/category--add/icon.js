var CategoryAddDirective_1;
import { __decorate, __metadata } from "tslib";
import { NgModule, Component, Directive, ElementRef, Input, AfterViewInit } from "@angular/core";
import { getAttributes } from "@carbon/icon-helpers";
let CategoryAddComponent = class CategoryAddComponent {
    constructor() {
        this.focusable = false;
    }
};
__decorate([
    Input(),
    __metadata("design:type", String)
], CategoryAddComponent.prototype, "ariaLabel", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], CategoryAddComponent.prototype, "ariaLabelledby", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], CategoryAddComponent.prototype, "ariaHidden", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], CategoryAddComponent.prototype, "title", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], CategoryAddComponent.prototype, "focusable", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], CategoryAddComponent.prototype, "innerClass", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], CategoryAddComponent.prototype, "size", void 0);
CategoryAddComponent = __decorate([
    Component({
        selector: "ibm-icon-category-add",
        template: `
    <svg
      ibmIconCategoryAdd
      [size]="size"
      [ariaLabel]="ariaLabel"
      [ariaLabelledby]="ariaLabelledby"
      [ariaHidden]="ariaHidden"
      [title]="title"
      [isFocusable]="focusable"
      [attr.class]="innerClass">
    </svg>
  `
    })
], CategoryAddComponent);
export { CategoryAddComponent };
let CategoryAddDirective = CategoryAddDirective_1 = class CategoryAddDirective {
    constructor(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
        this.icons = {
            "32": {
                metadata: { "moduleName": "CategoryAdd32", "filepath": "category--add/32.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 32, "height": 32 }, "content": [{ "elem": "path", "attrs": { "d": "M15 6L13.59 7.41 17.17 11 13.59 14.59 15 16 20 11 15 6z" } }, { "elem": "path", "attrs": { "d": "M28,24H17V20h6a2.0027,2.0027,0,0,0,2-2V4a2.0023,2.0023,0,0,0-2-2H9A2.002,2.002,0,0,0,7,4V18a2.0023,2.0023,0,0,0,2,2h6v4H4a2,2,0,0,0-2,2v4H4V26H15v4h2V26H28v4h2V26A2,2,0,0,0,28,24ZM9,4H23l.002,14H9Z" } }], "name": "category--add", "size": 32 }, "size": 32 },
                svg: `<svg focusable="false" preserveAspectRatio="xMidYMid meet" xmlns="http://www.w3.org/2000/svg" fill="currentColor" width="32" height="32" viewBox="0 0 32 32" aria-hidden="true"><path d="M15 6L13.59 7.41 17.17 11 13.59 14.59 15 16 20 11 15 6z"></path><path d="M28,24H17V20h6a2.0027,2.0027,0,0,0,2-2V4a2.0023,2.0023,0,0,0-2-2H9A2.002,2.002,0,0,0,7,4V18a2.0023,2.0023,0,0,0,2,2h6v4H4a2,2,0,0,0-2,2v4H4V26H15v4h2V26H28v4h2V26A2,2,0,0,0,28,24ZM9,4H23l.002,14H9Z"></path></svg>`
            },
            "24": {
                metadata: { "moduleName": "CategoryAdd24", "filepath": "category--add/24.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 24, "height": 24 }, "content": [{ "elem": "path", "attrs": { "d": "M15 6L13.59 7.41 17.17 11 13.59 14.59 15 16 20 11 15 6z" } }, { "elem": "path", "attrs": { "d": "M28,24H17V20h6a2.0027,2.0027,0,0,0,2-2V4a2.0023,2.0023,0,0,0-2-2H9A2.002,2.002,0,0,0,7,4V18a2.0023,2.0023,0,0,0,2,2h6v4H4a2,2,0,0,0-2,2v4H4V26H15v4h2V26H28v4h2V26A2,2,0,0,0,28,24ZM9,4H23l.002,14H9Z" } }], "name": "category--add", "size": 24 }, "size": 24 },
                svg: `<svg focusable="false" preserveAspectRatio="xMidYMid meet" xmlns="http://www.w3.org/2000/svg" fill="currentColor" width="24" height="24" viewBox="0 0 32 32" aria-hidden="true"><path d="M15 6L13.59 7.41 17.17 11 13.59 14.59 15 16 20 11 15 6z"></path><path d="M28,24H17V20h6a2.0027,2.0027,0,0,0,2-2V4a2.0023,2.0023,0,0,0-2-2H9A2.002,2.002,0,0,0,7,4V18a2.0023,2.0023,0,0,0,2,2h6v4H4a2,2,0,0,0-2,2v4H4V26H15v4h2V26H28v4h2V26A2,2,0,0,0,28,24ZM9,4H23l.002,14H9Z"></path></svg>`
            },
            "20": {
                metadata: { "moduleName": "CategoryAdd20", "filepath": "category--add/20.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 20, "height": 20 }, "content": [{ "elem": "path", "attrs": { "d": "M15 6L13.59 7.41 17.17 11 13.59 14.59 15 16 20 11 15 6z" } }, { "elem": "path", "attrs": { "d": "M28,24H17V20h6a2.0027,2.0027,0,0,0,2-2V4a2.0023,2.0023,0,0,0-2-2H9A2.002,2.002,0,0,0,7,4V18a2.0023,2.0023,0,0,0,2,2h6v4H4a2,2,0,0,0-2,2v4H4V26H15v4h2V26H28v4h2V26A2,2,0,0,0,28,24ZM9,4H23l.002,14H9Z" } }], "name": "category--add", "size": 20 }, "size": 20 },
                svg: `<svg focusable="false" preserveAspectRatio="xMidYMid meet" xmlns="http://www.w3.org/2000/svg" fill="currentColor" width="20" height="20" viewBox="0 0 32 32" aria-hidden="true"><path d="M15 6L13.59 7.41 17.17 11 13.59 14.59 15 16 20 11 15 6z"></path><path d="M28,24H17V20h6a2.0027,2.0027,0,0,0,2-2V4a2.0023,2.0023,0,0,0-2-2H9A2.002,2.002,0,0,0,7,4V18a2.0023,2.0023,0,0,0,2,2h6v4H4a2,2,0,0,0-2,2v4H4V26H15v4h2V26H28v4h2V26A2,2,0,0,0,28,24ZM9,4H23l.002,14H9Z"></path></svg>`
            },
            "16": {
                metadata: { "moduleName": "CategoryAdd16", "filepath": "category--add/16.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 16, "height": 16 }, "content": [{ "elem": "path", "attrs": { "d": "M15 6L13.59 7.41 17.17 11 13.59 14.59 15 16 20 11 15 6z" } }, { "elem": "path", "attrs": { "d": "M28,24H17V20h6a2.0027,2.0027,0,0,0,2-2V4a2.0023,2.0023,0,0,0-2-2H9A2.002,2.002,0,0,0,7,4V18a2.0023,2.0023,0,0,0,2,2h6v4H4a2,2,0,0,0-2,2v4H4V26H15v4h2V26H28v4h2V26A2,2,0,0,0,28,24ZM9,4H23l.002,14H9Z" } }], "name": "category--add", "size": 16 }, "size": 16 },
                svg: `<svg focusable="false" preserveAspectRatio="xMidYMid meet" xmlns="http://www.w3.org/2000/svg" fill="currentColor" width="16" height="16" viewBox="0 0 32 32" aria-hidden="true"><path d="M15 6L13.59 7.41 17.17 11 13.59 14.59 15 16 20 11 15 6z"></path><path d="M28,24H17V20h6a2.0027,2.0027,0,0,0,2-2V4a2.0023,2.0023,0,0,0-2-2H9A2.002,2.002,0,0,0,7,4V18a2.0023,2.0023,0,0,0,2,2h6v4H4a2,2,0,0,0-2,2v4H4V26H15v4h2V26H28v4h2V26A2,2,0,0,0,28,24ZM9,4H23l.002,14H9Z"></path></svg>`
            },
        };
    }
    ngAfterViewInit() {
        const svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        const icon = this.icons[this.size];
        const domParser = new DOMParser();
        const rawSVG = icon.svg;
        const svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        let node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        const attributes = getAttributes({
            width: icon.metadata.descriptor.attrs.height,
            height: icon.metadata.descriptor.attrs.height,
            viewBox: icon.metadata.descriptor.attrs.viewBox,
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        const attrKeys = Object.keys(attributes);
        for (let i = 0; i < attrKeys.length; i++) {
            const key = attrKeys[i];
            const value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            const title = document.createElement("title");
            title.textContent = attributes.title;
            CategoryAddDirective_1.titleIdCounter++;
            title.setAttribute("id", `category-add-${CategoryAddDirective_1.titleIdCounter}`);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", `category-add-${CategoryAddDirective_1.titleIdCounter}`);
        }
    }
};
CategoryAddDirective.titleIdCounter = 0;
CategoryAddDirective.ctorParameters = () => [
    { type: ElementRef }
];
__decorate([
    Input(),
    __metadata("design:type", String)
], CategoryAddDirective.prototype, "ariaLabel", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], CategoryAddDirective.prototype, "ariaLabelledby", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], CategoryAddDirective.prototype, "ariaHidden", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], CategoryAddDirective.prototype, "title", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], CategoryAddDirective.prototype, "isFocusable", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], CategoryAddDirective.prototype, "size", void 0);
CategoryAddDirective = CategoryAddDirective_1 = __decorate([
    Directive({
        selector: "[ibmIconCategoryAdd]"
    }),
    __metadata("design:paramtypes", [ElementRef])
], CategoryAddDirective);
export { CategoryAddDirective };
let CategoryAddModule = class CategoryAddModule {
};
CategoryAddModule = __decorate([
    NgModule({
        declarations: [
            CategoryAddComponent,
            CategoryAddDirective,
        ],
        exports: [
            CategoryAddComponent,
            CategoryAddDirective,
        ]
    })
], CategoryAddModule);
export { CategoryAddModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaWNvbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3RzL2NhdGVnb3J5LS1hZGQvaWNvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUNBLE9BQU8sRUFDTCxRQUFRLEVBQ1IsU0FBUyxFQUNULFNBQVMsRUFDVCxVQUFVLEVBQ1YsS0FBSyxFQUNMLGFBQWEsRUFDZCxNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFrQnJELElBQWEsb0JBQW9CLEdBQWpDLE1BQWEsb0JBQW9CO0lBQWpDO1FBS1csY0FBUyxHQUFZLEtBQUssQ0FBQztJQUd0QyxDQUFDO0NBQUEsQ0FBQTtBQVBVO0lBQVIsS0FBSyxFQUFFOzt1REFBbUI7QUFDbEI7SUFBUixLQUFLLEVBQUU7OzREQUF3QjtBQUN2QjtJQUFSLEtBQUssRUFBRTs7d0RBQXFCO0FBQ3BCO0lBQVIsS0FBSyxFQUFFOzttREFBZTtBQUNkO0lBQVIsS0FBSyxFQUFFOzt1REFBNEI7QUFDM0I7SUFBUixLQUFLLEVBQUU7O3dEQUFvQjtBQUNuQjtJQUFSLEtBQUssRUFBRTs7a0RBQWM7QUFQWCxvQkFBb0I7SUFmaEMsU0FBUyxDQUFDO1FBQ1YsUUFBUSxFQUFFLHVCQUF1QjtRQUNoQyxRQUFRLEVBQUU7Ozs7Ozs7Ozs7O0dBV1Q7S0FDRixDQUFDO0dBQ1csb0JBQW9CLENBUWhDO1NBUlksb0JBQW9CO0FBZWpDLElBQWEsb0JBQW9CLDRCQUFqQyxNQUFhLG9CQUFvQjtJQWtDL0IsWUFBc0IsVUFBc0I7UUFBdEIsZUFBVSxHQUFWLFVBQVUsQ0FBWTtRQTNCbkMsZ0JBQVcsR0FBWSxLQUFLLENBQUM7UUFHNUIsVUFBSyxHQUFHO1lBRWxCLElBQUksRUFBRTtnQkFDSixRQUFRLEVBQUUsRUFBQyxZQUFZLEVBQUMsZUFBZSxFQUFDLFVBQVUsRUFBQyxxQkFBcUIsRUFBQyxZQUFZLEVBQUMsRUFBQyxNQUFNLEVBQUMsS0FBSyxFQUFD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RyxDQUFDLENBQUM7O1lBaUNRLFVBQVU7O0FBL0JuQztJQUFSLEtBQUssRUFBRTs7dURBQW1CO0FBQ2xCO0lBQVIsS0FBSyxFQUFFOzs0REFBd0I7QUFDdkI7SUFBUixLQUFLLEVBQUU7O3dEQUFxQjtBQUNwQjtJQUFSLEtBQUssRUFBRTs7bURBQWU7QUFDZDtJQUFSLEtBQUssRUFBRTs7eURBQThCO0FBQzdCO0lBQVIsS0FBSyxFQUFFOztrREFBYztBQVJYLG9CQUFvQjtJQUhoQyxTQUFTLENBQUM7UUFDVCxRQUFRLEVBQUUsc0JBQXNCO0tBQ2pDLENBQUM7cUNBbUNrQyxVQUFVO0dBbENqQyxvQkFBb0IsQ0FzRmhDO1NBdEZZLG9CQUFvQjtBQXVHakMsSUFBYSxpQkFBaUIsR0FBOUIsTUFBYSxpQkFBaUI7Q0FBRyxDQUFBO0FBQXBCLGlCQUFpQjtJQWQ3QixRQUFRLENBQUM7UUFDUixZQUFZLEVBQUU7WUFFZCxvQkFBb0I7WUFDcEIsb0JBQW9CO1NBRW5CO1FBQ0QsT0FBTyxFQUFFO1lBRVQsb0JBQW9CO1lBQ3BCLG9CQUFvQjtTQUVuQjtLQUNGLENBQUM7R0FDVyxpQkFBaUIsQ0FBRztTQUFwQixpQkFBaUIiLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCB7XG4gIE5nTW9kdWxlLFxuICBDb21wb25lbnQsXG4gIERpcmVjdGl2ZSxcbiAgRWxlbWVudFJlZixcbiAgSW5wdXQsXG4gIEFmdGVyVmlld0luaXRcbn0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7IGdldEF0dHJpYnV0ZXMgfSBmcm9tIFwiQGNhcmJvbi9pY29uLWhlbHBlcnNcIjtcblxuXG5AQ29tcG9uZW50KHtcblx0c2VsZWN0b3I6IFwiaWJtLWljb24tY2F0ZWdvcnktYWRkXCIsXG4gIHRlbXBsYXRlOiBgXG4gICAgPHN2Z1xuICAgICAgaWJtSWNvbkNhdGVnb3J5QWRkXG4gICAgICBbc2l6ZV09XCJzaXplXCJcbiAgICAgIFthcmlhTGFiZWxdPVwiYXJpYUxhYmVsXCJcbiAgICAgIFthcmlhTGFiZWxsZWRieV09XCJhcmlhTGFiZWxsZWRieVwiXG4gICAgICBbYXJpYUhpZGRlbl09XCJhcmlhSGlkZGVuXCJcbiAgICAgIFt0aXRsZV09XCJ0aXRsZVwiXG4gICAgICBbaXNGb2N1c2FibGVdPVwiZm9jdXNhYmxlXCJcbiAgICAgIFthdHRyLmNsYXNzXT1cImlubmVyQ2xhc3NcIj5cbiAgICA8L3N2Zz5cbiAgYFxufSlcbmV4cG9ydCBjbGFzcyBDYXRlZ29yeUFkZENvbXBvbmVudCB7XG4gIEBJbnB1dCgpIGFyaWFMYWJlbDogc3RyaW5nO1xuICBASW5wdXQoKSBhcmlhTGFiZWxsZWRieTogc3RyaW5nO1xuICBASW5wdXQoKSBhcmlhSGlkZGVuOiBib29sZWFuO1xuICBASW5wdXQoKSB0aXRsZTogc3RyaW5nO1xuICBASW5wdXQoKSBmb2N1c2FibGU6IGJvb2xlYW4gPSBmYWxzZTtcbiAgQElucHV0KCkgaW5uZXJDbGFzczogc3RyaW5nO1xuICBASW5wdXQoKSBzaXplOiBzdHJpbmc7XG59XG5cblxuXG5ARGlyZWN0aXZlKHtcbiAgc2VsZWN0b3I6IFwiW2libUljb25DYXRlZ29yeUFkZF1cIlxufSlcbmV4cG9ydCBjbGFzcyBDYXRlZ29yeUFkZERpcmVjdGl2ZSBpbXBsZW1lbnRzIEFmdGVyVmlld0luaXQge1xuICBzdGF0aWMgdGl0bGVJZENvdW50ZXIgPSAwO1xuXG4gIEBJbnB1dCgpIGFyaWFMYWJlbDogc3RyaW5nO1xuICBASW5wdXQoKSBhcmlhTGFiZWxsZWRieTogc3RyaW5nO1xuICBASW5wdXQoKSBhcmlhSGlkZGVuOiBib29sZWFuO1xuICBASW5wdXQoKSB0aXRsZTogc3RyaW5nO1xuICBASW5wdXQoKSBpc0ZvY3VzYWJsZTogYm9vbGVhbiA9IGZhbHNlO1xuICBASW5wdXQoKSBzaXplOiBzdHJpbmc7XG5cbiAgcHJvdGVjdGVkIGljb25zID0ge1xuICAgIFxuICBcIjMyXCI6IHtcbiAgICBtZXRhZGF0YToge1wibW9kdWxlTmFtZVwiOlwiQ2F0ZWdvcnlBZGQzMlwiLFwiZmlsZXBhdGhcIjpcImNhdGVnb3J5LS1hZGQvMzIuanNcIixcImRlc2NyaXB0b3JcIjp7XCJlbGVtXCI6XCJzdmdcIixcImF0dHJzXCI6e1wieG1sbnNcIjpcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIsXCJ2aWV3Qm94XCI6XCIwIDAgMzIgMzJcIixcImZpbGxcIjpcImN1cnJlbnRDb2xvclwiLFwid2lkdGhcIjozMixcImhlaWdodFwiOjMyfSxcImNvbnRlbnRcIjpbe1wiZWxlbVwiOlwicGF0aFwiLFwiYXR0cnNcIjp7XCJkXCI6XCJNMTUgNkwxMy41OSA3LjQxIDE3LjE3IDExIDEzLjU5IDE0LjU5IDE1IDE2IDIwIDExIDE1IDZ6XCJ9fSx7XCJlbGVtXCI6XCJwYXRoXCIsXCJhdHRyc1wiOntcImRcIjpcIk0yOCwyNEgxN1YyMGg2YTIuMDAyNywyLjAwMjcsMCwwLDAsMi0yVjRhMi4wMDIzLDIuMDAyMywwLDAsMC0yLTJIOUEyLjAwMiwyLjAwMiwwLDAsMCw3LDRWMThhMi4wMDIzLDIuMDAyMywwLDAsMCwyLDJoNnY0SDRhMiwyLDAsMCwwLTIsMnY0SDRWMjZIMTV2NGgyVjI2SDI4djRoMlYyNkEyLDIsMCwwLDAsMjgsMjRaTTksNEgyM2wuMDAyLDE0SDlaXCJ9fV0sXCJuYW1lXCI6XCJjYXRlZ29yeS0tYWRkXCIsXCJzaXplXCI6MzJ9LFwic2l6ZVwiOjMyfSxcbiAgICBzdmc6IGA8c3ZnIGZvY3VzYWJsZT1cImZhbHNlXCIgcHJlc2VydmVBc3BlY3RSYXRpbz1cInhNaWRZTWlkIG1lZXRcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgZmlsbD1cImN1cnJlbnRDb2xvclwiIHdpZHRoPVwiMzJcIiBoZWlnaHQ9XCIzMlwiIHZpZXdCb3g9XCIwIDAgMzIgMzJcIiBhcmlhLWhpZGRlbj1cInRydWVcIj48cGF0aCBkPVwiTTE1IDZMMTMuNTkgNy40MSAxNy4xNyAxMSAxMy41OSAxNC41OSAxNSAxNiAyMCAxMSAxNSA2elwiPjwvcGF0aD48cGF0aCBkPVwiTTI4LDI0SDE3VjIwaDZhMi4wMDI3LDIuMDAyNywwLDAsMCwyLTJWNGEyLjAwMjMsMi4wMDIzLDAsMCwwLTItMkg5QTIuMDAyLDIuMDAyLDAsMCwwLDcsNFYxOGEyLjAwMjMsMi4wMDIzLDAsMCwwLDIsMmg2djRINGEyLDIsMCwwLDAtMiwydjRINFYyNkgxNXY0aDJWMjZIMjh2NGgyVjI2QTIsMiwwLDAsMCwyOCwyNFpNOSw0SDIzbC4wMDIsMTRIOVpcIj48L3BhdGg+PC9zdmc+YFxuICB9LFxuXG4gIFwiMjRcIjoge1xuICAgIG1ldGFkYXRhOiB7XCJtb2R1bGVOYW1lXCI6XCJDYXRlZ29yeUFkZDI0XCIsXCJmaWxlcGF0aFwiOlwiY2F0ZWdvcnktLWFkZC8yNC5qc1wiLFwiZGVzY3JpcHRvclwiOntcImVsZW1cIjpcInN2Z1wiLFwiYXR0cnNcIjp7XCJ4bWxuc1wiOlwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIixcInZpZXdCb3hcIjpcIjAgMCAzMiAzMlwiLFwiZmlsbFwiOlwiY3VycmVudENvbG9yXCIsXCJ3aWR0aFwiOjI0LFwiaGVpZ2h0XCI6MjR9LFwiY29udGVudFwiOlt7XCJlbGVtXCI6XCJwYXRoXCIsXCJhdHRyc1wiOntcImRcIjpcIk0xNSA2TDEzLjU5IDcuNDEgMTcuMTcgMTEgMTMuNTkgMTQuNTkgMTUgMTYgMjAgMTEgMTUgNnpcIn19LHtcImVsZW1cIjpcInBhdGhcIixcImF0dHJzXCI6e1wiZFwiOlwiTTI4LDI0SDE3VjIwaDZhMi4wMDI3LDIuMDAyNywwLDAsMCwyLTJWNGEyLjAwMjMsMi4wMDIzLDAsMCwwLTItMkg5QTIuMDAyLDIuMDAyLDAsMCwwLDcsNFYxOGEyLjAwMjMsMi4wMDIzLDAsMCwwLDIsMmg2djRINGEyLDIsMCwwLDAtMiwydjRINFYyNkgxNXY0aDJWMjZIMjh2NGgyVjI2QTIsMiwwLDAsMCwyOCwyNFpNOSw0SDIzbC4wMDIsMTRIOVpcIn19XSxcIm5hbWVcIjpcImNhdGVnb3J5LS1hZGRcIixcInNpemVcIjoyNH0sXCJzaXplXCI6MjR9LFxuICAgIHN2ZzogYDxzdmcgZm9jdXNhYmxlPVwiZmFsc2VcIiBwcmVzZXJ2ZUFzcGVjdFJhdGlvPVwieE1pZFlNaWQgbWVldFwiIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiBmaWxsPVwiY3VycmVudENvbG9yXCIgd2lkdGg9XCIyNFwiIGhlaWdodD1cIjI0XCIgdmlld0JveD1cIjAgMCAzMiAzMlwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiPjxwYXRoIGQ9XCJNMTUgNkwxMy41OSA3LjQxIDE3LjE3IDExIDEzLjU5IDE0LjU5IDE1IDE2IDIwIDExIDE1IDZ6XCI+PC9wYXRoPjxwYXRoIGQ9XCJNMjgsMjRIMTdWMjBoNmEyLjAwMjcsMi4wMDI3LDAsMCwwLDItMlY0YTIuMDAyMywyLjAwMjMsMCwwLDAtMi0ySDlBMi4wMDIsMi4wMDIsMCwwLDAsNyw0VjE4YTIuMDAyMywyLjAwMjMsMCwwLDAsMiwyaDZ2NEg0YTIsMiwwLDAsMC0yLDJ2NEg0VjI2SDE1djRoMlYyNkgyOHY0aDJWMjZBMiwyLDAsMCwwLDI4LDI0Wk05LDRIMjNsLjAwMiwxNEg5WlwiPjwvcGF0aD48L3N2Zz5gXG4gIH0sXG5cbiAgXCIyMFwiOiB7XG4gICAgbWV0YWRhdGE6IHtcIm1vZHVsZU5hbWVcIjpcIkNhdGVnb3J5QWRkMjBcIixcImZpbGVwYXRoXCI6XCJjYXRlZ29yeS0tYWRkLzIwLmpzXCIsXCJkZXNjcmlwdG9yXCI6e1wiZWxlbVwiOlwic3ZnXCIsXCJhdHRyc1wiOntcInhtbG5zXCI6XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLFwidmlld0JveFwiOlwiMCAwIDMyIDMyXCIsXCJmaWxsXCI6XCJjdXJyZW50Q29sb3JcIixcIndpZHRoXCI6MjAsXCJoZWlnaHRcIjoyMH0sXCJjb250ZW50XCI6W3tcImVsZW1cIjpcInBhdGhcIixcImF0dHJzXCI6e1wiZFwiOlwiTTE1IDZMMTMuNTkgNy40MSAxNy4xNyAxMSAxMy41OSAxNC41OSAxNSAxNiAyMCAxMSAxNSA2elwifX0se1wiZWxlbVwiOlwicGF0aFwiLFwiYXR0cnNcIjp7XCJkXCI6XCJNMjgsMjRIMTdWMjBoNmEyLjAwMjcsMi4wMDI3LDAsMCwwLDItMlY0YTIuMDAyMywyLjAwMjMsMCwwLDAtMi0ySDlBMi4wMDIsMi4wMDIsMCwwLDAsNyw0VjE4YTIuMDAyMywyLjAwMjMsMCwwLDAsMiwyaDZ2NEg0YTIsMiwwLDAsMC0yLDJ2NEg0VjI2SDE1djRoMlYyNkgyOHY0aDJWMjZBMiwyLDAsMCwwLDI4LDI0Wk05LDRIMjNsLjAwMiwxNEg5WlwifX1dLFwibmFtZVwiOlwiY2F0ZWdvcnktLWFkZFwiLFwic2l6ZVwiOjIwfSxcInNpemVcIjoyMH0sXG4gICAgc3ZnOiBgPHN2ZyBmb2N1c2FibGU9XCJmYWxzZVwiIHByZXNlcnZlQXNwZWN0UmF0aW89XCJ4TWlkWU1pZCBtZWV0XCIgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIGZpbGw9XCJjdXJyZW50Q29sb3JcIiB3aWR0aD1cIjIwXCIgaGVpZ2h0PVwiMjBcIiB2aWV3Qm94PVwiMCAwIDMyIDMyXCIgYXJpYS1oaWRkZW49XCJ0cnVlXCI+PHBhdGggZD1cIk0xNSA2TDEzLjU5IDcuNDEgMTcuMTcgMTEgMTMuNTkgMTQuNTkgMTUgMTYgMjAgMTEgMTUgNnpcIj48L3BhdGg+PHBhdGggZD1cIk0yOCwyNEgxN1YyMGg2YTIuMDAyNywyLjAwMjcsMCwwLDAsMi0yVjRhMi4wMDIzLDIuMDAyMywwLDAsMC0yLTJIOUEyLjAwMiwyLjAwMiwwLDAsMCw3LDRWMThhMi4wMDIzLDIuMDAyMywwLDAsMCwyLDJoNnY0SDRhMiwyLDAsMCwwLTIsMnY0SDRWMjZIMTV2NGgyVjI2SDI4djRoMlYyNkEyLDIsMCwwLDAsMjgsMjRaTTksNEgyM2wuMDAyLDE0SDlaXCI+PC9wYXRoPjwvc3ZnPmBcbiAgfSxcblxuICBcIjE2XCI6IHtcbiAgICBtZXRhZGF0YToge1wibW9kdWxlTmFtZVwiOlwiQ2F0ZWdvcnlBZGQxNlwiLFwiZmlsZXBhdGhcIjpcImNhdGVnb3J5LS1hZGQvMTYuanNcIixcImRlc2NyaXB0b3JcIjp7XCJlbGVtXCI6XCJzdmdcIixcImF0dHJzXCI6e1wieG1sbnNcIjpcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIsXCJ2aWV3Qm94XCI6XCIwIDAgMzIgMzJcIixcImZpbGxcIjpcImN1cnJlbnRDb2xvclwiLFwid2lkdGhcIjoxNixcImhlaWdodFwiOjE2fSxcImNvbnRlbnRcIjpbe1wiZWxlbVwiOlwicGF0aFwiLFwiYXR0cnNcIjp7XCJkXCI6XCJNMTUgNkwxMy41OSA3LjQxIDE3LjE3IDExIDEzLjU5IDE0LjU5IDE1IDE2IDIwIDExIDE1IDZ6XCJ9fSx7XCJlbGVtXCI6XCJwYXRoXCIsXCJhdHRyc1wiOntcImRcIjpcIk0yOCwyNEgxN1YyMGg2YTIuMDAyNywyLjAwMjcsMCwwLDAsMi0yVjRhMi4wMDIzLDIuMDAyMywwLDAsMC0yLTJIOUEyLjAwMiwyLjAwMiwwLDAsMCw3LDRWMThhMi4wMDIzLDIuMDAyMywwLDAsMCwyLDJoNnY0SDRhMiwyLDAsMCwwLTIsMnY0SDRWMjZIMTV2NGgyVjI2SDI4djRoMlYyNkEyLDIsMCwwLDAsMjgsMjRaTTksNEgyM2wuMDAyLDE0SDlaXCJ9fV0sXCJuYW1lXCI6XCJjYXRlZ29yeS0tYWRkXCIsXCJzaXplXCI6MTZ9LFwic2l6ZVwiOjE2fSxcbiAgICBzdmc6IGA8c3ZnIGZvY3VzYWJsZT1cImZhbHNlXCIgcHJlc2VydmVBc3BlY3RSYXRpbz1cInhNaWRZTWlkIG1lZXRcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgZmlsbD1cImN1cnJlbnRDb2xvclwiIHdpZHRoPVwiMTZcIiBoZWlnaHQ9XCIxNlwiIHZpZXdCb3g9XCIwIDAgMzIgMzJcIiBhcmlhLWhpZGRlbj1cInRydWVcIj48cGF0aCBkPVwiTTE1IDZMMTMuNTkgNy40MSAxNy4xNyAxMSAxMy41OSAxNC41OSAxNSAxNiAyMCAxMSAxNSA2elwiPjwvcGF0aD48cGF0aCBkPVwiTTI4LDI0SDE3VjIwaDZhMi4wMDI3LDIuMDAyNywwLDAsMCwyLTJWNGEyLjAwMjMsMi4wMDIzLDAsMCwwLTItMkg5QTIuMDAyLDIuMDAyLDAsMCwwLDcsNFYxOGEyLjAwMjMsMi4wMDIzLDAsMCwwLDIsMmg2djRINGEyLDIsMCwwLDAtMiwydjRINFYyNkgxNXY0aDJWMjZIMjh2NGgyVjI2QTIsMiwwLDAsMCwyOCwyNFpNOSw0SDIzbC4wMDIsMTRIOVpcIj48L3BhdGg+PC9zdmc+YFxuICB9LFxuXG4gIH07XG5cbiAgY29uc3RydWN0b3IocHJvdGVjdGVkIGVsZW1lbnRSZWY6IEVsZW1lbnRSZWYpIHt9XG5cblx0bmdBZnRlclZpZXdJbml0KCkge1xuICAgIGNvbnN0IHN2ZyA9IHRoaXMuZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50O1xuICAgIHN2Zy5zZXRBdHRyaWJ1dGUoXCJ4bWxuc1wiLCBcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIpO1xuXG4gICAgY29uc3QgaWNvbiA9IHRoaXMuaWNvbnNbdGhpcy5zaXplXVxuXG4gICAgY29uc3QgZG9tUGFyc2VyID0gbmV3IERPTVBhcnNlcigpO1xuICAgIGNvbnN0IHJhd1NWRyA9IGljb24uc3ZnO1xuICAgIGNvbnN0IHN2Z0VsZW1lbnQgPSBkb21QYXJzZXIucGFyc2VGcm9tU3RyaW5nKHJhd1NWRywgXCJpbWFnZS9zdmcreG1sXCIpLmRvY3VtZW50RWxlbWVudDtcblxuICAgIGxldCBub2RlID0gc3ZnRWxlbWVudC5maXJzdENoaWxkO1xuICAgIHdoaWxlIChub2RlKSB7XG4gICAgICAvLyBpbXBvcnROb2RlIG1ha2VzIGEgY2xvbmUgb2YgdGhlIG5vZGVcbiAgICAgIC8vIHRoaXMgZW5zdXJlcyB3ZSBrZWVwIGxvb3Bpbmcgb3ZlciB0aGUgbm9kZXMgaW4gdGhlIHBhcnNlZCBkb2N1bWVudFxuICAgICAgc3ZnLmFwcGVuZENoaWxkKHN2Zy5vd25lckRvY3VtZW50LmltcG9ydE5vZGUobm9kZSwgdHJ1ZSkpO1xuICAgICAgbm9kZSA9IG5vZGUubmV4dFNpYmxpbmc7XG4gICAgfVxuXG4gICAgY29uc3QgYXR0cmlidXRlcyA9IGdldEF0dHJpYnV0ZXMoe1xuICAgICAgd2lkdGg6IGljb24ubWV0YWRhdGEuZGVzY3JpcHRvci5hdHRycy5oZWlnaHQsXG4gICAgICBoZWlnaHQ6IGljb24ubWV0YWRhdGEuZGVzY3JpcHRvci5hdHRycy5oZWlnaHQsXG4gICAgICB2aWV3Qm94OiBpY29uLm1ldGFkYXRhLmRlc2NyaXB0b3IuYXR0cnMudmlld0JveCxcbiAgICAgIHRpdGxlOiB0aGlzLnRpdGxlLFxuICAgICAgXCJhcmlhLWxhYmVsXCI6IHRoaXMuYXJpYUxhYmVsLFxuICAgICAgXCJhcmlhLWxhYmVsbGVkYnlcIjogdGhpcy5hcmlhTGFiZWxsZWRieSxcbiAgICAgIFwiYXJpYS1oaWRkZW5cIjogdGhpcy5hcmlhSGlkZGVuLFxuICAgICAgZm9jdXNhYmxlOiB0aGlzLmlzRm9jdXNhYmxlLnRvU3RyaW5nKClcbiAgICB9KTtcblxuICAgIGNvbnN0IGF0dHJLZXlzID0gT2JqZWN0LmtleXMoYXR0cmlidXRlcyk7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBhdHRyS2V5cy5sZW5ndGg7IGkrKykge1xuICAgICAgY29uc3Qga2V5ID0gYXR0cktleXNbaV07XG4gICAgICBjb25zdCB2YWx1ZSA9IGF0dHJpYnV0ZXNba2V5XTtcbiAgICAgIGlmIChrZXkgPT09IFwidGl0bGVcIikge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cbiAgICAgIGlmICh2YWx1ZSkge1xuICAgICAgICBzdmcuc2V0QXR0cmlidXRlKGtleSwgdmFsdWUpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChhdHRyaWJ1dGVzLnRpdGxlKSB7XG4gICAgICBjb25zdCB0aXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJ0aXRsZVwiKTtcbiAgICAgIHRpdGxlLnRleHRDb250ZW50ID0gYXR0cmlidXRlcy50aXRsZTtcbiAgICAgIENhdGVnb3J5QWRkRGlyZWN0aXZlLnRpdGxlSWRDb3VudGVyKys7XG4gICAgICB0aXRsZS5zZXRBdHRyaWJ1dGUoXCJpZFwiLCBgY2F0ZWdvcnktYWRkLSR7Q2F0ZWdvcnlBZGREaXJlY3RpdmUudGl0bGVJZENvdW50ZXJ9YCk7XG4gICAgICBzdmcuYXBwZW5kQ2hpbGQodGl0bGUpO1xuICAgICAgc3ZnLnNldEF0dHJpYnV0ZShcImFyaWEtbGFiZWxsZWRieVwiLCBgY2F0ZWdvcnktYWRkLSR7Q2F0ZWdvcnlBZGREaXJlY3RpdmUudGl0bGVJZENvdW50ZXJ9YCk7XG4gICAgfVxuXHR9XG59XG5cblxuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBbXG4gICAgXG4gIENhdGVnb3J5QWRkQ29tcG9uZW50LFxuICBDYXRlZ29yeUFkZERpcmVjdGl2ZSxcblxuICBdLFxuICBleHBvcnRzOiBbXG4gICAgXG4gIENhdGVnb3J5QWRkQ29tcG9uZW50LFxuICBDYXRlZ29yeUFkZERpcmVjdGl2ZSxcblxuICBdXG59KVxuZXhwb3J0IGNsYXNzIENhdGVnb3J5QWRkTW9kdWxlIHt9XG4iXX0=