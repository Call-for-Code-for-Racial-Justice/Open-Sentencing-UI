var OverflowMenuHorizontalDirective_1;
import { __decorate, __metadata } from "tslib";
import { NgModule, Component, Directive, ElementRef, Input, AfterViewInit } from "@angular/core";
import { getAttributes } from "@carbon/icon-helpers";
let OverflowMenuHorizontalComponent = class OverflowMenuHorizontalComponent {
    constructor() {
        this.focusable = false;
    }
};
__decorate([
    Input(),
    __metadata("design:type", String)
], OverflowMenuHorizontalComponent.prototype, "ariaLabel", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], OverflowMenuHorizontalComponent.prototype, "ariaLabelledby", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], OverflowMenuHorizontalComponent.prototype, "ariaHidden", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], OverflowMenuHorizontalComponent.prototype, "title", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], OverflowMenuHorizontalComponent.prototype, "focusable", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], OverflowMenuHorizontalComponent.prototype, "innerClass", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], OverflowMenuHorizontalComponent.prototype, "size", void 0);
OverflowMenuHorizontalComponent = __decorate([
    Component({
        selector: "ibm-icon-overflow-menu-horizontal",
        template: `
    <svg
      ibmIconOverflowMenuHorizontal
      [size]="size"
      [ariaLabel]="ariaLabel"
      [ariaLabelledby]="ariaLabelledby"
      [ariaHidden]="ariaHidden"
      [title]="title"
      [isFocusable]="focusable"
      [attr.class]="innerClass">
    </svg>
  `
    })
], OverflowMenuHorizontalComponent);
export { OverflowMenuHorizontalComponent };
let OverflowMenuHorizontalDirective = OverflowMenuHorizontalDirective_1 = class OverflowMenuHorizontalDirective {
    constructor(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
        this.icons = {
            "32": {
                metadata: { "moduleName": "OverflowMenuHorizontal32", "filepath": "overflow-menu--horizontal/32.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 32, "height": 32 }, "content": [{ "elem": "circle", "attrs": { "cx": "8", "cy": "16", "r": "2" } }, { "elem": "circle", "attrs": { "cx": "16", "cy": "16", "r": "2" } }, { "elem": "circle", "attrs": { "cx": "24", "cy": "16", "r": "2" } }], "name": "overflow-menu--horizontal", "size": 32 }, "size": 32 },
                svg: `<svg focusable="false" preserveAspectRatio="xMidYMid meet" xmlns="http://www.w3.org/2000/svg" fill="currentColor" width="32" height="32" viewBox="0 0 32 32" aria-hidden="true"><circle cx="8" cy="16" r="2"></circle><circle cx="16" cy="16" r="2"></circle><circle cx="24" cy="16" r="2"></circle></svg>`
            },
            "24": {
                metadata: { "moduleName": "OverflowMenuHorizontal24", "filepath": "overflow-menu--horizontal/24.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 24, "height": 24 }, "content": [{ "elem": "circle", "attrs": { "cx": "8", "cy": "16", "r": "2" } }, { "elem": "circle", "attrs": { "cx": "16", "cy": "16", "r": "2" } }, { "elem": "circle", "attrs": { "cx": "24", "cy": "16", "r": "2" } }], "name": "overflow-menu--horizontal", "size": 24 }, "size": 24 },
                svg: `<svg focusable="false" preserveAspectRatio="xMidYMid meet" xmlns="http://www.w3.org/2000/svg" fill="currentColor" width="24" height="24" viewBox="0 0 32 32" aria-hidden="true"><circle cx="8" cy="16" r="2"></circle><circle cx="16" cy="16" r="2"></circle><circle cx="24" cy="16" r="2"></circle></svg>`
            },
            "20": {
                metadata: { "moduleName": "OverflowMenuHorizontal20", "filepath": "overflow-menu--horizontal/20.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 20, "height": 20 }, "content": [{ "elem": "circle", "attrs": { "cx": "8", "cy": "16", "r": "2" } }, { "elem": "circle", "attrs": { "cx": "16", "cy": "16", "r": "2" } }, { "elem": "circle", "attrs": { "cx": "24", "cy": "16", "r": "2" } }], "name": "overflow-menu--horizontal", "size": 20 }, "size": 20 },
                svg: `<svg focusable="false" preserveAspectRatio="xMidYMid meet" xmlns="http://www.w3.org/2000/svg" fill="currentColor" width="20" height="20" viewBox="0 0 32 32" aria-hidden="true"><circle cx="8" cy="16" r="2"></circle><circle cx="16" cy="16" r="2"></circle><circle cx="24" cy="16" r="2"></circle></svg>`
            },
            "16": {
                metadata: { "moduleName": "OverflowMenuHorizontal16", "filepath": "overflow-menu--horizontal/16.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 16, "height": 16 }, "content": [{ "elem": "circle", "attrs": { "cx": "8", "cy": "16", "r": "2" } }, { "elem": "circle", "attrs": { "cx": "16", "cy": "16", "r": "2" } }, { "elem": "circle", "attrs": { "cx": "24", "cy": "16", "r": "2" } }], "name": "overflow-menu--horizontal", "size": 16 }, "size": 16 },
                svg: `<svg focusable="false" preserveAspectRatio="xMidYMid meet" xmlns="http://www.w3.org/2000/svg" fill="currentColor" width="16" height="16" viewBox="0 0 32 32" aria-hidden="true"><circle cx="8" cy="16" r="2"></circle><circle cx="16" cy="16" r="2"></circle><circle cx="24" cy="16" r="2"></circle></svg>`
            },
        };
    }
    ngAfterViewInit() {
        const svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        const icon = this.icons[this.size];
        const domParser = new DOMParser();
        const rawSVG = icon.svg;
        const svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        let node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        const attributes = getAttributes({
            width: icon.metadata.descriptor.attrs.height,
            height: icon.metadata.descriptor.attrs.height,
            viewBox: icon.metadata.descriptor.attrs.viewBox,
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        const attrKeys = Object.keys(attributes);
        for (let i = 0; i < attrKeys.length; i++) {
            const key = attrKeys[i];
            const value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            const title = document.createElement("title");
            title.textContent = attributes.title;
            OverflowMenuHorizontalDirective_1.titleIdCounter++;
            title.setAttribute("id", `overflow-menu-horizontal-${OverflowMenuHorizontalDirective_1.titleIdCounter}`);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", `overflow-menu-horizontal-${OverflowMenuHorizontalDirective_1.titleIdCounter}`);
        }
    }
};
OverflowMenuHorizontalDirective.titleIdCounter = 0;
OverflowMenuHorizontalDirective.ctorParameters = () => [
    { type: ElementRef }
];
__decorate([
    Input(),
    __metadata("design:type", String)
], OverflowMenuHorizontalDirective.prototype, "ariaLabel", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], OverflowMenuHorizontalDirective.prototype, "ariaLabelledby", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], OverflowMenuHorizontalDirective.prototype, "ariaHidden", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], OverflowMenuHorizontalDirective.prototype, "title", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], OverflowMenuHorizontalDirective.prototype, "isFocusable", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], OverflowMenuHorizontalDirective.prototype, "size", void 0);
OverflowMenuHorizontalDirective = OverflowMenuHorizontalDirective_1 = __decorate([
    Directive({
        selector: "[ibmIconOverflowMenuHorizontal]"
    }),
    __metadata("design:paramtypes", [ElementRef])
], OverflowMenuHorizontalDirective);
export { OverflowMenuHorizontalDirective };
let OverflowMenuHorizontalModule = class OverflowMenuHorizontalModule {
};
OverflowMenuHorizontalModule = __decorate([
    NgModule({
        declarations: [
            OverflowMenuHorizontalComponent,
            OverflowMenuHorizontalDirective,
        ],
        exports: [
            OverflowMenuHorizontalComponent,
            OverflowMenuHorizontalDirective,
        ]
    })
], OverflowMenuHorizontalModule);
export { OverflowMenuHorizontalModule };
//# sourceMappingURL=data:application/json;base64,