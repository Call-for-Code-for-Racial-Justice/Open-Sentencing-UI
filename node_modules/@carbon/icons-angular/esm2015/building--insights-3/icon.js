var BuildingInsights_3Directive_1;
import { __decorate, __metadata } from "tslib";
import { NgModule, Component, Directive, ElementRef, Input, AfterViewInit } from "@angular/core";
import { getAttributes } from "@carbon/icon-helpers";
let BuildingInsights_3Component = class BuildingInsights_3Component {
    constructor() {
        this.focusable = false;
    }
};
__decorate([
    Input(),
    __metadata("design:type", String)
], BuildingInsights_3Component.prototype, "ariaLabel", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], BuildingInsights_3Component.prototype, "ariaLabelledby", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], BuildingInsights_3Component.prototype, "ariaHidden", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], BuildingInsights_3Component.prototype, "title", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], BuildingInsights_3Component.prototype, "focusable", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], BuildingInsights_3Component.prototype, "innerClass", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], BuildingInsights_3Component.prototype, "size", void 0);
BuildingInsights_3Component = __decorate([
    Component({
        selector: "ibm-icon-building-insights-3",
        template: `
    <svg
      ibmIconBuildingInsights_3
      [size]="size"
      [ariaLabel]="ariaLabel"
      [ariaLabelledby]="ariaLabelledby"
      [ariaHidden]="ariaHidden"
      [title]="title"
      [isFocusable]="focusable"
      [attr.class]="innerClass">
    </svg>
  `
    })
], BuildingInsights_3Component);
export { BuildingInsights_3Component };
let BuildingInsights_3Directive = BuildingInsights_3Directive_1 = class BuildingInsights_3Directive {
    constructor(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
        this.icons = {
            "32": {
                metadata: { "moduleName": "BuildingInsights_332", "filepath": "building--insights-3/32.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 32, "height": 32 }, "content": [{ "elem": "path", "attrs": { "d": "M28,2H16a2.002,2.002,0,0,0-2,2V14H4a2.002,2.002,0,0,0-2,2V30H30V4A2.0023,2.0023,0,0,0,28,2ZM9,28V21h4v7Zm19,0H15V20a1,1,0,0,0-1-1H8a1,1,0,0,0-1,1v8H4V16H16V4H28Z" } }, { "elem": "path", "attrs": { "d": "M18 8H20V10H18zM24 8H26V10H24zM18 14H20V16H18zM24 14H26V16H24zM18 20H20V22H18zM24 20H26V22H24zM2 10H7V12H2zM10 2H12V7H10z" } }, { "elem": "path", "attrs": { "d": "M5.5 3.964H7.5V9.035H5.5z", "transform": "rotate(-45 6.5 6.5)" } }], "name": "building--insights-3", "size": 32 }, "size": 32 },
                svg: `<svg focusable="false" preserveAspectRatio="xMidYMid meet" xmlns="http://www.w3.org/2000/svg" fill="currentColor" width="32" height="32" viewBox="0 0 32 32" aria-hidden="true"><path d="M28,2H16a2.002,2.002,0,0,0-2,2V14H4a2.002,2.002,0,0,0-2,2V30H30V4A2.0023,2.0023,0,0,0,28,2ZM9,28V21h4v7Zm19,0H15V20a1,1,0,0,0-1-1H8a1,1,0,0,0-1,1v8H4V16H16V4H28Z"></path><path d="M18 8H20V10H18zM24 8H26V10H24zM18 14H20V16H18zM24 14H26V16H24zM18 20H20V22H18zM24 20H26V22H24zM2 10H7V12H2zM10 2H12V7H10z"></path><path d="M5.5 3.964H7.5V9.035H5.5z" transform="rotate(-45 6.5 6.5)"></path></svg>`
            },
            "24": {
                metadata: { "moduleName": "BuildingInsights_324", "filepath": "building--insights-3/24.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 24, "height": 24 }, "content": [{ "elem": "path", "attrs": { "d": "M28,2H16a2.002,2.002,0,0,0-2,2V14H4a2.002,2.002,0,0,0-2,2V30H30V4A2.0023,2.0023,0,0,0,28,2ZM9,28V21h4v7Zm19,0H15V20a1,1,0,0,0-1-1H8a1,1,0,0,0-1,1v8H4V16H16V4H28Z" } }, { "elem": "path", "attrs": { "d": "M18 8H20V10H18zM24 8H26V10H24zM18 14H20V16H18zM24 14H26V16H24zM18 20H20V22H18zM24 20H26V22H24zM2 10H7V12H2zM10 2H12V7H10z" } }, { "elem": "path", "attrs": { "d": "M5.5 3.964H7.5V9.035H5.5z", "transform": "rotate(-45 6.5 6.5)" } }], "name": "building--insights-3", "size": 24 }, "size": 24 },
                svg: `<svg focusable="false" preserveAspectRatio="xMidYMid meet" xmlns="http://www.w3.org/2000/svg" fill="currentColor" width="24" height="24" viewBox="0 0 32 32" aria-hidden="true"><path d="M28,2H16a2.002,2.002,0,0,0-2,2V14H4a2.002,2.002,0,0,0-2,2V30H30V4A2.0023,2.0023,0,0,0,28,2ZM9,28V21h4v7Zm19,0H15V20a1,1,0,0,0-1-1H8a1,1,0,0,0-1,1v8H4V16H16V4H28Z"></path><path d="M18 8H20V10H18zM24 8H26V10H24zM18 14H20V16H18zM24 14H26V16H24zM18 20H20V22H18zM24 20H26V22H24zM2 10H7V12H2zM10 2H12V7H10z"></path><path d="M5.5 3.964H7.5V9.035H5.5z" transform="rotate(-45 6.5 6.5)"></path></svg>`
            },
            "20": {
                metadata: { "moduleName": "BuildingInsights_320", "filepath": "building--insights-3/20.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 20, "height": 20 }, "content": [{ "elem": "path", "attrs": { "d": "M28,2H16a2.002,2.002,0,0,0-2,2V14H4a2.002,2.002,0,0,0-2,2V30H30V4A2.0023,2.0023,0,0,0,28,2ZM9,28V21h4v7Zm19,0H15V20a1,1,0,0,0-1-1H8a1,1,0,0,0-1,1v8H4V16H16V4H28Z" } }, { "elem": "path", "attrs": { "d": "M18 8H20V10H18zM24 8H26V10H24zM18 14H20V16H18zM24 14H26V16H24zM18 20H20V22H18zM24 20H26V22H24zM2 10H7V12H2zM10 2H12V7H10z" } }, { "elem": "path", "attrs": { "d": "M5.5 3.964H7.5V9.035H5.5z", "transform": "rotate(-45 6.5 6.5)" } }], "name": "building--insights-3", "size": 20 }, "size": 20 },
                svg: `<svg focusable="false" preserveAspectRatio="xMidYMid meet" xmlns="http://www.w3.org/2000/svg" fill="currentColor" width="20" height="20" viewBox="0 0 32 32" aria-hidden="true"><path d="M28,2H16a2.002,2.002,0,0,0-2,2V14H4a2.002,2.002,0,0,0-2,2V30H30V4A2.0023,2.0023,0,0,0,28,2ZM9,28V21h4v7Zm19,0H15V20a1,1,0,0,0-1-1H8a1,1,0,0,0-1,1v8H4V16H16V4H28Z"></path><path d="M18 8H20V10H18zM24 8H26V10H24zM18 14H20V16H18zM24 14H26V16H24zM18 20H20V22H18zM24 20H26V22H24zM2 10H7V12H2zM10 2H12V7H10z"></path><path d="M5.5 3.964H7.5V9.035H5.5z" transform="rotate(-45 6.5 6.5)"></path></svg>`
            },
            "16": {
                metadata: { "moduleName": "BuildingInsights_316", "filepath": "building--insights-3/16.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 16, "height": 16 }, "content": [{ "elem": "path", "attrs": { "d": "M28,2H16a2.002,2.002,0,0,0-2,2V14H4a2.002,2.002,0,0,0-2,2V30H30V4A2.0023,2.0023,0,0,0,28,2ZM9,28V21h4v7Zm19,0H15V20a1,1,0,0,0-1-1H8a1,1,0,0,0-1,1v8H4V16H16V4H28Z" } }, { "elem": "path", "attrs": { "d": "M18 8H20V10H18zM24 8H26V10H24zM18 14H20V16H18zM24 14H26V16H24zM18 20H20V22H18zM24 20H26V22H24zM2 10H7V12H2zM10 2H12V7H10z" } }, { "elem": "path", "attrs": { "d": "M5.5 3.964H7.5V9.035H5.5z", "transform": "rotate(-45 6.5 6.5)" } }], "name": "building--insights-3", "size": 16 }, "size": 16 },
                svg: `<svg focusable="false" preserveAspectRatio="xMidYMid meet" xmlns="http://www.w3.org/2000/svg" fill="currentColor" width="16" height="16" viewBox="0 0 32 32" aria-hidden="true"><path d="M28,2H16a2.002,2.002,0,0,0-2,2V14H4a2.002,2.002,0,0,0-2,2V30H30V4A2.0023,2.0023,0,0,0,28,2ZM9,28V21h4v7Zm19,0H15V20a1,1,0,0,0-1-1H8a1,1,0,0,0-1,1v8H4V16H16V4H28Z"></path><path d="M18 8H20V10H18zM24 8H26V10H24zM18 14H20V16H18zM24 14H26V16H24zM18 20H20V22H18zM24 20H26V22H24zM2 10H7V12H2zM10 2H12V7H10z"></path><path d="M5.5 3.964H7.5V9.035H5.5z" transform="rotate(-45 6.5 6.5)"></path></svg>`
            },
        };
    }
    ngAfterViewInit() {
        const svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        const icon = this.icons[this.size];
        const domParser = new DOMParser();
        const rawSVG = icon.svg;
        const svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        let node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        const attributes = getAttributes({
            width: icon.metadata.descriptor.attrs.height,
            height: icon.metadata.descriptor.attrs.height,
            viewBox: icon.metadata.descriptor.attrs.viewBox,
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        const attrKeys = Object.keys(attributes);
        for (let i = 0; i < attrKeys.length; i++) {
            const key = attrKeys[i];
            const value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            const title = document.createElement("title");
            title.textContent = attributes.title;
            BuildingInsights_3Directive_1.titleIdCounter++;
            title.setAttribute("id", `building-insights-3-${BuildingInsights_3Directive_1.titleIdCounter}`);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", `building-insights-3-${BuildingInsights_3Directive_1.titleIdCounter}`);
        }
    }
};
BuildingInsights_3Directive.titleIdCounter = 0;
BuildingInsights_3Directive.ctorParameters = () => [
    { type: ElementRef }
];
__decorate([
    Input(),
    __metadata("design:type", String)
], BuildingInsights_3Directive.prototype, "ariaLabel", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], BuildingInsights_3Directive.prototype, "ariaLabelledby", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], BuildingInsights_3Directive.prototype, "ariaHidden", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], BuildingInsights_3Directive.prototype, "title", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], BuildingInsights_3Directive.prototype, "isFocusable", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], BuildingInsights_3Directive.prototype, "size", void 0);
BuildingInsights_3Directive = BuildingInsights_3Directive_1 = __decorate([
    Directive({
        selector: "[ibmIconBuildingInsights_3]"
    }),
    __metadata("design:paramtypes", [ElementRef])
], BuildingInsights_3Directive);
export { BuildingInsights_3Directive };
let BuildingInsights_3Module = class BuildingInsights_3Module {
};
BuildingInsights_3Module = __decorate([
    NgModule({
        declarations: [
            BuildingInsights_3Component,
            BuildingInsights_3Directive,
        ],
        exports: [
            BuildingInsights_3Component,
            BuildingInsights_3Directive,
        ]
    })
], BuildingInsights_3Module);
export { BuildingInsights_3Module };
//# sourceMappingURL=data:application/json;base64,