var UserAvatarFilledAltDirective_1;
import { __decorate, __metadata } from "tslib";
import { NgModule, Component, Directive, ElementRef, Input, AfterViewInit } from "@angular/core";
import { getAttributes } from "@carbon/icon-helpers";
let UserAvatarFilledAltComponent = class UserAvatarFilledAltComponent {
    constructor() {
        this.focusable = false;
    }
};
__decorate([
    Input(),
    __metadata("design:type", String)
], UserAvatarFilledAltComponent.prototype, "ariaLabel", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], UserAvatarFilledAltComponent.prototype, "ariaLabelledby", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], UserAvatarFilledAltComponent.prototype, "ariaHidden", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], UserAvatarFilledAltComponent.prototype, "title", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], UserAvatarFilledAltComponent.prototype, "focusable", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], UserAvatarFilledAltComponent.prototype, "innerClass", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], UserAvatarFilledAltComponent.prototype, "size", void 0);
UserAvatarFilledAltComponent = __decorate([
    Component({
        selector: "ibm-icon-user-avatar-filled-alt",
        template: `
    <svg
      ibmIconUserAvatarFilledAlt
      [size]="size"
      [ariaLabel]="ariaLabel"
      [ariaLabelledby]="ariaLabelledby"
      [ariaHidden]="ariaHidden"
      [title]="title"
      [isFocusable]="focusable"
      [attr.class]="innerClass">
    </svg>
  `
    })
], UserAvatarFilledAltComponent);
export { UserAvatarFilledAltComponent };
let UserAvatarFilledAltDirective = UserAvatarFilledAltDirective_1 = class UserAvatarFilledAltDirective {
    constructor(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
        this.icons = {
            "32": {
                metadata: { "moduleName": "UserAvatarFilledAlt32", "filepath": "user--avatar--filled--alt/32.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 32, "height": 32 }, "content": [{ "elem": "path", "attrs": { "d": "M16,2A14,14,0,1,0,30,16,14,14,0,0,0,16,2Zm8,22.9188v-.576l0-.0323A5.2086,5.2086,0,0,0,19,19H13a5.2,5.2,0,0,0-4.9893,5.3105c0,.0108-.0107.0215-.0107.0323v.5854a12.0053,12.0053,0,1,1,16-.0094Z" } }, { "elem": "path", "attrs": { "d": "M16,7a5,5,0,1,0,5,5A5,5,0,0,0,16,7Z" } }], "name": "user--avatar--filled--alt", "size": 32 }, "size": 32 },
                svg: `<svg focusable="false" preserveAspectRatio="xMidYMid meet" xmlns="http://www.w3.org/2000/svg" fill="currentColor" width="32" height="32" viewBox="0 0 32 32" aria-hidden="true"><path d="M16,2A14,14,0,1,0,30,16,14,14,0,0,0,16,2Zm8,22.9188v-.576l0-.0323A5.2086,5.2086,0,0,0,19,19H13a5.2,5.2,0,0,0-4.9893,5.3105c0,.0108-.0107.0215-.0107.0323v.5854a12.0053,12.0053,0,1,1,16-.0094Z"></path><path d="M16,7a5,5,0,1,0,5,5A5,5,0,0,0,16,7Z"></path></svg>`
            },
            "24": {
                metadata: { "moduleName": "UserAvatarFilledAlt24", "filepath": "user--avatar--filled--alt/24.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 24, "height": 24 }, "content": [{ "elem": "path", "attrs": { "d": "M16,2A14,14,0,1,0,30,16,14,14,0,0,0,16,2Zm8,22.9188v-.576l0-.0323A5.2086,5.2086,0,0,0,19,19H13a5.2,5.2,0,0,0-4.9893,5.3105c0,.0108-.0107.0215-.0107.0323v.5854a12.0053,12.0053,0,1,1,16-.0094Z" } }, { "elem": "path", "attrs": { "d": "M16,7a5,5,0,1,0,5,5A5,5,0,0,0,16,7Z" } }], "name": "user--avatar--filled--alt", "size": 24 }, "size": 24 },
                svg: `<svg focusable="false" preserveAspectRatio="xMidYMid meet" xmlns="http://www.w3.org/2000/svg" fill="currentColor" width="24" height="24" viewBox="0 0 32 32" aria-hidden="true"><path d="M16,2A14,14,0,1,0,30,16,14,14,0,0,0,16,2Zm8,22.9188v-.576l0-.0323A5.2086,5.2086,0,0,0,19,19H13a5.2,5.2,0,0,0-4.9893,5.3105c0,.0108-.0107.0215-.0107.0323v.5854a12.0053,12.0053,0,1,1,16-.0094Z"></path><path d="M16,7a5,5,0,1,0,5,5A5,5,0,0,0,16,7Z"></path></svg>`
            },
            "20": {
                metadata: { "moduleName": "UserAvatarFilledAlt20", "filepath": "user--avatar--filled--alt/20.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 20, "height": 20 }, "content": [{ "elem": "path", "attrs": { "d": "M16,2A14,14,0,1,0,30,16,14,14,0,0,0,16,2Zm8,22.9188v-.576l0-.0323A5.2086,5.2086,0,0,0,19,19H13a5.2,5.2,0,0,0-4.9893,5.3105c0,.0108-.0107.0215-.0107.0323v.5854a12.0053,12.0053,0,1,1,16-.0094Z" } }, { "elem": "path", "attrs": { "d": "M16,7a5,5,0,1,0,5,5A5,5,0,0,0,16,7Z" } }], "name": "user--avatar--filled--alt", "size": 20 }, "size": 20 },
                svg: `<svg focusable="false" preserveAspectRatio="xMidYMid meet" xmlns="http://www.w3.org/2000/svg" fill="currentColor" width="20" height="20" viewBox="0 0 32 32" aria-hidden="true"><path d="M16,2A14,14,0,1,0,30,16,14,14,0,0,0,16,2Zm8,22.9188v-.576l0-.0323A5.2086,5.2086,0,0,0,19,19H13a5.2,5.2,0,0,0-4.9893,5.3105c0,.0108-.0107.0215-.0107.0323v.5854a12.0053,12.0053,0,1,1,16-.0094Z"></path><path d="M16,7a5,5,0,1,0,5,5A5,5,0,0,0,16,7Z"></path></svg>`
            },
            "16": {
                metadata: { "moduleName": "UserAvatarFilledAlt16", "filepath": "user--avatar--filled--alt/16.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 16, "height": 16 }, "content": [{ "elem": "path", "attrs": { "d": "M16,2A14,14,0,1,0,30,16,14,14,0,0,0,16,2Zm8,22.9188v-.576l0-.0323A5.2086,5.2086,0,0,0,19,19H13a5.2,5.2,0,0,0-4.9893,5.3105c0,.0108-.0107.0215-.0107.0323v.5854a12.0053,12.0053,0,1,1,16-.0094Z" } }, { "elem": "path", "attrs": { "d": "M16,7a5,5,0,1,0,5,5A5,5,0,0,0,16,7Z" } }], "name": "user--avatar--filled--alt", "size": 16 }, "size": 16 },
                svg: `<svg focusable="false" preserveAspectRatio="xMidYMid meet" xmlns="http://www.w3.org/2000/svg" fill="currentColor" width="16" height="16" viewBox="0 0 32 32" aria-hidden="true"><path d="M16,2A14,14,0,1,0,30,16,14,14,0,0,0,16,2Zm8,22.9188v-.576l0-.0323A5.2086,5.2086,0,0,0,19,19H13a5.2,5.2,0,0,0-4.9893,5.3105c0,.0108-.0107.0215-.0107.0323v.5854a12.0053,12.0053,0,1,1,16-.0094Z"></path><path d="M16,7a5,5,0,1,0,5,5A5,5,0,0,0,16,7Z"></path></svg>`
            },
        };
    }
    ngAfterViewInit() {
        const svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        const icon = this.icons[this.size];
        const domParser = new DOMParser();
        const rawSVG = icon.svg;
        const svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        let node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        const attributes = getAttributes({
            width: icon.metadata.descriptor.attrs.height,
            height: icon.metadata.descriptor.attrs.height,
            viewBox: icon.metadata.descriptor.attrs.viewBox,
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        const attrKeys = Object.keys(attributes);
        for (let i = 0; i < attrKeys.length; i++) {
            const key = attrKeys[i];
            const value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            const title = document.createElement("title");
            title.textContent = attributes.title;
            UserAvatarFilledAltDirective_1.titleIdCounter++;
            title.setAttribute("id", `user-avatar-filled-alt-${UserAvatarFilledAltDirective_1.titleIdCounter}`);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", `user-avatar-filled-alt-${UserAvatarFilledAltDirective_1.titleIdCounter}`);
        }
    }
};
UserAvatarFilledAltDirective.titleIdCounter = 0;
UserAvatarFilledAltDirective.ctorParameters = () => [
    { type: ElementRef }
];
__decorate([
    Input(),
    __metadata("design:type", String)
], UserAvatarFilledAltDirective.prototype, "ariaLabel", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], UserAvatarFilledAltDirective.prototype, "ariaLabelledby", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], UserAvatarFilledAltDirective.prototype, "ariaHidden", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], UserAvatarFilledAltDirective.prototype, "title", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], UserAvatarFilledAltDirective.prototype, "isFocusable", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], UserAvatarFilledAltDirective.prototype, "size", void 0);
UserAvatarFilledAltDirective = UserAvatarFilledAltDirective_1 = __decorate([
    Directive({
        selector: "[ibmIconUserAvatarFilledAlt]"
    }),
    __metadata("design:paramtypes", [ElementRef])
], UserAvatarFilledAltDirective);
export { UserAvatarFilledAltDirective };
let UserAvatarFilledAltModule = class UserAvatarFilledAltModule {
};
UserAvatarFilledAltModule = __decorate([
    NgModule({
        declarations: [
            UserAvatarFilledAltComponent,
            UserAvatarFilledAltDirective,
        ],
        exports: [
            UserAvatarFilledAltComponent,
            UserAvatarFilledAltDirective,
        ]
    })
], UserAvatarFilledAltModule);
export { UserAvatarFilledAltModule };
//# sourceMappingURL=data:application/json;base64,