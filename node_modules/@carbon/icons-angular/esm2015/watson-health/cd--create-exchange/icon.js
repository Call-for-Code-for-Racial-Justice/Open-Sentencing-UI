var WatsonHealthCdCreateExchangeDirective_1;
import { __decorate, __metadata } from "tslib";
import { NgModule, Component, Directive, ElementRef, Input, AfterViewInit } from "@angular/core";
import { getAttributes } from "@carbon/icon-helpers";
let WatsonHealthCdCreateExchangeComponent = class WatsonHealthCdCreateExchangeComponent {
    constructor() {
        this.focusable = false;
    }
};
__decorate([
    Input(),
    __metadata("design:type", String)
], WatsonHealthCdCreateExchangeComponent.prototype, "ariaLabel", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], WatsonHealthCdCreateExchangeComponent.prototype, "ariaLabelledby", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], WatsonHealthCdCreateExchangeComponent.prototype, "ariaHidden", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], WatsonHealthCdCreateExchangeComponent.prototype, "title", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], WatsonHealthCdCreateExchangeComponent.prototype, "focusable", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], WatsonHealthCdCreateExchangeComponent.prototype, "innerClass", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], WatsonHealthCdCreateExchangeComponent.prototype, "size", void 0);
WatsonHealthCdCreateExchangeComponent = __decorate([
    Component({
        selector: "ibm-icon-watson-health-cd-create-exchange",
        template: `
    <svg
      ibmIconWatsonHealthCdCreateExchange
      [size]="size"
      [ariaLabel]="ariaLabel"
      [ariaLabelledby]="ariaLabelledby"
      [ariaHidden]="ariaHidden"
      [title]="title"
      [isFocusable]="focusable"
      [attr.class]="innerClass">
    </svg>
  `
    })
], WatsonHealthCdCreateExchangeComponent);
export { WatsonHealthCdCreateExchangeComponent };
let WatsonHealthCdCreateExchangeDirective = WatsonHealthCdCreateExchangeDirective_1 = class WatsonHealthCdCreateExchangeDirective {
    constructor(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
        this.icons = {
            "32": {
                metadata: { "moduleName": "WatsonHealthCdCreateExchange32", "filepath": "watson-health/cd--create-exchange/32.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 32, "height": 32 }, "content": [{ "elem": "circle", "attrs": { "cx": "14", "cy": "14", "r": "2" } }, { "elem": "path", "attrs": { "d": "M14,2a12,12,0,0,0,0,24V24A10,10,0,1,1,24,14,8.27,8.27,0,0,1,24,15h2c0-.33.05-.66.05-1A12,12,0,0,0,14,2Z" } }, { "elem": "path", "attrs": { "d": "M17 24L26.17 24 23.58 26.59 25 28 30 23 25 18 23.58 19.42 26.17 22 17 22 17 24zM14 20a6 6 0 116-6A6 6 0 0114 20zm0-10a4 4 0 104 4A4 4 0 0014 10z" } }], "name": "cd--create-exchange", "size": 32 }, "size": 32 },
                svg: `<svg focusable="false" preserveAspectRatio="xMidYMid meet" xmlns="http://www.w3.org/2000/svg" fill="currentColor" width="32" height="32" viewBox="0 0 32 32" aria-hidden="true"><circle cx="14" cy="14" r="2"></circle><path d="M14,2a12,12,0,0,0,0,24V24A10,10,0,1,1,24,14,8.27,8.27,0,0,1,24,15h2c0-.33.05-.66.05-1A12,12,0,0,0,14,2Z"></path><path d="M17 24L26.17 24 23.58 26.59 25 28 30 23 25 18 23.58 19.42 26.17 22 17 22 17 24zM14 20a6 6 0 116-6A6 6 0 0114 20zm0-10a4 4 0 104 4A4 4 0 0014 10z"></path></svg>`
            },
            "24": {
                metadata: { "moduleName": "WatsonHealthCdCreateExchange24", "filepath": "watson-health/cd--create-exchange/24.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 24, "height": 24 }, "content": [{ "elem": "circle", "attrs": { "cx": "14", "cy": "14", "r": "2" } }, { "elem": "path", "attrs": { "d": "M14,2a12,12,0,0,0,0,24V24A10,10,0,1,1,24,14,8.27,8.27,0,0,1,24,15h2c0-.33.05-.66.05-1A12,12,0,0,0,14,2Z" } }, { "elem": "path", "attrs": { "d": "M17 24L26.17 24 23.58 26.59 25 28 30 23 25 18 23.58 19.42 26.17 22 17 22 17 24zM14 20a6 6 0 116-6A6 6 0 0114 20zm0-10a4 4 0 104 4A4 4 0 0014 10z" } }], "name": "cd--create-exchange", "size": 24 }, "size": 24 },
                svg: `<svg focusable="false" preserveAspectRatio="xMidYMid meet" xmlns="http://www.w3.org/2000/svg" fill="currentColor" width="24" height="24" viewBox="0 0 32 32" aria-hidden="true"><circle cx="14" cy="14" r="2"></circle><path d="M14,2a12,12,0,0,0,0,24V24A10,10,0,1,1,24,14,8.27,8.27,0,0,1,24,15h2c0-.33.05-.66.05-1A12,12,0,0,0,14,2Z"></path><path d="M17 24L26.17 24 23.58 26.59 25 28 30 23 25 18 23.58 19.42 26.17 22 17 22 17 24zM14 20a6 6 0 116-6A6 6 0 0114 20zm0-10a4 4 0 104 4A4 4 0 0014 10z"></path></svg>`
            },
            "20": {
                metadata: { "moduleName": "WatsonHealthCdCreateExchange20", "filepath": "watson-health/cd--create-exchange/20.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 20, "height": 20 }, "content": [{ "elem": "circle", "attrs": { "cx": "14", "cy": "14", "r": "2" } }, { "elem": "path", "attrs": { "d": "M14,2a12,12,0,0,0,0,24V24A10,10,0,1,1,24,14,8.27,8.27,0,0,1,24,15h2c0-.33.05-.66.05-1A12,12,0,0,0,14,2Z" } }, { "elem": "path", "attrs": { "d": "M17 24L26.17 24 23.58 26.59 25 28 30 23 25 18 23.58 19.42 26.17 22 17 22 17 24zM14 20a6 6 0 116-6A6 6 0 0114 20zm0-10a4 4 0 104 4A4 4 0 0014 10z" } }], "name": "cd--create-exchange", "size": 20 }, "size": 20 },
                svg: `<svg focusable="false" preserveAspectRatio="xMidYMid meet" xmlns="http://www.w3.org/2000/svg" fill="currentColor" width="20" height="20" viewBox="0 0 32 32" aria-hidden="true"><circle cx="14" cy="14" r="2"></circle><path d="M14,2a12,12,0,0,0,0,24V24A10,10,0,1,1,24,14,8.27,8.27,0,0,1,24,15h2c0-.33.05-.66.05-1A12,12,0,0,0,14,2Z"></path><path d="M17 24L26.17 24 23.58 26.59 25 28 30 23 25 18 23.58 19.42 26.17 22 17 22 17 24zM14 20a6 6 0 116-6A6 6 0 0114 20zm0-10a4 4 0 104 4A4 4 0 0014 10z"></path></svg>`
            },
            "16": {
                metadata: { "moduleName": "WatsonHealthCdCreateExchange16", "filepath": "watson-health/cd--create-exchange/16.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 16, "height": 16 }, "content": [{ "elem": "circle", "attrs": { "cx": "14", "cy": "14", "r": "2" } }, { "elem": "path", "attrs": { "d": "M14,2a12,12,0,0,0,0,24V24A10,10,0,1,1,24,14,8.27,8.27,0,0,1,24,15h2c0-.33.05-.66.05-1A12,12,0,0,0,14,2Z" } }, { "elem": "path", "attrs": { "d": "M17 24L26.17 24 23.58 26.59 25 28 30 23 25 18 23.58 19.42 26.17 22 17 22 17 24zM14 20a6 6 0 116-6A6 6 0 0114 20zm0-10a4 4 0 104 4A4 4 0 0014 10z" } }], "name": "cd--create-exchange", "size": 16 }, "size": 16 },
                svg: `<svg focusable="false" preserveAspectRatio="xMidYMid meet" xmlns="http://www.w3.org/2000/svg" fill="currentColor" width="16" height="16" viewBox="0 0 32 32" aria-hidden="true"><circle cx="14" cy="14" r="2"></circle><path d="M14,2a12,12,0,0,0,0,24V24A10,10,0,1,1,24,14,8.27,8.27,0,0,1,24,15h2c0-.33.05-.66.05-1A12,12,0,0,0,14,2Z"></path><path d="M17 24L26.17 24 23.58 26.59 25 28 30 23 25 18 23.58 19.42 26.17 22 17 22 17 24zM14 20a6 6 0 116-6A6 6 0 0114 20zm0-10a4 4 0 104 4A4 4 0 0014 10z"></path></svg>`
            },
        };
    }
    ngAfterViewInit() {
        const svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        const icon = this.icons[this.size];
        const domParser = new DOMParser();
        const rawSVG = icon.svg;
        const svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        let node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        const attributes = getAttributes({
            width: icon.metadata.descriptor.attrs.height,
            height: icon.metadata.descriptor.attrs.height,
            viewBox: icon.metadata.descriptor.attrs.viewBox,
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        const attrKeys = Object.keys(attributes);
        for (let i = 0; i < attrKeys.length; i++) {
            const key = attrKeys[i];
            const value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            const title = document.createElement("title");
            title.textContent = attributes.title;
            WatsonHealthCdCreateExchangeDirective_1.titleIdCounter++;
            title.setAttribute("id", `watson-health-cd-create-exchange-${WatsonHealthCdCreateExchangeDirective_1.titleIdCounter}`);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", `watson-health-cd-create-exchange-${WatsonHealthCdCreateExchangeDirective_1.titleIdCounter}`);
        }
    }
};
WatsonHealthCdCreateExchangeDirective.titleIdCounter = 0;
WatsonHealthCdCreateExchangeDirective.ctorParameters = () => [
    { type: ElementRef }
];
__decorate([
    Input(),
    __metadata("design:type", String)
], WatsonHealthCdCreateExchangeDirective.prototype, "ariaLabel", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], WatsonHealthCdCreateExchangeDirective.prototype, "ariaLabelledby", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], WatsonHealthCdCreateExchangeDirective.prototype, "ariaHidden", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], WatsonHealthCdCreateExchangeDirective.prototype, "title", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], WatsonHealthCdCreateExchangeDirective.prototype, "isFocusable", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], WatsonHealthCdCreateExchangeDirective.prototype, "size", void 0);
WatsonHealthCdCreateExchangeDirective = WatsonHealthCdCreateExchangeDirective_1 = __decorate([
    Directive({
        selector: "[ibmIconWatsonHealthCdCreateExchange]"
    }),
    __metadata("design:paramtypes", [ElementRef])
], WatsonHealthCdCreateExchangeDirective);
export { WatsonHealthCdCreateExchangeDirective };
let WatsonHealthCdCreateExchangeModule = class WatsonHealthCdCreateExchangeModule {
};
WatsonHealthCdCreateExchangeModule = __decorate([
    NgModule({
        declarations: [
            WatsonHealthCdCreateExchangeComponent,
            WatsonHealthCdCreateExchangeDirective,
        ],
        exports: [
            WatsonHealthCdCreateExchangeComponent,
            WatsonHealthCdCreateExchangeDirective,
        ]
    })
], WatsonHealthCdCreateExchangeModule);
export { WatsonHealthCdCreateExchangeModule };
//# sourceMappingURL=data:application/json;base64,