var WatsonHealthWindowOverlayDirective_1;
import { __decorate, __metadata } from "tslib";
import { NgModule, Component, Directive, ElementRef, Input, AfterViewInit } from "@angular/core";
import { getAttributes } from "@carbon/icon-helpers";
let WatsonHealthWindowOverlayComponent = class WatsonHealthWindowOverlayComponent {
    constructor() {
        this.focusable = false;
    }
};
__decorate([
    Input(),
    __metadata("design:type", String)
], WatsonHealthWindowOverlayComponent.prototype, "ariaLabel", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], WatsonHealthWindowOverlayComponent.prototype, "ariaLabelledby", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], WatsonHealthWindowOverlayComponent.prototype, "ariaHidden", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], WatsonHealthWindowOverlayComponent.prototype, "title", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], WatsonHealthWindowOverlayComponent.prototype, "focusable", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], WatsonHealthWindowOverlayComponent.prototype, "innerClass", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], WatsonHealthWindowOverlayComponent.prototype, "size", void 0);
WatsonHealthWindowOverlayComponent = __decorate([
    Component({
        selector: "ibm-icon-watson-health-window-overlay",
        template: `
    <svg
      ibmIconWatsonHealthWindowOverlay
      [size]="size"
      [ariaLabel]="ariaLabel"
      [ariaLabelledby]="ariaLabelledby"
      [ariaHidden]="ariaHidden"
      [title]="title"
      [isFocusable]="focusable"
      [attr.class]="innerClass">
    </svg>
  `
    })
], WatsonHealthWindowOverlayComponent);
export { WatsonHealthWindowOverlayComponent };
let WatsonHealthWindowOverlayDirective = WatsonHealthWindowOverlayDirective_1 = class WatsonHealthWindowOverlayDirective {
    constructor(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
        this.icons = {
            "32": {
                metadata: { "moduleName": "WatsonHealthWindowOverlay32", "filepath": "watson-health/window--overlay/32.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 32, "height": 32 }, "content": [{ "elem": "path", "attrs": { "d": "M15 6H17V9H15zM25 17H28V19H25zM15 27H17V30H15zM4 17H7V19H4z" } }, { "elem": "path", "attrs": { "d": "M7.55 9.03H9.55V12.03H7.55z", "transform": "rotate(-45 8.558 10.545)" } }, { "elem": "path", "attrs": { "d": "M21.96 9.54H24.96V11.54H21.96z", "transform": "rotate(-45 23.466 10.54)" } }, { "elem": "path", "attrs": { "d": "M22.46 23.94H24.46V26.94H22.46z", "transform": "rotate(-45 23.459 25.443)" } }, { "elem": "path", "attrs": { "d": "M7.04 24.45H10.04V26.45H7.04z", "transform": "rotate(-45 8.55 25.448)" } }, { "elem": "path", "attrs": { "d": "M4 2H28V4H4zM16 24a6 6 0 10-6-6A6 6 0 0016 24zm0-10v8a4 4 0 010-8z" } }], "name": "window--overlay", "size": 32 }, "size": 32 },
                svg: `<svg focusable="false" preserveAspectRatio="xMidYMid meet" xmlns="http://www.w3.org/2000/svg" fill="currentColor" width="32" height="32" viewBox="0 0 32 32" aria-hidden="true"><path d="M15 6H17V9H15zM25 17H28V19H25zM15 27H17V30H15zM4 17H7V19H4z"></path><path d="M7.55 9.03H9.55V12.03H7.55z" transform="rotate(-45 8.558 10.545)"></path><path d="M21.96 9.54H24.96V11.54H21.96z" transform="rotate(-45 23.466 10.54)"></path><path d="M22.46 23.94H24.46V26.94H22.46z" transform="rotate(-45 23.459 25.443)"></path><path d="M7.04 24.45H10.04V26.45H7.04z" transform="rotate(-45 8.55 25.448)"></path><path d="M4 2H28V4H4zM16 24a6 6 0 10-6-6A6 6 0 0016 24zm0-10v8a4 4 0 010-8z"></path></svg>`
            },
            "24": {
                metadata: { "moduleName": "WatsonHealthWindowOverlay24", "filepath": "watson-health/window--overlay/24.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 24, "height": 24 }, "content": [{ "elem": "path", "attrs": { "d": "M15 6H17V9H15zM25 17H28V19H25zM15 27H17V30H15zM4 17H7V19H4z" } }, { "elem": "path", "attrs": { "d": "M7.55 9.03H9.55V12.03H7.55z", "transform": "rotate(-45 8.558 10.545)" } }, { "elem": "path", "attrs": { "d": "M21.96 9.54H24.96V11.54H21.96z", "transform": "rotate(-45 23.466 10.54)" } }, { "elem": "path", "attrs": { "d": "M22.46 23.94H24.46V26.94H22.46z", "transform": "rotate(-45 23.459 25.443)" } }, { "elem": "path", "attrs": { "d": "M7.04 24.45H10.04V26.45H7.04z", "transform": "rotate(-45 8.55 25.448)" } }, { "elem": "path", "attrs": { "d": "M4 2H28V4H4zM16 24a6 6 0 10-6-6A6 6 0 0016 24zm0-10v8a4 4 0 010-8z" } }], "name": "window--overlay", "size": 24 }, "size": 24 },
                svg: `<svg focusable="false" preserveAspectRatio="xMidYMid meet" xmlns="http://www.w3.org/2000/svg" fill="currentColor" width="24" height="24" viewBox="0 0 32 32" aria-hidden="true"><path d="M15 6H17V9H15zM25 17H28V19H25zM15 27H17V30H15zM4 17H7V19H4z"></path><path d="M7.55 9.03H9.55V12.03H7.55z" transform="rotate(-45 8.558 10.545)"></path><path d="M21.96 9.54H24.96V11.54H21.96z" transform="rotate(-45 23.466 10.54)"></path><path d="M22.46 23.94H24.46V26.94H22.46z" transform="rotate(-45 23.459 25.443)"></path><path d="M7.04 24.45H10.04V26.45H7.04z" transform="rotate(-45 8.55 25.448)"></path><path d="M4 2H28V4H4zM16 24a6 6 0 10-6-6A6 6 0 0016 24zm0-10v8a4 4 0 010-8z"></path></svg>`
            },
            "20": {
                metadata: { "moduleName": "WatsonHealthWindowOverlay20", "filepath": "watson-health/window--overlay/20.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 20, "height": 20 }, "content": [{ "elem": "path", "attrs": { "d": "M15 6H17V9H15zM25 17H28V19H25zM15 27H17V30H15zM4 17H7V19H4z" } }, { "elem": "path", "attrs": { "d": "M7.55 9.03H9.55V12.03H7.55z", "transform": "rotate(-45 8.558 10.545)" } }, { "elem": "path", "attrs": { "d": "M21.96 9.54H24.96V11.54H21.96z", "transform": "rotate(-45 23.466 10.54)" } }, { "elem": "path", "attrs": { "d": "M22.46 23.94H24.46V26.94H22.46z", "transform": "rotate(-45 23.459 25.443)" } }, { "elem": "path", "attrs": { "d": "M7.04 24.45H10.04V26.45H7.04z", "transform": "rotate(-45 8.55 25.448)" } }, { "elem": "path", "attrs": { "d": "M4 2H28V4H4zM16 24a6 6 0 10-6-6A6 6 0 0016 24zm0-10v8a4 4 0 010-8z" } }], "name": "window--overlay", "size": 20 }, "size": 20 },
                svg: `<svg focusable="false" preserveAspectRatio="xMidYMid meet" xmlns="http://www.w3.org/2000/svg" fill="currentColor" width="20" height="20" viewBox="0 0 32 32" aria-hidden="true"><path d="M15 6H17V9H15zM25 17H28V19H25zM15 27H17V30H15zM4 17H7V19H4z"></path><path d="M7.55 9.03H9.55V12.03H7.55z" transform="rotate(-45 8.558 10.545)"></path><path d="M21.96 9.54H24.96V11.54H21.96z" transform="rotate(-45 23.466 10.54)"></path><path d="M22.46 23.94H24.46V26.94H22.46z" transform="rotate(-45 23.459 25.443)"></path><path d="M7.04 24.45H10.04V26.45H7.04z" transform="rotate(-45 8.55 25.448)"></path><path d="M4 2H28V4H4zM16 24a6 6 0 10-6-6A6 6 0 0016 24zm0-10v8a4 4 0 010-8z"></path></svg>`
            },
            "16": {
                metadata: { "moduleName": "WatsonHealthWindowOverlay16", "filepath": "watson-health/window--overlay/16.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 16, "height": 16 }, "content": [{ "elem": "path", "attrs": { "d": "M15 6H17V9H15zM25 17H28V19H25zM15 27H17V30H15zM4 17H7V19H4z" } }, { "elem": "path", "attrs": { "d": "M7.55 9.03H9.55V12.03H7.55z", "transform": "rotate(-45 8.558 10.545)" } }, { "elem": "path", "attrs": { "d": "M21.96 9.54H24.96V11.54H21.96z", "transform": "rotate(-45 23.466 10.54)" } }, { "elem": "path", "attrs": { "d": "M22.46 23.94H24.46V26.94H22.46z", "transform": "rotate(-45 23.459 25.443)" } }, { "elem": "path", "attrs": { "d": "M7.04 24.45H10.04V26.45H7.04z", "transform": "rotate(-45 8.55 25.448)" } }, { "elem": "path", "attrs": { "d": "M4 2H28V4H4zM16 24a6 6 0 10-6-6A6 6 0 0016 24zm0-10v8a4 4 0 010-8z" } }], "name": "window--overlay", "size": 16 }, "size": 16 },
                svg: `<svg focusable="false" preserveAspectRatio="xMidYMid meet" xmlns="http://www.w3.org/2000/svg" fill="currentColor" width="16" height="16" viewBox="0 0 32 32" aria-hidden="true"><path d="M15 6H17V9H15zM25 17H28V19H25zM15 27H17V30H15zM4 17H7V19H4z"></path><path d="M7.55 9.03H9.55V12.03H7.55z" transform="rotate(-45 8.558 10.545)"></path><path d="M21.96 9.54H24.96V11.54H21.96z" transform="rotate(-45 23.466 10.54)"></path><path d="M22.46 23.94H24.46V26.94H22.46z" transform="rotate(-45 23.459 25.443)"></path><path d="M7.04 24.45H10.04V26.45H7.04z" transform="rotate(-45 8.55 25.448)"></path><path d="M4 2H28V4H4zM16 24a6 6 0 10-6-6A6 6 0 0016 24zm0-10v8a4 4 0 010-8z"></path></svg>`
            },
        };
    }
    ngAfterViewInit() {
        const svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        const icon = this.icons[this.size];
        const domParser = new DOMParser();
        const rawSVG = icon.svg;
        const svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        let node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        const attributes = getAttributes({
            width: icon.metadata.descriptor.attrs.height,
            height: icon.metadata.descriptor.attrs.height,
            viewBox: icon.metadata.descriptor.attrs.viewBox,
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        const attrKeys = Object.keys(attributes);
        for (let i = 0; i < attrKeys.length; i++) {
            const key = attrKeys[i];
            const value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            const title = document.createElement("title");
            title.textContent = attributes.title;
            WatsonHealthWindowOverlayDirective_1.titleIdCounter++;
            title.setAttribute("id", `watson-health-window-overlay-${WatsonHealthWindowOverlayDirective_1.titleIdCounter}`);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", `watson-health-window-overlay-${WatsonHealthWindowOverlayDirective_1.titleIdCounter}`);
        }
    }
};
WatsonHealthWindowOverlayDirective.titleIdCounter = 0;
WatsonHealthWindowOverlayDirective.ctorParameters = () => [
    { type: ElementRef }
];
__decorate([
    Input(),
    __metadata("design:type", String)
], WatsonHealthWindowOverlayDirective.prototype, "ariaLabel", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], WatsonHealthWindowOverlayDirective.prototype, "ariaLabelledby", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], WatsonHealthWindowOverlayDirective.prototype, "ariaHidden", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], WatsonHealthWindowOverlayDirective.prototype, "title", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], WatsonHealthWindowOverlayDirective.prototype, "isFocusable", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], WatsonHealthWindowOverlayDirective.prototype, "size", void 0);
WatsonHealthWindowOverlayDirective = WatsonHealthWindowOverlayDirective_1 = __decorate([
    Directive({
        selector: "[ibmIconWatsonHealthWindowOverlay]"
    }),
    __metadata("design:paramtypes", [ElementRef])
], WatsonHealthWindowOverlayDirective);
export { WatsonHealthWindowOverlayDirective };
let WatsonHealthWindowOverlayModule = class WatsonHealthWindowOverlayModule {
};
WatsonHealthWindowOverlayModule = __decorate([
    NgModule({
        declarations: [
            WatsonHealthWindowOverlayComponent,
            WatsonHealthWindowOverlayDirective,
        ],
        exports: [
            WatsonHealthWindowOverlayComponent,
            WatsonHealthWindowOverlayDirective,
        ]
    })
], WatsonHealthWindowOverlayModule);
export { WatsonHealthWindowOverlayModule };
//# sourceMappingURL=data:application/json;base64,