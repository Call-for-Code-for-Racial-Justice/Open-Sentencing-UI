import { __decorate, __metadata } from 'tslib';
import { Input, Component, ElementRef, Directive, NgModule } from '@angular/core';
import { getAttributes } from '@carbon/icon-helpers';

var DeploymentPolicyDirective_1;
let DeploymentPolicyComponent = class DeploymentPolicyComponent {
    constructor() {
        this.focusable = false;
    }
};
__decorate([
    Input(),
    __metadata("design:type", String)
], DeploymentPolicyComponent.prototype, "ariaLabel", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], DeploymentPolicyComponent.prototype, "ariaLabelledby", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], DeploymentPolicyComponent.prototype, "ariaHidden", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], DeploymentPolicyComponent.prototype, "title", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], DeploymentPolicyComponent.prototype, "focusable", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], DeploymentPolicyComponent.prototype, "innerClass", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], DeploymentPolicyComponent.prototype, "size", void 0);
DeploymentPolicyComponent = __decorate([
    Component({
        selector: "ibm-icon-deployment-policy",
        template: `
    <svg
      ibmIconDeploymentPolicy
      [size]="size"
      [ariaLabel]="ariaLabel"
      [ariaLabelledby]="ariaLabelledby"
      [ariaHidden]="ariaHidden"
      [title]="title"
      [isFocusable]="focusable"
      [attr.class]="innerClass">
    </svg>
  `
    })
], DeploymentPolicyComponent);
let DeploymentPolicyDirective = DeploymentPolicyDirective_1 = class DeploymentPolicyDirective {
    constructor(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
        this.icons = {
            "32": {
                metadata: { "moduleName": "DeploymentPolicy32", "filepath": "deployment-policy/32.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 32, "height": 32 }, "content": [{ "elem": "path", "attrs": { "d": "M19 16L19 14 26.171 14 23.878 11.707 25.292 10.293 30 15 25.292 19.707 23.878 18.293 26.171 16 19 16zM17 12L15 12 15 5.828 12.707 8.121 11.293 6.707 16 2 20.707 6.707 19.293 8.121 17 5.828 17 12zM17 20.1011V18a4.0045 4.0045 0 00-4-4H5.8281l2.293-2.293L6.707 10.293 2 15l4.707 4.707 1.4141-1.414L5.8281 16H13a2.0025 2.0025 0 012 2v2.1011a5 5 0 102 0zM16 28a3 3 0 113-3A3.0033 3.0033 0 0116 28z" } }], "name": "deployment-policy", "size": 32 }, "size": 32 },
                svg: `<svg focusable="false" preserveAspectRatio="xMidYMid meet" xmlns="http://www.w3.org/2000/svg" fill="currentColor" width="32" height="32" viewBox="0 0 32 32" aria-hidden="true"><path d="M19 16L19 14 26.171 14 23.878 11.707 25.292 10.293 30 15 25.292 19.707 23.878 18.293 26.171 16 19 16zM17 12L15 12 15 5.828 12.707 8.121 11.293 6.707 16 2 20.707 6.707 19.293 8.121 17 5.828 17 12zM17 20.1011V18a4.0045 4.0045 0 00-4-4H5.8281l2.293-2.293L6.707 10.293 2 15l4.707 4.707 1.4141-1.414L5.8281 16H13a2.0025 2.0025 0 012 2v2.1011a5 5 0 102 0zM16 28a3 3 0 113-3A3.0033 3.0033 0 0116 28z"></path></svg>`
            },
            "24": {
                metadata: { "moduleName": "DeploymentPolicy24", "filepath": "deployment-policy/24.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 24, "height": 24 }, "content": [{ "elem": "path", "attrs": { "d": "M19 16L19 14 26.171 14 23.878 11.707 25.292 10.293 30 15 25.292 19.707 23.878 18.293 26.171 16 19 16zM17 12L15 12 15 5.828 12.707 8.121 11.293 6.707 16 2 20.707 6.707 19.293 8.121 17 5.828 17 12zM17 20.1011V18a4.0045 4.0045 0 00-4-4H5.8281l2.293-2.293L6.707 10.293 2 15l4.707 4.707 1.4141-1.414L5.8281 16H13a2.0025 2.0025 0 012 2v2.1011a5 5 0 102 0zM16 28a3 3 0 113-3A3.0033 3.0033 0 0116 28z" } }], "name": "deployment-policy", "size": 24 }, "size": 24 },
                svg: `<svg focusable="false" preserveAspectRatio="xMidYMid meet" xmlns="http://www.w3.org/2000/svg" fill="currentColor" width="24" height="24" viewBox="0 0 32 32" aria-hidden="true"><path d="M19 16L19 14 26.171 14 23.878 11.707 25.292 10.293 30 15 25.292 19.707 23.878 18.293 26.171 16 19 16zM17 12L15 12 15 5.828 12.707 8.121 11.293 6.707 16 2 20.707 6.707 19.293 8.121 17 5.828 17 12zM17 20.1011V18a4.0045 4.0045 0 00-4-4H5.8281l2.293-2.293L6.707 10.293 2 15l4.707 4.707 1.4141-1.414L5.8281 16H13a2.0025 2.0025 0 012 2v2.1011a5 5 0 102 0zM16 28a3 3 0 113-3A3.0033 3.0033 0 0116 28z"></path></svg>`
            },
            "20": {
                metadata: { "moduleName": "DeploymentPolicy20", "filepath": "deployment-policy/20.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 20, "height": 20 }, "content": [{ "elem": "path", "attrs": { "d": "M19 16L19 14 26.171 14 23.878 11.707 25.292 10.293 30 15 25.292 19.707 23.878 18.293 26.171 16 19 16zM17 12L15 12 15 5.828 12.707 8.121 11.293 6.707 16 2 20.707 6.707 19.293 8.121 17 5.828 17 12zM17 20.1011V18a4.0045 4.0045 0 00-4-4H5.8281l2.293-2.293L6.707 10.293 2 15l4.707 4.707 1.4141-1.414L5.8281 16H13a2.0025 2.0025 0 012 2v2.1011a5 5 0 102 0zM16 28a3 3 0 113-3A3.0033 3.0033 0 0116 28z" } }], "name": "deployment-policy", "size": 20 }, "size": 20 },
                svg: `<svg focusable="false" preserveAspectRatio="xMidYMid meet" xmlns="http://www.w3.org/2000/svg" fill="currentColor" width="20" height="20" viewBox="0 0 32 32" aria-hidden="true"><path d="M19 16L19 14 26.171 14 23.878 11.707 25.292 10.293 30 15 25.292 19.707 23.878 18.293 26.171 16 19 16zM17 12L15 12 15 5.828 12.707 8.121 11.293 6.707 16 2 20.707 6.707 19.293 8.121 17 5.828 17 12zM17 20.1011V18a4.0045 4.0045 0 00-4-4H5.8281l2.293-2.293L6.707 10.293 2 15l4.707 4.707 1.4141-1.414L5.8281 16H13a2.0025 2.0025 0 012 2v2.1011a5 5 0 102 0zM16 28a3 3 0 113-3A3.0033 3.0033 0 0116 28z"></path></svg>`
            },
            "16": {
                metadata: { "moduleName": "DeploymentPolicy16", "filepath": "deployment-policy/16.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 16, "height": 16 }, "content": [{ "elem": "path", "attrs": { "d": "M19 16L19 14 26.171 14 23.878 11.707 25.292 10.293 30 15 25.292 19.707 23.878 18.293 26.171 16 19 16zM17 12L15 12 15 5.828 12.707 8.121 11.293 6.707 16 2 20.707 6.707 19.293 8.121 17 5.828 17 12zM17 20.1011V18a4.0045 4.0045 0 00-4-4H5.8281l2.293-2.293L6.707 10.293 2 15l4.707 4.707 1.4141-1.414L5.8281 16H13a2.0025 2.0025 0 012 2v2.1011a5 5 0 102 0zM16 28a3 3 0 113-3A3.0033 3.0033 0 0116 28z" } }], "name": "deployment-policy", "size": 16 }, "size": 16 },
                svg: `<svg focusable="false" preserveAspectRatio="xMidYMid meet" xmlns="http://www.w3.org/2000/svg" fill="currentColor" width="16" height="16" viewBox="0 0 32 32" aria-hidden="true"><path d="M19 16L19 14 26.171 14 23.878 11.707 25.292 10.293 30 15 25.292 19.707 23.878 18.293 26.171 16 19 16zM17 12L15 12 15 5.828 12.707 8.121 11.293 6.707 16 2 20.707 6.707 19.293 8.121 17 5.828 17 12zM17 20.1011V18a4.0045 4.0045 0 00-4-4H5.8281l2.293-2.293L6.707 10.293 2 15l4.707 4.707 1.4141-1.414L5.8281 16H13a2.0025 2.0025 0 012 2v2.1011a5 5 0 102 0zM16 28a3 3 0 113-3A3.0033 3.0033 0 0116 28z"></path></svg>`
            },
        };
    }
    ngAfterViewInit() {
        const svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        const icon = this.icons[this.size];
        const domParser = new DOMParser();
        const rawSVG = icon.svg;
        const svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        let node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        const attributes = getAttributes({
            width: icon.metadata.descriptor.attrs.height,
            height: icon.metadata.descriptor.attrs.height,
            viewBox: icon.metadata.descriptor.attrs.viewBox,
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        const attrKeys = Object.keys(attributes);
        for (let i = 0; i < attrKeys.length; i++) {
            const key = attrKeys[i];
            const value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            const title = document.createElement("title");
            title.textContent = attributes.title;
            DeploymentPolicyDirective_1.titleIdCounter++;
            title.setAttribute("id", `deployment-policy-${DeploymentPolicyDirective_1.titleIdCounter}`);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", `deployment-policy-${DeploymentPolicyDirective_1.titleIdCounter}`);
        }
    }
};
DeploymentPolicyDirective.titleIdCounter = 0;
DeploymentPolicyDirective.ctorParameters = () => [
    { type: ElementRef }
];
__decorate([
    Input(),
    __metadata("design:type", String)
], DeploymentPolicyDirective.prototype, "ariaLabel", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], DeploymentPolicyDirective.prototype, "ariaLabelledby", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], DeploymentPolicyDirective.prototype, "ariaHidden", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], DeploymentPolicyDirective.prototype, "title", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], DeploymentPolicyDirective.prototype, "isFocusable", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], DeploymentPolicyDirective.prototype, "size", void 0);
DeploymentPolicyDirective = DeploymentPolicyDirective_1 = __decorate([
    Directive({
        selector: "[ibmIconDeploymentPolicy]"
    }),
    __metadata("design:paramtypes", [ElementRef])
], DeploymentPolicyDirective);
let DeploymentPolicyModule = class DeploymentPolicyModule {
};
DeploymentPolicyModule = __decorate([
    NgModule({
        declarations: [
            DeploymentPolicyComponent,
            DeploymentPolicyDirective,
        ],
        exports: [
            DeploymentPolicyComponent,
            DeploymentPolicyDirective,
        ]
    })
], DeploymentPolicyModule);

export { DeploymentPolicyComponent, DeploymentPolicyDirective, DeploymentPolicyModule };
