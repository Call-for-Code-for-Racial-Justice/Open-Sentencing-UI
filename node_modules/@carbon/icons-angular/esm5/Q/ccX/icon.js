import { __decorate, __metadata } from "tslib";
import { NgModule, Component, Directive, ElementRef, Input, AfterViewInit } from "@angular/core";
import { getAttributes } from "@carbon/icon-helpers";
var QCcXComponent = /** @class */ (function () {
    function QCcXComponent() {
        this.focusable = false;
    }
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], QCcXComponent.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], QCcXComponent.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], QCcXComponent.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], QCcXComponent.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], QCcXComponent.prototype, "focusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], QCcXComponent.prototype, "innerClass", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], QCcXComponent.prototype, "size", void 0);
    QCcXComponent = __decorate([
        Component({
            selector: "ibm-icon-q-cc-x",
            template: "\n    <svg\n      ibmIconQCcX\n      [size]=\"size\"\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
        })
    ], QCcXComponent);
    return QCcXComponent;
}());
export { QCcXComponent };
var QCcXDirective = /** @class */ (function () {
    function QCcXDirective(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
        this.icons = {
            "32": {
                metadata: { "moduleName": "QCcX32", "filepath": "Q/ccX/32.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 32, "height": 32 }, "content": [{ "elem": "path", "attrs": { "d": "M10 23H5a2 2 0 01-2-2V15a2 2 0 012-2h5v2H5v6h5zM19 23H14a2 2 0 01-2-2V15a2 2 0 012-2h5v2H14v6h5zM29 9L27 9 25 15 23 9 21 9 23.75 16 21 23 23 23 25 17 27 23 29 23 26.25 16 29 9z" } }], "name": "ccX", "size": 32 }, "size": 32 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M10 23H5a2 2 0 01-2-2V15a2 2 0 012-2h5v2H5v6h5zM19 23H14a2 2 0 01-2-2V15a2 2 0 012-2h5v2H14v6h5zM29 9L27 9 25 15 23 9 21 9 23.75 16 21 23 23 23 25 17 27 23 29 23 26.25 16 29 9z\"></path></svg>"
            },
            "24": {
                metadata: { "moduleName": "QCcX24", "filepath": "Q/ccX/24.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 24, "height": 24 }, "content": [{ "elem": "path", "attrs": { "d": "M10 23H5a2 2 0 01-2-2V15a2 2 0 012-2h5v2H5v6h5zM19 23H14a2 2 0 01-2-2V15a2 2 0 012-2h5v2H14v6h5zM29 9L27 9 25 15 23 9 21 9 23.75 16 21 23 23 23 25 17 27 23 29 23 26.25 16 29 9z" } }], "name": "ccX", "size": 24 }, "size": 24 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M10 23H5a2 2 0 01-2-2V15a2 2 0 012-2h5v2H5v6h5zM19 23H14a2 2 0 01-2-2V15a2 2 0 012-2h5v2H14v6h5zM29 9L27 9 25 15 23 9 21 9 23.75 16 21 23 23 23 25 17 27 23 29 23 26.25 16 29 9z\"></path></svg>"
            },
            "20": {
                metadata: { "moduleName": "QCcX20", "filepath": "Q/ccX/20.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 20, "height": 20 }, "content": [{ "elem": "path", "attrs": { "d": "M10 23H5a2 2 0 01-2-2V15a2 2 0 012-2h5v2H5v6h5zM19 23H14a2 2 0 01-2-2V15a2 2 0 012-2h5v2H14v6h5zM29 9L27 9 25 15 23 9 21 9 23.75 16 21 23 23 23 25 17 27 23 29 23 26.25 16 29 9z" } }], "name": "ccX", "size": 20 }, "size": 20 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M10 23H5a2 2 0 01-2-2V15a2 2 0 012-2h5v2H5v6h5zM19 23H14a2 2 0 01-2-2V15a2 2 0 012-2h5v2H14v6h5zM29 9L27 9 25 15 23 9 21 9 23.75 16 21 23 23 23 25 17 27 23 29 23 26.25 16 29 9z\"></path></svg>"
            },
            "16": {
                metadata: { "moduleName": "QCcX16", "filepath": "Q/ccX/16.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 16, "height": 16 }, "content": [{ "elem": "path", "attrs": { "d": "M10 23H5a2 2 0 01-2-2V15a2 2 0 012-2h5v2H5v6h5zM19 23H14a2 2 0 01-2-2V15a2 2 0 012-2h5v2H14v6h5zM29 9L27 9 25 15 23 9 21 9 23.75 16 21 23 23 23 25 17 27 23 29 23 26.25 16 29 9z" } }], "name": "ccX", "size": 16 }, "size": 16 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"16\" height=\"16\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M10 23H5a2 2 0 01-2-2V15a2 2 0 012-2h5v2H5v6h5zM19 23H14a2 2 0 01-2-2V15a2 2 0 012-2h5v2H14v6h5zM29 9L27 9 25 15 23 9 21 9 23.75 16 21 23 23 23 25 17 27 23 29 23 26.25 16 29 9z\"></path></svg>"
            },
        };
    }
    QCcXDirective_1 = QCcXDirective;
    QCcXDirective.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var icon = this.icons[this.size];
        var domParser = new DOMParser();
        var rawSVG = icon.svg;
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: icon.metadata.descriptor.attrs.height,
            height: icon.metadata.descriptor.attrs.height,
            viewBox: icon.metadata.descriptor.attrs.viewBox,
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            QCcXDirective_1.titleIdCounter++;
            title.setAttribute("id", "q-cc-x-" + QCcXDirective_1.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "q-cc-x-" + QCcXDirective_1.titleIdCounter);
        }
    };
    var QCcXDirective_1;
    QCcXDirective.titleIdCounter = 0;
    QCcXDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], QCcXDirective.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], QCcXDirective.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], QCcXDirective.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], QCcXDirective.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], QCcXDirective.prototype, "isFocusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], QCcXDirective.prototype, "size", void 0);
    QCcXDirective = QCcXDirective_1 = __decorate([
        Directive({
            selector: "[ibmIconQCcX]"
        }),
        __metadata("design:paramtypes", [ElementRef])
    ], QCcXDirective);
    return QCcXDirective;
}());
export { QCcXDirective };
var QCcXModule = /** @class */ (function () {
    function QCcXModule() {
    }
    QCcXModule = __decorate([
        NgModule({
            declarations: [
                QCcXComponent,
                QCcXDirective,
            ],
            exports: [
                QCcXComponent,
                QCcXDirective,
            ]
        })
    ], QCcXModule);
    return QCcXModule;
}());
export { QCcXModule };
//# sourceMappingURL=data:application/json;base64,