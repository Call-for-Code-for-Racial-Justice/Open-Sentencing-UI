import { __decorate, __metadata } from "tslib";
import { NgModule, Component, Directive, ElementRef, Input, AfterViewInit } from "@angular/core";
import { getAttributes } from "@carbon/icon-helpers";
var SkipForwardSolidFilledComponent = /** @class */ (function () {
    function SkipForwardSolidFilledComponent() {
        this.focusable = false;
    }
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SkipForwardSolidFilledComponent.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SkipForwardSolidFilledComponent.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], SkipForwardSolidFilledComponent.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SkipForwardSolidFilledComponent.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], SkipForwardSolidFilledComponent.prototype, "focusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SkipForwardSolidFilledComponent.prototype, "innerClass", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SkipForwardSolidFilledComponent.prototype, "size", void 0);
    SkipForwardSolidFilledComponent = __decorate([
        Component({
            selector: "ibm-icon-skip-forward-solid-filled",
            template: "\n    <svg\n      ibmIconSkipForwardSolidFilled\n      [size]=\"size\"\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
        })
    ], SkipForwardSolidFilledComponent);
    return SkipForwardSolidFilledComponent;
}());
export { SkipForwardSolidFilledComponent };
var SkipForwardSolidFilledDirective = /** @class */ (function () {
    function SkipForwardSolidFilledDirective(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
        this.icons = {
            "32": {
                metadata: { "moduleName": "SkipForwardSolidFilled32", "filepath": "skip--forward--solid--filled/32.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 32, "height": 32 }, "content": [{ "elem": "path", "attrs": { "d": "M16,2A14,14,0,1,0,30,16,14,14,0,0,0,16,2Zm2.4858,14.874-9,5A1,1,0,0,1,8,21V11a1,1,0,0,1,1.4858-.874l9,5a1,1,0,0,1,0,1.748ZM24,22H22V10h2Z" } }, { "elem": "path", "attrs": { "fill": "none", "d": "M22 10H24V22H22zM8.4927 21.8618A1 1 0 018 21V11a1 1 0 011.4858-.8743l9 5a1 1 0 010 1.7486l-9 5a1.0009 1.0009 0 01-.9931-.0125z" } }], "name": "skip--forward--solid--filled", "size": 32 }, "size": 32 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M16,2A14,14,0,1,0,30,16,14,14,0,0,0,16,2Zm2.4858,14.874-9,5A1,1,0,0,1,8,21V11a1,1,0,0,1,1.4858-.874l9,5a1,1,0,0,1,0,1.748ZM24,22H22V10h2Z\"></path><path fill=\"none\" d=\"M22 10H24V22H22zM8.4927 21.8618A1 1 0 018 21V11a1 1 0 011.4858-.8743l9 5a1 1 0 010 1.7486l-9 5a1.0009 1.0009 0 01-.9931-.0125z\"></path></svg>"
            },
            "24": {
                metadata: { "moduleName": "SkipForwardSolidFilled24", "filepath": "skip--forward--solid--filled/24.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 24, "height": 24 }, "content": [{ "elem": "path", "attrs": { "d": "M16,2A14,14,0,1,0,30,16,14,14,0,0,0,16,2Zm2.4858,14.874-9,5A1,1,0,0,1,8,21V11a1,1,0,0,1,1.4858-.874l9,5a1,1,0,0,1,0,1.748ZM24,22H22V10h2Z" } }, { "elem": "path", "attrs": { "fill": "none", "d": "M22 10H24V22H22zM8.4927 21.8618A1 1 0 018 21V11a1 1 0 011.4858-.8743l9 5a1 1 0 010 1.7486l-9 5a1.0009 1.0009 0 01-.9931-.0125z" } }], "name": "skip--forward--solid--filled", "size": 24 }, "size": 24 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M16,2A14,14,0,1,0,30,16,14,14,0,0,0,16,2Zm2.4858,14.874-9,5A1,1,0,0,1,8,21V11a1,1,0,0,1,1.4858-.874l9,5a1,1,0,0,1,0,1.748ZM24,22H22V10h2Z\"></path><path fill=\"none\" d=\"M22 10H24V22H22zM8.4927 21.8618A1 1 0 018 21V11a1 1 0 011.4858-.8743l9 5a1 1 0 010 1.7486l-9 5a1.0009 1.0009 0 01-.9931-.0125z\"></path></svg>"
            },
            "20": {
                metadata: { "moduleName": "SkipForwardSolidFilled20", "filepath": "skip--forward--solid--filled/20.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 20, "height": 20 }, "content": [{ "elem": "path", "attrs": { "d": "M16,2A14,14,0,1,0,30,16,14,14,0,0,0,16,2Zm2.4858,14.874-9,5A1,1,0,0,1,8,21V11a1,1,0,0,1,1.4858-.874l9,5a1,1,0,0,1,0,1.748ZM24,22H22V10h2Z" } }, { "elem": "path", "attrs": { "fill": "none", "d": "M22 10H24V22H22zM8.4927 21.8618A1 1 0 018 21V11a1 1 0 011.4858-.8743l9 5a1 1 0 010 1.7486l-9 5a1.0009 1.0009 0 01-.9931-.0125z" } }], "name": "skip--forward--solid--filled", "size": 20 }, "size": 20 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M16,2A14,14,0,1,0,30,16,14,14,0,0,0,16,2Zm2.4858,14.874-9,5A1,1,0,0,1,8,21V11a1,1,0,0,1,1.4858-.874l9,5a1,1,0,0,1,0,1.748ZM24,22H22V10h2Z\"></path><path fill=\"none\" d=\"M22 10H24V22H22zM8.4927 21.8618A1 1 0 018 21V11a1 1 0 011.4858-.8743l9 5a1 1 0 010 1.7486l-9 5a1.0009 1.0009 0 01-.9931-.0125z\"></path></svg>"
            },
            "16": {
                metadata: { "moduleName": "SkipForwardSolidFilled16", "filepath": "skip--forward--solid--filled/16.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 16, "height": 16 }, "content": [{ "elem": "path", "attrs": { "d": "M16,2A14,14,0,1,0,30,16,14,14,0,0,0,16,2Zm2.4858,14.874-9,5A1,1,0,0,1,8,21V11a1,1,0,0,1,1.4858-.874l9,5a1,1,0,0,1,0,1.748ZM24,22H22V10h2Z" } }, { "elem": "path", "attrs": { "fill": "none", "d": "M22 10H24V22H22zM8.4927 21.8618A1 1 0 018 21V11a1 1 0 011.4858-.8743l9 5a1 1 0 010 1.7486l-9 5a1.0009 1.0009 0 01-.9931-.0125z" } }], "name": "skip--forward--solid--filled", "size": 16 }, "size": 16 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"16\" height=\"16\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M16,2A14,14,0,1,0,30,16,14,14,0,0,0,16,2Zm2.4858,14.874-9,5A1,1,0,0,1,8,21V11a1,1,0,0,1,1.4858-.874l9,5a1,1,0,0,1,0,1.748ZM24,22H22V10h2Z\"></path><path fill=\"none\" d=\"M22 10H24V22H22zM8.4927 21.8618A1 1 0 018 21V11a1 1 0 011.4858-.8743l9 5a1 1 0 010 1.7486l-9 5a1.0009 1.0009 0 01-.9931-.0125z\"></path></svg>"
            },
        };
    }
    SkipForwardSolidFilledDirective_1 = SkipForwardSolidFilledDirective;
    SkipForwardSolidFilledDirective.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var icon = this.icons[this.size];
        var domParser = new DOMParser();
        var rawSVG = icon.svg;
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: icon.metadata.descriptor.attrs.height,
            height: icon.metadata.descriptor.attrs.height,
            viewBox: icon.metadata.descriptor.attrs.viewBox,
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            SkipForwardSolidFilledDirective_1.titleIdCounter++;
            title.setAttribute("id", "skip-forward-solid-filled-" + SkipForwardSolidFilledDirective_1.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "skip-forward-solid-filled-" + SkipForwardSolidFilledDirective_1.titleIdCounter);
        }
    };
    var SkipForwardSolidFilledDirective_1;
    SkipForwardSolidFilledDirective.titleIdCounter = 0;
    SkipForwardSolidFilledDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SkipForwardSolidFilledDirective.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SkipForwardSolidFilledDirective.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], SkipForwardSolidFilledDirective.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SkipForwardSolidFilledDirective.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], SkipForwardSolidFilledDirective.prototype, "isFocusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SkipForwardSolidFilledDirective.prototype, "size", void 0);
    SkipForwardSolidFilledDirective = SkipForwardSolidFilledDirective_1 = __decorate([
        Directive({
            selector: "[ibmIconSkipForwardSolidFilled]"
        }),
        __metadata("design:paramtypes", [ElementRef])
    ], SkipForwardSolidFilledDirective);
    return SkipForwardSolidFilledDirective;
}());
export { SkipForwardSolidFilledDirective };
var SkipForwardSolidFilledModule = /** @class */ (function () {
    function SkipForwardSolidFilledModule() {
    }
    SkipForwardSolidFilledModule = __decorate([
        NgModule({
            declarations: [
                SkipForwardSolidFilledComponent,
                SkipForwardSolidFilledDirective,
            ],
            exports: [
                SkipForwardSolidFilledComponent,
                SkipForwardSolidFilledDirective,
            ]
        })
    ], SkipForwardSolidFilledModule);
    return SkipForwardSolidFilledModule;
}());
export { SkipForwardSolidFilledModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaWNvbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3RzL3NraXAtLWZvcndhcmQtLXNvbGlkLS1maWxsZWQvaWNvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0EsT0FBTyxFQUNMLFFBQVEsRUFDUixTQUFTLEVBQ1QsU0FBUyxFQUNULFVBQVUsRUFDVixLQUFLLEVBQ0wsYUFBYSxFQUNkLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQWtCckQ7SUFBQTtRQUtXLGNBQVMsR0FBWSxLQUFLLENBQUM7SUFHdEMsQ0FBQztJQVBVO1FBQVIsS0FBSyxFQUFFOztzRUFBbUI7SUFDbEI7UUFBUixLQUFLLEVBQUU7OzJFQUF3QjtJQUN2QjtRQUFSLEtBQUssRUFBRTs7dUVBQXFCO0lBQ3BCO1FBQVIsS0FBSyxFQUFFOztrRUFBZTtJQUNkO1FBQVIsS0FBSyxFQUFFOztzRUFBNEI7SUFDM0I7UUFBUixLQUFLLEVBQUU7O3VFQUFvQjtJQUNuQjtRQUFSLEtBQUssRUFBRTs7aUVBQWM7SUFQWCwrQkFBK0I7UUFmM0MsU0FBUyxDQUFDO1lBQ1YsUUFBUSxFQUFFLG9DQUFvQztZQUM3QyxRQUFRLEVBQUUsdVNBV1Q7U0FDRixDQUFDO09BQ1csK0JBQStCLENBUTNDO0lBQUQsc0NBQUM7Q0FBQSxBQVJELElBUUM7U0FSWSwrQkFBK0I7QUFlNUM7SUFrQ0UseUNBQXNCLFVBQXNCO1FBQXRCLGVBQVUsR0FBVixVQUFVLENBQVk7UUEzQm5DLGdCQUFXLEdBQVksS0FBSyxDQUFDO1FBRzVCLFVBQUssR0FBRztZQUVsQixJQUFJLEVBQUU7Z0JBQ0osUUFBUSxFQUFFLEVBQUMsWUFBWSxFQUFDLDBCQUEwQixFQUFDLFVBQVUsRUFBQyxvQ0FBb0MsRUFBQyxZQUFZLEVBQUMsRUFBQyxNQUFNLEVBQUMsS0FBSyxFQUFDLE9BQU8sRUFBQyxFQUFDLE9BQU8sRUFBQyw0QkFBNEIsRUFBQyxT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QTZCLGlDQUErQixDQUFDLGNBQWdCLENBQUMsQ0FBQztTQUNwSDtJQUNKLENBQUM7O0lBcEZPLDhDQUFjLEdBQUcsQ0FBQyxDQUFDOztnQkFpQ1EsVUFBVTs7SUEvQm5DO1FBQVIsS0FBSyxFQUFFOztzRUFBbUI7SUFDbEI7UUFBUixLQUFLLEVBQUU7OzJFQUF3QjtJQUN2QjtRQUFSLEtBQUssRUFBRTs7dUVBQXFCO0lBQ3BCO1FBQVIsS0FBSyxFQUFFOztrRUFBZTtJQUNkO1FBQVIsS0FBSyxFQUFFOzt3RUFBOEI7SUFDN0I7UUFBUixLQUFLLEVBQUU7O2lFQUFjO0lBUlgsK0JBQStCO1FBSDNDLFNBQVMsQ0FBQztZQUNULFFBQVEsRUFBRSxpQ0FBaUM7U0FDNUMsQ0FBQzt5Q0FtQ2tDLFVBQVU7T0FsQ2pDLCtCQUErQixDQXNGM0M7SUFBRCxzQ0FBQztDQUFBLEFBdEZELElBc0ZDO1NBdEZZLCtCQUErQjtBQXVHNUM7SUFBQTtJQUEyQyxDQUFDO0lBQS9CLDRCQUE0QjtRQWR4QyxRQUFRLENBQUM7WUFDUixZQUFZLEVBQUU7Z0JBRWQsK0JBQStCO2dCQUMvQiwrQkFBK0I7YUFFOUI7WUFDRCxPQUFPLEVBQUU7Z0JBRVQsK0JBQStCO2dCQUMvQiwrQkFBK0I7YUFFOUI7U0FDRixDQUFDO09BQ1csNEJBQTRCLENBQUc7SUFBRCxtQ0FBQztDQUFBLEFBQTVDLElBQTRDO1NBQS9CLDRCQUE0QiIsInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IHtcbiAgTmdNb2R1bGUsXG4gIENvbXBvbmVudCxcbiAgRGlyZWN0aXZlLFxuICBFbGVtZW50UmVmLFxuICBJbnB1dCxcbiAgQWZ0ZXJWaWV3SW5pdFxufSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHsgZ2V0QXR0cmlidXRlcyB9IGZyb20gXCJAY2FyYm9uL2ljb24taGVscGVyc1wiO1xuXG5cbkBDb21wb25lbnQoe1xuXHRzZWxlY3RvcjogXCJpYm0taWNvbi1za2lwLWZvcndhcmQtc29saWQtZmlsbGVkXCIsXG4gIHRlbXBsYXRlOiBgXG4gICAgPHN2Z1xuICAgICAgaWJtSWNvblNraXBGb3J3YXJkU29saWRGaWxsZWRcbiAgICAgIFtzaXplXT1cInNpemVcIlxuICAgICAgW2FyaWFMYWJlbF09XCJhcmlhTGFiZWxcIlxuICAgICAgW2FyaWFMYWJlbGxlZGJ5XT1cImFyaWFMYWJlbGxlZGJ5XCJcbiAgICAgIFthcmlhSGlkZGVuXT1cImFyaWFIaWRkZW5cIlxuICAgICAgW3RpdGxlXT1cInRpdGxlXCJcbiAgICAgIFtpc0ZvY3VzYWJsZV09XCJmb2N1c2FibGVcIlxuICAgICAgW2F0dHIuY2xhc3NdPVwiaW5uZXJDbGFzc1wiPlxuICAgIDwvc3ZnPlxuICBgXG59KVxuZXhwb3J0IGNsYXNzIFNraXBGb3J3YXJkU29saWRGaWxsZWRDb21wb25lbnQge1xuICBASW5wdXQoKSBhcmlhTGFiZWw6IHN0cmluZztcbiAgQElucHV0KCkgYXJpYUxhYmVsbGVkYnk6IHN0cmluZztcbiAgQElucHV0KCkgYXJpYUhpZGRlbjogYm9vbGVhbjtcbiAgQElucHV0KCkgdGl0bGU6IHN0cmluZztcbiAgQElucHV0KCkgZm9jdXNhYmxlOiBib29sZWFuID0gZmFsc2U7XG4gIEBJbnB1dCgpIGlubmVyQ2xhc3M6IHN0cmluZztcbiAgQElucHV0KCkgc2l6ZTogc3RyaW5nO1xufVxuXG5cblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiBcIltpYm1JY29uU2tpcEZvcndhcmRTb2xpZEZpbGxlZF1cIlxufSlcbmV4cG9ydCBjbGFzcyBTa2lwRm9yd2FyZFNvbGlkRmlsbGVkRGlyZWN0aXZlIGltcGxlbWVudHMgQWZ0ZXJWaWV3SW5pdCB7XG4gIHN0YXRpYyB0aXRsZUlkQ291bnRlciA9IDA7XG5cbiAgQElucHV0KCkgYXJpYUxhYmVsOiBzdHJpbmc7XG4gIEBJbnB1dCgpIGFyaWFMYWJlbGxlZGJ5OiBzdHJpbmc7XG4gIEBJbnB1dCgpIGFyaWFIaWRkZW46IGJvb2xlYW47XG4gIEBJbnB1dCgpIHRpdGxlOiBzdHJpbmc7XG4gIEBJbnB1dCgpIGlzRm9jdXNhYmxlOiBib29sZWFuID0gZmFsc2U7XG4gIEBJbnB1dCgpIHNpemU6IHN0cmluZztcblxuICBwcm90ZWN0ZWQgaWNvbnMgPSB7XG4gICAgXG4gIFwiMzJcIjoge1xuICAgIG1ldGFkYXRhOiB7XCJtb2R1bGVOYW1lXCI6XCJTa2lwRm9yd2FyZFNvbGlkRmlsbGVkMzJcIixcImZpbGVwYXRoXCI6XCJza2lwLS1mb3J3YXJkLS1zb2xpZC0tZmlsbGVkLzMyLmpzXCIsXCJkZXNjcmlwdG9yXCI6e1wiZWxlbVwiOlwic3ZnXCIsXCJhdHRyc1wiOntcInhtbG5zXCI6XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLFwidmlld0JveFwiOlwiMCAwIDMyIDMyXCIsXCJmaWxsXCI6XCJjdXJyZW50Q29sb3JcIixcIndpZHRoXCI6MzIsXCJoZWlnaHRcIjozMn0sXCJjb250ZW50XCI6W3tcImVsZW1cIjpcInBhdGhcIixcImF0dHJzXCI6e1wiZFwiOlwiTTE2LDJBMTQsMTQsMCwxLDAsMzAsMTYsMTQsMTQsMCwwLDAsMTYsMlptMi40ODU4LDE0Ljg3NC05LDVBMSwxLDAsMCwxLDgsMjFWMTFhMSwxLDAsMCwxLDEuNDg1OC0uODc0bDksNWExLDEsMCwwLDEsMCwxLjc0OFpNMjQsMjJIMjJWMTBoMlpcIn19LHtcImVsZW1cIjpcInBhdGhcIixcImF0dHJzXCI6e1wiZmlsbFwiOlwibm9uZVwiLFwiZFwiOlwiTTIyIDEwSDI0VjIySDIyek04LjQ5MjcgMjEuODYxOEExIDEgMCAwMTggMjFWMTFhMSAxIDAgMDExLjQ4NTgtLjg3NDNsOSA1YTEgMSAwIDAxMCAxLjc0ODZsLTkgNWExLjAwMDkgMS4wMDA5IDAgMDEtLjk5MzEtLjAxMjV6XCJ9fV0sXCJuYW1lXCI6XCJza2lwLS1mb3J3YXJkLS1zb2xpZC0tZmlsbGVkXCIsXCJzaXplXCI6MzJ9LFwic2l6ZVwiOjMyfSxcbiAgICBzdmc6IGA8c3ZnIGZvY3VzYWJsZT1cImZhbHNlXCIgcHJlc2VydmVBc3BlY3RSYXRpbz1cInhNaWRZTWlkIG1lZXRcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgZmlsbD1cImN1cnJlbnRDb2xvclwiIHdpZHRoPVwiMzJcIiBoZWlnaHQ9XCIzMlwiIHZpZXdCb3g9XCIwIDAgMzIgMzJcIiBhcmlhLWhpZGRlbj1cInRydWVcIj48cGF0aCBkPVwiTTE2LDJBMTQsMTQsMCwxLDAsMzAsMTYsMTQsMTQsMCwwLDAsMTYsMlptMi40ODU4LDE0Ljg3NC05LDVBMSwxLDAsMCwxLDgsMjFWMTFhMSwxLDAsMCwxLDEuNDg1OC0uODc0bDksNWExLDEsMCwwLDEsMCwxLjc0OFpNMjQsMjJIMjJWMTBoMlpcIj48L3BhdGg+PHBhdGggZmlsbD1cIm5vbmVcIiBkPVwiTTIyIDEwSDI0VjIySDIyek04LjQ5MjcgMjEuODYxOEExIDEgMCAwMTggMjFWMTFhMSAxIDAgMDExLjQ4NTgtLjg3NDNsOSA1YTEgMSAwIDAxMCAxLjc0ODZsLTkgNWExLjAwMDkgMS4wMDA5IDAgMDEtLjk5MzEtLjAxMjV6XCI+PC9wYXRoPjwvc3ZnPmBcbiAgfSxcblxuICBcIjI0XCI6IHtcbiAgICBtZXRhZGF0YToge1wibW9kdWxlTmFtZVwiOlwiU2tpcEZvcndhcmRTb2xpZEZpbGxlZDI0XCIsXCJmaWxlcGF0aFwiOlwic2tpcC0tZm9yd2FyZC0tc29saWQtLWZpbGxlZC8yNC5qc1wiLFwiZGVzY3JpcHRvclwiOntcImVsZW1cIjpcInN2Z1wiLFwiYXR0cnNcIjp7XCJ4bWxuc1wiOlwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIixcInZpZXdCb3hcIjpcIjAgMCAzMiAzMlwiLFwiZmlsbFwiOlwiY3VycmVudENvbG9yXCIsXCJ3aWR0aFwiOjI0LFwiaGVpZ2h0XCI6MjR9LFwiY29udGVudFwiOlt7XCJlbGVtXCI6XCJwYXRoXCIsXCJhdHRyc1wiOntcImRcIjpcIk0xNiwyQTE0LDE0LDAsMSwwLDMwLDE2LDE0LDE0LDAsMCwwLDE2LDJabTIuNDg1OCwxNC44NzQtOSw1QTEsMSwwLDAsMSw4LDIxVjExYTEsMSwwLDAsMSwxLjQ4NTgtLjg3NGw5LDVhMSwxLDAsMCwxLDAsMS43NDhaTTI0LDIySDIyVjEwaDJaXCJ9fSx7XCJlbGVtXCI6XCJwYXRoXCIsXCJhdHRyc1wiOntcImZpbGxcIjpcIm5vbmVcIixcImRcIjpcIk0yMiAxMEgyNFYyMkgyMnpNOC40OTI3IDIxLjg2MThBMSAxIDAgMDE4IDIxVjExYTEgMSAwIDAxMS40ODU4LS44NzQzbDkgNWExIDEgMCAwMTAgMS43NDg2bC05IDVhMS4wMDA5IDEuMDAwOSAwIDAxLS45OTMxLS4wMTI1elwifX1dLFwibmFtZVwiOlwic2tpcC0tZm9yd2FyZC0tc29saWQtLWZpbGxlZFwiLFwic2l6ZVwiOjI0fSxcInNpemVcIjoyNH0sXG4gICAgc3ZnOiBgPHN2ZyBmb2N1c2FibGU9XCJmYWxzZVwiIHByZXNlcnZlQXNwZWN0UmF0aW89XCJ4TWlkWU1pZCBtZWV0XCIgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIGZpbGw9XCJjdXJyZW50Q29sb3JcIiB3aWR0aD1cIjI0XCIgaGVpZ2h0PVwiMjRcIiB2aWV3Qm94PVwiMCAwIDMyIDMyXCIgYXJpYS1oaWRkZW49XCJ0cnVlXCI+PHBhdGggZD1cIk0xNiwyQTE0LDE0LDAsMSwwLDMwLDE2LDE0LDE0LDAsMCwwLDE2LDJabTIuNDg1OCwxNC44NzQtOSw1QTEsMSwwLDAsMSw4LDIxVjExYTEsMSwwLDAsMSwxLjQ4NTgtLjg3NGw5LDVhMSwxLDAsMCwxLDAsMS43NDhaTTI0LDIySDIyVjEwaDJaXCI+PC9wYXRoPjxwYXRoIGZpbGw9XCJub25lXCIgZD1cIk0yMiAxMEgyNFYyMkgyMnpNOC40OTI3IDIxLjg2MThBMSAxIDAgMDE4IDIxVjExYTEgMSAwIDAxMS40ODU4LS44NzQzbDkgNWExIDEgMCAwMTAgMS43NDg2bC05IDVhMS4wMDA5IDEuMDAwOSAwIDAxLS45OTMxLS4wMTI1elwiPjwvcGF0aD48L3N2Zz5gXG4gIH0sXG5cbiAgXCIyMFwiOiB7XG4gICAgbWV0YWRhdGE6IHtcIm1vZHVsZU5hbWVcIjpcIlNraXBGb3J3YXJkU29saWRGaWxsZWQyMFwiLFwiZmlsZXBhdGhcIjpcInNraXAtLWZvcndhcmQtLXNvbGlkLS1maWxsZWQvMjAuanNcIixcImRlc2NyaXB0b3JcIjp7XCJlbGVtXCI6XCJzdmdcIixcImF0dHJzXCI6e1wieG1sbnNcIjpcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIsXCJ2aWV3Qm94XCI6XCIwIDAgMzIgMzJcIixcImZpbGxcIjpcImN1cnJlbnRDb2xvclwiLFwid2lkdGhcIjoyMCxcImhlaWdodFwiOjIwfSxcImNvbnRlbnRcIjpbe1wiZWxlbVwiOlwicGF0aFwiLFwiYXR0cnNcIjp7XCJkXCI6XCJNMTYsMkExNCwxNCwwLDEsMCwzMCwxNiwxNCwxNCwwLDAsMCwxNiwyWm0yLjQ4NTgsMTQuODc0LTksNUExLDEsMCwwLDEsOCwyMVYxMWExLDEsMCwwLDEsMS40ODU4LS44NzRsOSw1YTEsMSwwLDAsMSwwLDEuNzQ4Wk0yNCwyMkgyMlYxMGgyWlwifX0se1wiZWxlbVwiOlwicGF0aFwiLFwiYXR0cnNcIjp7XCJmaWxsXCI6XCJub25lXCIsXCJkXCI6XCJNMjIgMTBIMjRWMjJIMjJ6TTguNDkyNyAyMS44NjE4QTEgMSAwIDAxOCAyMVYxMWExIDEgMCAwMTEuNDg1OC0uODc0M2w5IDVhMSAxIDAgMDEwIDEuNzQ4NmwtOSA1YTEuMDAwOSAxLjAwMDkgMCAwMS0uOTkzMS0uMDEyNXpcIn19XSxcIm5hbWVcIjpcInNraXAtLWZvcndhcmQtLXNvbGlkLS1maWxsZWRcIixcInNpemVcIjoyMH0sXCJzaXplXCI6MjB9LFxuICAgIHN2ZzogYDxzdmcgZm9jdXNhYmxlPVwiZmFsc2VcIiBwcmVzZXJ2ZUFzcGVjdFJhdGlvPVwieE1pZFlNaWQgbWVldFwiIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiBmaWxsPVwiY3VycmVudENvbG9yXCIgd2lkdGg9XCIyMFwiIGhlaWdodD1cIjIwXCIgdmlld0JveD1cIjAgMCAzMiAzMlwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiPjxwYXRoIGQ9XCJNMTYsMkExNCwxNCwwLDEsMCwzMCwxNiwxNCwxNCwwLDAsMCwxNiwyWm0yLjQ4NTgsMTQuODc0LTksNUExLDEsMCwwLDEsOCwyMVYxMWExLDEsMCwwLDEsMS40ODU4LS44NzRsOSw1YTEsMSwwLDAsMSwwLDEuNzQ4Wk0yNCwyMkgyMlYxMGgyWlwiPjwvcGF0aD48cGF0aCBmaWxsPVwibm9uZVwiIGQ9XCJNMjIgMTBIMjRWMjJIMjJ6TTguNDkyNyAyMS44NjE4QTEgMSAwIDAxOCAyMVYxMWExIDEgMCAwMTEuNDg1OC0uODc0M2w5IDVhMSAxIDAgMDEwIDEuNzQ4NmwtOSA1YTEuMDAwOSAxLjAwMDkgMCAwMS0uOTkzMS0uMDEyNXpcIj48L3BhdGg+PC9zdmc+YFxuICB9LFxuXG4gIFwiMTZcIjoge1xuICAgIG1ldGFkYXRhOiB7XCJtb2R1bGVOYW1lXCI6XCJTa2lwRm9yd2FyZFNvbGlkRmlsbGVkMTZcIixcImZpbGVwYXRoXCI6XCJza2lwLS1mb3J3YXJkLS1zb2xpZC0tZmlsbGVkLzE2LmpzXCIsXCJkZXNjcmlwdG9yXCI6e1wiZWxlbVwiOlwic3ZnXCIsXCJhdHRyc1wiOntcInhtbG5zXCI6XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLFwidmlld0JveFwiOlwiMCAwIDMyIDMyXCIsXCJmaWxsXCI6XCJjdXJyZW50Q29sb3JcIixcIndpZHRoXCI6MTYsXCJoZWlnaHRcIjoxNn0sXCJjb250ZW50XCI6W3tcImVsZW1cIjpcInBhdGhcIixcImF0dHJzXCI6e1wiZFwiOlwiTTE2LDJBMTQsMTQsMCwxLDAsMzAsMTYsMTQsMTQsMCwwLDAsMTYsMlptMi40ODU4LDE0Ljg3NC05LDVBMSwxLDAsMCwxLDgsMjFWMTFhMSwxLDAsMCwxLDEuNDg1OC0uODc0bDksNWExLDEsMCwwLDEsMCwxLjc0OFpNMjQsMjJIMjJWMTBoMlpcIn19LHtcImVsZW1cIjpcInBhdGhcIixcImF0dHJzXCI6e1wiZmlsbFwiOlwibm9uZVwiLFwiZFwiOlwiTTIyIDEwSDI0VjIySDIyek04LjQ5MjcgMjEuODYxOEExIDEgMCAwMTggMjFWMTFhMSAxIDAgMDExLjQ4NTgtLjg3NDNsOSA1YTEgMSAwIDAxMCAxLjc0ODZsLTkgNWExLjAwMDkgMS4wMDA5IDAgMDEtLjk5MzEtLjAxMjV6XCJ9fV0sXCJuYW1lXCI6XCJza2lwLS1mb3J3YXJkLS1zb2xpZC0tZmlsbGVkXCIsXCJzaXplXCI6MTZ9LFwic2l6ZVwiOjE2fSxcbiAgICBzdmc6IGA8c3ZnIGZvY3VzYWJsZT1cImZhbHNlXCIgcHJlc2VydmVBc3BlY3RSYXRpbz1cInhNaWRZTWlkIG1lZXRcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgZmlsbD1cImN1cnJlbnRDb2xvclwiIHdpZHRoPVwiMTZcIiBoZWlnaHQ9XCIxNlwiIHZpZXdCb3g9XCIwIDAgMzIgMzJcIiBhcmlhLWhpZGRlbj1cInRydWVcIj48cGF0aCBkPVwiTTE2LDJBMTQsMTQsMCwxLDAsMzAsMTYsMTQsMTQsMCwwLDAsMTYsMlptMi40ODU4LDE0Ljg3NC05LDVBMSwxLDAsMCwxLDgsMjFWMTFhMSwxLDAsMCwxLDEuNDg1OC0uODc0bDksNWExLDEsMCwwLDEsMCwxLjc0OFpNMjQsMjJIMjJWMTBoMlpcIj48L3BhdGg+PHBhdGggZmlsbD1cIm5vbmVcIiBkPVwiTTIyIDEwSDI0VjIySDIyek04LjQ5MjcgMjEuODYxOEExIDEgMCAwMTggMjFWMTFhMSAxIDAgMDExLjQ4NTgtLjg3NDNsOSA1YTEgMSAwIDAxMCAxLjc0ODZsLTkgNWExLjAwMDkgMS4wMDA5IDAgMDEtLjk5MzEtLjAxMjV6XCI+PC9wYXRoPjwvc3ZnPmBcbiAgfSxcblxuICB9O1xuXG4gIGNvbnN0cnVjdG9yKHByb3RlY3RlZCBlbGVtZW50UmVmOiBFbGVtZW50UmVmKSB7fVxuXG5cdG5nQWZ0ZXJWaWV3SW5pdCgpIHtcbiAgICBjb25zdCBzdmcgPSB0aGlzLmVsZW1lbnRSZWYubmF0aXZlRWxlbWVudDtcbiAgICBzdmcuc2V0QXR0cmlidXRlKFwieG1sbnNcIiwgXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiKTtcblxuICAgIGNvbnN0IGljb24gPSB0aGlzLmljb25zW3RoaXMuc2l6ZV1cblxuICAgIGNvbnN0IGRvbVBhcnNlciA9IG5ldyBET01QYXJzZXIoKTtcbiAgICBjb25zdCByYXdTVkcgPSBpY29uLnN2ZztcbiAgICBjb25zdCBzdmdFbGVtZW50ID0gZG9tUGFyc2VyLnBhcnNlRnJvbVN0cmluZyhyYXdTVkcsIFwiaW1hZ2Uvc3ZnK3htbFwiKS5kb2N1bWVudEVsZW1lbnQ7XG5cbiAgICBsZXQgbm9kZSA9IHN2Z0VsZW1lbnQuZmlyc3RDaGlsZDtcbiAgICB3aGlsZSAobm9kZSkge1xuICAgICAgLy8gaW1wb3J0Tm9kZSBtYWtlcyBhIGNsb25lIG9mIHRoZSBub2RlXG4gICAgICAvLyB0aGlzIGVuc3VyZXMgd2Uga2VlcCBsb29waW5nIG92ZXIgdGhlIG5vZGVzIGluIHRoZSBwYXJzZWQgZG9jdW1lbnRcbiAgICAgIHN2Zy5hcHBlbmRDaGlsZChzdmcub3duZXJEb2N1bWVudC5pbXBvcnROb2RlKG5vZGUsIHRydWUpKTtcbiAgICAgIG5vZGUgPSBub2RlLm5leHRTaWJsaW5nO1xuICAgIH1cblxuICAgIGNvbnN0IGF0dHJpYnV0ZXMgPSBnZXRBdHRyaWJ1dGVzKHtcbiAgICAgIHdpZHRoOiBpY29uLm1ldGFkYXRhLmRlc2NyaXB0b3IuYXR0cnMuaGVpZ2h0LFxuICAgICAgaGVpZ2h0OiBpY29uLm1ldGFkYXRhLmRlc2NyaXB0b3IuYXR0cnMuaGVpZ2h0LFxuICAgICAgdmlld0JveDogaWNvbi5tZXRhZGF0YS5kZXNjcmlwdG9yLmF0dHJzLnZpZXdCb3gsXG4gICAgICB0aXRsZTogdGhpcy50aXRsZSxcbiAgICAgIFwiYXJpYS1sYWJlbFwiOiB0aGlzLmFyaWFMYWJlbCxcbiAgICAgIFwiYXJpYS1sYWJlbGxlZGJ5XCI6IHRoaXMuYXJpYUxhYmVsbGVkYnksXG4gICAgICBcImFyaWEtaGlkZGVuXCI6IHRoaXMuYXJpYUhpZGRlbixcbiAgICAgIGZvY3VzYWJsZTogdGhpcy5pc0ZvY3VzYWJsZS50b1N0cmluZygpXG4gICAgfSk7XG5cbiAgICBjb25zdCBhdHRyS2V5cyA9IE9iamVjdC5rZXlzKGF0dHJpYnV0ZXMpO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYXR0cktleXMubGVuZ3RoOyBpKyspIHtcbiAgICAgIGNvbnN0IGtleSA9IGF0dHJLZXlzW2ldO1xuICAgICAgY29uc3QgdmFsdWUgPSBhdHRyaWJ1dGVzW2tleV07XG4gICAgICBpZiAoa2V5ID09PSBcInRpdGxlXCIpIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG4gICAgICBpZiAodmFsdWUpIHtcbiAgICAgICAgc3ZnLnNldEF0dHJpYnV0ZShrZXksIHZhbHVlKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoYXR0cmlidXRlcy50aXRsZSkge1xuICAgICAgY29uc3QgdGl0bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwidGl0bGVcIik7XG4gICAgICB0aXRsZS50ZXh0Q29udGVudCA9IGF0dHJpYnV0ZXMudGl0bGU7XG4gICAgICBTa2lwRm9yd2FyZFNvbGlkRmlsbGVkRGlyZWN0aXZlLnRpdGxlSWRDb3VudGVyKys7XG4gICAgICB0aXRsZS5zZXRBdHRyaWJ1dGUoXCJpZFwiLCBgc2tpcC1mb3J3YXJkLXNvbGlkLWZpbGxlZC0ke1NraXBGb3J3YXJkU29saWRGaWxsZWREaXJlY3RpdmUudGl0bGVJZENvdW50ZXJ9YCk7XG4gICAgICBzdmcuYXBwZW5kQ2hpbGQodGl0bGUpO1xuICAgICAgc3ZnLnNldEF0dHJpYnV0ZShcImFyaWEtbGFiZWxsZWRieVwiLCBgc2tpcC1mb3J3YXJkLXNvbGlkLWZpbGxlZC0ke1NraXBGb3J3YXJkU29saWRGaWxsZWREaXJlY3RpdmUudGl0bGVJZENvdW50ZXJ9YCk7XG4gICAgfVxuXHR9XG59XG5cblxuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBbXG4gICAgXG4gIFNraXBGb3J3YXJkU29saWRGaWxsZWRDb21wb25lbnQsXG4gIFNraXBGb3J3YXJkU29saWRGaWxsZWREaXJlY3RpdmUsXG5cbiAgXSxcbiAgZXhwb3J0czogW1xuICAgIFxuICBTa2lwRm9yd2FyZFNvbGlkRmlsbGVkQ29tcG9uZW50LFxuICBTa2lwRm9yd2FyZFNvbGlkRmlsbGVkRGlyZWN0aXZlLFxuXG4gIF1cbn0pXG5leHBvcnQgY2xhc3MgU2tpcEZvcndhcmRTb2xpZEZpbGxlZE1vZHVsZSB7fVxuIl19