import { __decorate, __metadata } from "tslib";
import { NgModule, Component, Directive, ElementRef, Input, AfterViewInit } from "@angular/core";
import { getAttributes } from "@carbon/icon-helpers";
var WatsonHealthCdCreateExchangeComponent = /** @class */ (function () {
    function WatsonHealthCdCreateExchangeComponent() {
        this.focusable = false;
    }
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthCdCreateExchangeComponent.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthCdCreateExchangeComponent.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], WatsonHealthCdCreateExchangeComponent.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthCdCreateExchangeComponent.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], WatsonHealthCdCreateExchangeComponent.prototype, "focusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthCdCreateExchangeComponent.prototype, "innerClass", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthCdCreateExchangeComponent.prototype, "size", void 0);
    WatsonHealthCdCreateExchangeComponent = __decorate([
        Component({
            selector: "ibm-icon-watson-health-cd-create-exchange",
            template: "\n    <svg\n      ibmIconWatsonHealthCdCreateExchange\n      [size]=\"size\"\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
        })
    ], WatsonHealthCdCreateExchangeComponent);
    return WatsonHealthCdCreateExchangeComponent;
}());
export { WatsonHealthCdCreateExchangeComponent };
var WatsonHealthCdCreateExchangeDirective = /** @class */ (function () {
    function WatsonHealthCdCreateExchangeDirective(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
        this.icons = {
            "32": {
                metadata: { "moduleName": "WatsonHealthCdCreateExchange32", "filepath": "watson-health/cd--create-exchange/32.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 32, "height": 32 }, "content": [{ "elem": "circle", "attrs": { "cx": "14", "cy": "14", "r": "2" } }, { "elem": "path", "attrs": { "d": "M14,2a12,12,0,0,0,0,24V24A10,10,0,1,1,24,14,8.27,8.27,0,0,1,24,15h2c0-.33.05-.66.05-1A12,12,0,0,0,14,2Z" } }, { "elem": "path", "attrs": { "d": "M17 24L26.17 24 23.58 26.59 25 28 30 23 25 18 23.58 19.42 26.17 22 17 22 17 24zM14 20a6 6 0 116-6A6 6 0 0114 20zm0-10a4 4 0 104 4A4 4 0 0014 10z" } }], "name": "cd--create-exchange", "size": 32 }, "size": 32 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><circle cx=\"14\" cy=\"14\" r=\"2\"></circle><path d=\"M14,2a12,12,0,0,0,0,24V24A10,10,0,1,1,24,14,8.27,8.27,0,0,1,24,15h2c0-.33.05-.66.05-1A12,12,0,0,0,14,2Z\"></path><path d=\"M17 24L26.17 24 23.58 26.59 25 28 30 23 25 18 23.58 19.42 26.17 22 17 22 17 24zM14 20a6 6 0 116-6A6 6 0 0114 20zm0-10a4 4 0 104 4A4 4 0 0014 10z\"></path></svg>"
            },
            "24": {
                metadata: { "moduleName": "WatsonHealthCdCreateExchange24", "filepath": "watson-health/cd--create-exchange/24.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 24, "height": 24 }, "content": [{ "elem": "circle", "attrs": { "cx": "14", "cy": "14", "r": "2" } }, { "elem": "path", "attrs": { "d": "M14,2a12,12,0,0,0,0,24V24A10,10,0,1,1,24,14,8.27,8.27,0,0,1,24,15h2c0-.33.05-.66.05-1A12,12,0,0,0,14,2Z" } }, { "elem": "path", "attrs": { "d": "M17 24L26.17 24 23.58 26.59 25 28 30 23 25 18 23.58 19.42 26.17 22 17 22 17 24zM14 20a6 6 0 116-6A6 6 0 0114 20zm0-10a4 4 0 104 4A4 4 0 0014 10z" } }], "name": "cd--create-exchange", "size": 24 }, "size": 24 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><circle cx=\"14\" cy=\"14\" r=\"2\"></circle><path d=\"M14,2a12,12,0,0,0,0,24V24A10,10,0,1,1,24,14,8.27,8.27,0,0,1,24,15h2c0-.33.05-.66.05-1A12,12,0,0,0,14,2Z\"></path><path d=\"M17 24L26.17 24 23.58 26.59 25 28 30 23 25 18 23.58 19.42 26.17 22 17 22 17 24zM14 20a6 6 0 116-6A6 6 0 0114 20zm0-10a4 4 0 104 4A4 4 0 0014 10z\"></path></svg>"
            },
            "20": {
                metadata: { "moduleName": "WatsonHealthCdCreateExchange20", "filepath": "watson-health/cd--create-exchange/20.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 20, "height": 20 }, "content": [{ "elem": "circle", "attrs": { "cx": "14", "cy": "14", "r": "2" } }, { "elem": "path", "attrs": { "d": "M14,2a12,12,0,0,0,0,24V24A10,10,0,1,1,24,14,8.27,8.27,0,0,1,24,15h2c0-.33.05-.66.05-1A12,12,0,0,0,14,2Z" } }, { "elem": "path", "attrs": { "d": "M17 24L26.17 24 23.58 26.59 25 28 30 23 25 18 23.58 19.42 26.17 22 17 22 17 24zM14 20a6 6 0 116-6A6 6 0 0114 20zm0-10a4 4 0 104 4A4 4 0 0014 10z" } }], "name": "cd--create-exchange", "size": 20 }, "size": 20 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><circle cx=\"14\" cy=\"14\" r=\"2\"></circle><path d=\"M14,2a12,12,0,0,0,0,24V24A10,10,0,1,1,24,14,8.27,8.27,0,0,1,24,15h2c0-.33.05-.66.05-1A12,12,0,0,0,14,2Z\"></path><path d=\"M17 24L26.17 24 23.58 26.59 25 28 30 23 25 18 23.58 19.42 26.17 22 17 22 17 24zM14 20a6 6 0 116-6A6 6 0 0114 20zm0-10a4 4 0 104 4A4 4 0 0014 10z\"></path></svg>"
            },
            "16": {
                metadata: { "moduleName": "WatsonHealthCdCreateExchange16", "filepath": "watson-health/cd--create-exchange/16.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 16, "height": 16 }, "content": [{ "elem": "circle", "attrs": { "cx": "14", "cy": "14", "r": "2" } }, { "elem": "path", "attrs": { "d": "M14,2a12,12,0,0,0,0,24V24A10,10,0,1,1,24,14,8.27,8.27,0,0,1,24,15h2c0-.33.05-.66.05-1A12,12,0,0,0,14,2Z" } }, { "elem": "path", "attrs": { "d": "M17 24L26.17 24 23.58 26.59 25 28 30 23 25 18 23.58 19.42 26.17 22 17 22 17 24zM14 20a6 6 0 116-6A6 6 0 0114 20zm0-10a4 4 0 104 4A4 4 0 0014 10z" } }], "name": "cd--create-exchange", "size": 16 }, "size": 16 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"16\" height=\"16\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><circle cx=\"14\" cy=\"14\" r=\"2\"></circle><path d=\"M14,2a12,12,0,0,0,0,24V24A10,10,0,1,1,24,14,8.27,8.27,0,0,1,24,15h2c0-.33.05-.66.05-1A12,12,0,0,0,14,2Z\"></path><path d=\"M17 24L26.17 24 23.58 26.59 25 28 30 23 25 18 23.58 19.42 26.17 22 17 22 17 24zM14 20a6 6 0 116-6A6 6 0 0114 20zm0-10a4 4 0 104 4A4 4 0 0014 10z\"></path></svg>"
            },
        };
    }
    WatsonHealthCdCreateExchangeDirective_1 = WatsonHealthCdCreateExchangeDirective;
    WatsonHealthCdCreateExchangeDirective.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var icon = this.icons[this.size];
        var domParser = new DOMParser();
        var rawSVG = icon.svg;
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: icon.metadata.descriptor.attrs.height,
            height: icon.metadata.descriptor.attrs.height,
            viewBox: icon.metadata.descriptor.attrs.viewBox,
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            WatsonHealthCdCreateExchangeDirective_1.titleIdCounter++;
            title.setAttribute("id", "watson-health-cd-create-exchange-" + WatsonHealthCdCreateExchangeDirective_1.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "watson-health-cd-create-exchange-" + WatsonHealthCdCreateExchangeDirective_1.titleIdCounter);
        }
    };
    var WatsonHealthCdCreateExchangeDirective_1;
    WatsonHealthCdCreateExchangeDirective.titleIdCounter = 0;
    WatsonHealthCdCreateExchangeDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthCdCreateExchangeDirective.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthCdCreateExchangeDirective.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], WatsonHealthCdCreateExchangeDirective.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthCdCreateExchangeDirective.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], WatsonHealthCdCreateExchangeDirective.prototype, "isFocusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthCdCreateExchangeDirective.prototype, "size", void 0);
    WatsonHealthCdCreateExchangeDirective = WatsonHealthCdCreateExchangeDirective_1 = __decorate([
        Directive({
            selector: "[ibmIconWatsonHealthCdCreateExchange]"
        }),
        __metadata("design:paramtypes", [ElementRef])
    ], WatsonHealthCdCreateExchangeDirective);
    return WatsonHealthCdCreateExchangeDirective;
}());
export { WatsonHealthCdCreateExchangeDirective };
var WatsonHealthCdCreateExchangeModule = /** @class */ (function () {
    function WatsonHealthCdCreateExchangeModule() {
    }
    WatsonHealthCdCreateExchangeModule = __decorate([
        NgModule({
            declarations: [
                WatsonHealthCdCreateExchangeComponent,
                WatsonHealthCdCreateExchangeDirective,
            ],
            exports: [
                WatsonHealthCdCreateExchangeComponent,
                WatsonHealthCdCreateExchangeDirective,
            ]
        })
    ], WatsonHealthCdCreateExchangeModule);
    return WatsonHealthCdCreateExchangeModule;
}());
export { WatsonHealthCdCreateExchangeModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaWNvbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3RzL3dhdHNvbi1oZWFsdGgvY2QtLWNyZWF0ZS1leGNoYW5nZS9pY29uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQSxPQUFPLEVBQ0wsUUFBUSxFQUNSLFNBQVMsRUFDVCxTQUFTLEVBQ1QsVUFBVSxFQUNWLEtBQUssRUFDTCxhQUFhLEVBQ2QsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBa0JyRDtJQUFBO1FBS1csY0FBUyxHQUFZLEtBQUssQ0FBQztJQUd0QyxDQUFDO0lBUFU7UUFBUixLQUFLLEVBQUU7OzRFQUFtQjtJQUNsQjtRQUFSLEtBQUssRUFBRTs7aUZBQXdCO0lBQ3ZCO1FBQVIsS0FBSyxFQUFFOzs2RUFBcUI7SUFDcEI7UUFBUixLQUFLLEVBQUU7O3dFQUFlO0lBQ2Q7UUFBUixLQUFLLEVBQUU7OzRFQUE0QjtJQUMzQjtRQUFSLEtBQUssRUFBRTs7NkVBQW9CO0lBQ25CO1FBQVIsS0FBSyxFQUFFOzt1RUFBYztJQVBYLHFDQUFxQztRQWZqRCxTQUFTLENBQUM7WUFDVixRQUFRLEVBQUUsMkNBQTJDO1lBQ3BELFFBQVEsRUFBRSw2U0FXVDtTQUNGLENBQUM7T0FDVyxxQ0FBcUMsQ0FRakQ7SUFBRCw0Q0FBQztDQUFBLEFBUkQsSUFRQztTQVJZLHFDQUFxQztBQWVsRDtJQWtDRSwrQ0FBc0IsVUFBc0I7UUFBdEIsZUFBVSxHQUFWLFVBQVUsQ0FBWTtRQTNCbkMsZ0JBQVcsR0FBWSxLQUFLLENBQUM7UUFHNUIsVUFBSyxHQUFHO1lBRWxCLElBQUksRUFBRTtnQkFDSixRQUFRLEVBQUUsRUFBQyxZQUFZLEVBQUMsZ0NBQWdDLEVBQUMsVUFBVSxFQUFDLHlDQUF5QyxFQUFDLFlBQVksRUFBQyxFQUFDLE1BQU0sRUFBQyxLQUFLLEVBQUMsT0FBTyxFQUFDLEVBQUMsT0FBTyxFQUFDLDRCQUE0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QUNyQyxxQ0FBcUM7YUFFcEM7U0FDRixDQUFDO09BQ1csa0NBQWtDLENBQUc7SUFBRCx5Q0FBQztDQUFBLEFBQWxELElBQWtEO1NBQXJDLGtDQUFrQyIsInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IHtcbiAgTmdNb2R1bGUsXG4gIENvbXBvbmVudCxcbiAgRGlyZWN0aXZlLFxuICBFbGVtZW50UmVmLFxuICBJbnB1dCxcbiAgQWZ0ZXJWaWV3SW5pdFxufSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHsgZ2V0QXR0cmlidXRlcyB9IGZyb20gXCJAY2FyYm9uL2ljb24taGVscGVyc1wiO1xuXG5cbkBDb21wb25lbnQoe1xuXHRzZWxlY3RvcjogXCJpYm0taWNvbi13YXRzb24taGVhbHRoLWNkLWNyZWF0ZS1leGNoYW5nZVwiLFxuICB0ZW1wbGF0ZTogYFxuICAgIDxzdmdcbiAgICAgIGlibUljb25XYXRzb25IZWFsdGhDZENyZWF0ZUV4Y2hhbmdlXG4gICAgICBbc2l6ZV09XCJzaXplXCJcbiAgICAgIFthcmlhTGFiZWxdPVwiYXJpYUxhYmVsXCJcbiAgICAgIFthcmlhTGFiZWxsZWRieV09XCJhcmlhTGFiZWxsZWRieVwiXG4gICAgICBbYXJpYUhpZGRlbl09XCJhcmlhSGlkZGVuXCJcbiAgICAgIFt0aXRsZV09XCJ0aXRsZVwiXG4gICAgICBbaXNGb2N1c2FibGVdPVwiZm9jdXNhYmxlXCJcbiAgICAgIFthdHRyLmNsYXNzXT1cImlubmVyQ2xhc3NcIj5cbiAgICA8L3N2Zz5cbiAgYFxufSlcbmV4cG9ydCBjbGFzcyBXYXRzb25IZWFsdGhDZENyZWF0ZUV4Y2hhbmdlQ29tcG9uZW50IHtcbiAgQElucHV0KCkgYXJpYUxhYmVsOiBzdHJpbmc7XG4gIEBJbnB1dCgpIGFyaWFMYWJlbGxlZGJ5OiBzdHJpbmc7XG4gIEBJbnB1dCgpIGFyaWFIaWRkZW46IGJvb2xlYW47XG4gIEBJbnB1dCgpIHRpdGxlOiBzdHJpbmc7XG4gIEBJbnB1dCgpIGZvY3VzYWJsZTogYm9vbGVhbiA9IGZhbHNlO1xuICBASW5wdXQoKSBpbm5lckNsYXNzOiBzdHJpbmc7XG4gIEBJbnB1dCgpIHNpemU6IHN0cmluZztcbn1cblxuXG5cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogXCJbaWJtSWNvbldhdHNvbkhlYWx0aENkQ3JlYXRlRXhjaGFuZ2VdXCJcbn0pXG5leHBvcnQgY2xhc3MgV2F0c29uSGVhbHRoQ2RDcmVhdGVFeGNoYW5nZURpcmVjdGl2ZSBpbXBsZW1lbnRzIEFmdGVyVmlld0luaXQge1xuICBzdGF0aWMgdGl0bGVJZENvdW50ZXIgPSAwO1xuXG4gIEBJbnB1dCgpIGFyaWFMYWJlbDogc3RyaW5nO1xuICBASW5wdXQoKSBhcmlhTGFiZWxsZWRieTogc3RyaW5nO1xuICBASW5wdXQoKSBhcmlhSGlkZGVuOiBib29sZWFuO1xuICBASW5wdXQoKSB0aXRsZTogc3RyaW5nO1xuICBASW5wdXQoKSBpc0ZvY3VzYWJsZTogYm9vbGVhbiA9IGZhbHNlO1xuICBASW5wdXQoKSBzaXplOiBzdHJpbmc7XG5cbiAgcHJvdGVjdGVkIGljb25zID0ge1xuICAgIFxuICBcIjMyXCI6IHtcbiAgICBtZXRhZGF0YToge1wibW9kdWxlTmFtZVwiOlwiV2F0c29uSGVhbHRoQ2RDcmVhdGVFeGNoYW5nZTMyXCIsXCJmaWxlcGF0aFwiOlwid2F0c29uLWhlYWx0aC9jZC0tY3JlYXRlLWV4Y2hhbmdlLzMyLmpzXCIsXCJkZXNjcmlwdG9yXCI6e1wiZWxlbVwiOlwic3ZnXCIsXCJhdHRyc1wiOntcInhtbG5zXCI6XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLFwidmlld0JveFwiOlwiMCAwIDMyIDMyXCIsXCJmaWxsXCI6XCJjdXJyZW50Q29sb3JcIixcIndpZHRoXCI6MzIsXCJoZWlnaHRcIjozMn0sXCJjb250ZW50XCI6W3tcImVsZW1cIjpcImNpcmNsZVwiLFwiYXR0cnNcIjp7XCJjeFwiOlwiMTRcIixcImN5XCI6XCIxNFwiLFwiclwiOlwiMlwifX0se1wiZWxlbVwiOlwicGF0aFwiLFwiYXR0cnNcIjp7XCJkXCI6XCJNMTQsMmExMiwxMiwwLDAsMCwwLDI0VjI0QTEwLDEwLDAsMSwxLDI0LDE0LDguMjcsOC4yNywwLDAsMSwyNCwxNWgyYzAtLjMzLjA1LS42Ni4wNS0xQTEyLDEyLDAsMCwwLDE0LDJaXCJ9fSx7XCJlbGVtXCI6XCJwYXRoXCIsXCJhdHRyc1wiOntcImRcIjpcIk0xNyAyNEwyNi4xNyAyNCAyMy41OCAyNi41OSAyNSAyOCAzMCAyMyAyNSAxOCAyMy41OCAxOS40MiAyNi4xNyAyMiAxNyAyMiAxNyAyNHpNMTQgMjBhNiA2IDAgMTE2LTZBNiA2IDAgMDExNCAyMHptMC0xMGE0IDQgMCAxMDQgNEE0IDQgMCAwMDE0IDEwelwifX1dLFwibmFtZVwiOlwiY2QtLWNyZWF0ZS1leGNoYW5nZVwiLFwic2l6ZVwiOjMyfSxcInNpemVcIjozMn0sXG4gICAgc3ZnOiBgPHN2ZyBmb2N1c2FibGU9XCJmYWxzZVwiIHByZXNlcnZlQXNwZWN0UmF0aW89XCJ4TWlkWU1pZCBtZWV0XCIgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIGZpbGw9XCJjdXJyZW50Q29sb3JcIiB3aWR0aD1cIjMyXCIgaGVpZ2h0PVwiMzJcIiB2aWV3Qm94PVwiMCAwIDMyIDMyXCIgYXJpYS1oaWRkZW49XCJ0cnVlXCI+PGNpcmNsZSBjeD1cIjE0XCIgY3k9XCIxNFwiIHI9XCIyXCI+PC9jaXJjbGU+PHBhdGggZD1cIk0xNCwyYTEyLDEyLDAsMCwwLDAsMjRWMjRBMTAsMTAsMCwxLDEsMjQsMTQsOC4yNyw4LjI3LDAsMCwxLDI0LDE1aDJjMC0uMzMuMDUtLjY2LjA1LTFBMTIsMTIsMCwwLDAsMTQsMlpcIj48L3BhdGg+PHBhdGggZD1cIk0xNyAyNEwyNi4xNyAyNCAyMy41OCAyNi41OSAyNSAyOCAzMCAyMyAyNSAxOCAyMy41OCAxOS40MiAyNi4xNyAyMiAxNyAyMiAxNyAyNHpNMTQgMjBhNiA2IDAgMTE2LTZBNiA2IDAgMDExNCAyMHptMC0xMGE0IDQgMCAxMDQgNEE0IDQgMCAwMDE0IDEwelwiPjwvcGF0aD48L3N2Zz5gXG4gIH0sXG5cbiAgXCIyNFwiOiB7XG4gICAgbWV0YWRhdGE6IHtcIm1vZHVsZU5hbWVcIjpcIldhdHNvbkhlYWx0aENkQ3JlYXRlRXhjaGFuZ2UyNFwiLFwiZmlsZXBhdGhcIjpcIndhdHNvbi1oZWFsdGgvY2QtLWNyZWF0ZS1leGNoYW5nZS8yNC5qc1wiLFwiZGVzY3JpcHRvclwiOntcImVsZW1cIjpcInN2Z1wiLFwiYXR0cnNcIjp7XCJ4bWxuc1wiOlwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIixcInZpZXdCb3hcIjpcIjAgMCAzMiAzMlwiLFwiZmlsbFwiOlwiY3VycmVudENvbG9yXCIsXCJ3aWR0aFwiOjI0LFwiaGVpZ2h0XCI6MjR9LFwiY29udGVudFwiOlt7XCJlbGVtXCI6XCJjaXJjbGVcIixcImF0dHJzXCI6e1wiY3hcIjpcIjE0XCIsXCJjeVwiOlwiMTRcIixcInJcIjpcIjJcIn19LHtcImVsZW1cIjpcInBhdGhcIixcImF0dHJzXCI6e1wiZFwiOlwiTTE0LDJhMTIsMTIsMCwwLDAsMCwyNFYyNEExMCwxMCwwLDEsMSwyNCwxNCw4LjI3LDguMjcsMCwwLDEsMjQsMTVoMmMwLS4zMy4wNS0uNjYuMDUtMUExMiwxMiwwLDAsMCwxNCwyWlwifX0se1wiZWxlbVwiOlwicGF0aFwiLFwiYXR0cnNcIjp7XCJkXCI6XCJNMTcgMjRMMjYuMTcgMjQgMjMuNTggMjYuNTkgMjUgMjggMzAgMjMgMjUgMTggMjMuNTggMTkuNDIgMjYuMTcgMjIgMTcgMjIgMTcgMjR6TTE0IDIwYTYgNiAwIDExNi02QTYgNiAwIDAxMTQgMjB6bTAtMTBhNCA0IDAgMTA0IDRBNCA0IDAgMDAxNCAxMHpcIn19XSxcIm5hbWVcIjpcImNkLS1jcmVhdGUtZXhjaGFuZ2VcIixcInNpemVcIjoyNH0sXCJzaXplXCI6MjR9LFxuICAgIHN2ZzogYDxzdmcgZm9jdXNhYmxlPVwiZmFsc2VcIiBwcmVzZXJ2ZUFzcGVjdFJhdGlvPVwieE1pZFlNaWQgbWVldFwiIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiBmaWxsPVwiY3VycmVudENvbG9yXCIgd2lkdGg9XCIyNFwiIGhlaWdodD1cIjI0XCIgdmlld0JveD1cIjAgMCAzMiAzMlwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiPjxjaXJjbGUgY3g9XCIxNFwiIGN5PVwiMTRcIiByPVwiMlwiPjwvY2lyY2xlPjxwYXRoIGQ9XCJNMTQsMmExMiwxMiwwLDAsMCwwLDI0VjI0QTEwLDEwLDAsMSwxLDI0LDE0LDguMjcsOC4yNywwLDAsMSwyNCwxNWgyYzAtLjMzLjA1LS42Ni4wNS0xQTEyLDEyLDAsMCwwLDE0LDJaXCI+PC9wYXRoPjxwYXRoIGQ9XCJNMTcgMjRMMjYuMTcgMjQgMjMuNTggMjYuNTkgMjUgMjggMzAgMjMgMjUgMTggMjMuNTggMTkuNDIgMjYuMTcgMjIgMTcgMjIgMTcgMjR6TTE0IDIwYTYgNiAwIDExNi02QTYgNiAwIDAxMTQgMjB6bTAtMTBhNCA0IDAgMTA0IDRBNCA0IDAgMDAxNCAxMHpcIj48L3BhdGg+PC9zdmc+YFxuICB9LFxuXG4gIFwiMjBcIjoge1xuICAgIG1ldGFkYXRhOiB7XCJtb2R1bGVOYW1lXCI6XCJXYXRzb25IZWFsdGhDZENyZWF0ZUV4Y2hhbmdlMjBcIixcImZpbGVwYXRoXCI6XCJ3YXRzb24taGVhbHRoL2NkLS1jcmVhdGUtZXhjaGFuZ2UvMjAuanNcIixcImRlc2NyaXB0b3JcIjp7XCJlbGVtXCI6XCJzdmdcIixcImF0dHJzXCI6e1wieG1sbnNcIjpcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIsXCJ2aWV3Qm94XCI6XCIwIDAgMzIgMzJcIixcImZpbGxcIjpcImN1cnJlbnRDb2xvclwiLFwid2lkdGhcIjoyMCxcImhlaWdodFwiOjIwfSxcImNvbnRlbnRcIjpbe1wiZWxlbVwiOlwiY2lyY2xlXCIsXCJhdHRyc1wiOntcImN4XCI6XCIxNFwiLFwiY3lcIjpcIjE0XCIsXCJyXCI6XCIyXCJ9fSx7XCJlbGVtXCI6XCJwYXRoXCIsXCJhdHRyc1wiOntcImRcIjpcIk0xNCwyYTEyLDEyLDAsMCwwLDAsMjRWMjRBMTAsMTAsMCwxLDEsMjQsMTQsOC4yNyw4LjI3LDAsMCwxLDI0LDE1aDJjMC0uMzMuMDUtLjY2LjA1LTFBMTIsMTIsMCwwLDAsMTQsMlpcIn19LHtcImVsZW1cIjpcInBhdGhcIixcImF0dHJzXCI6e1wiZFwiOlwiTTE3IDI0TDI2LjE3IDI0IDIzLjU4IDI2LjU5IDI1IDI4IDMwIDIzIDI1IDE4IDIzLjU4IDE5LjQyIDI2LjE3IDIyIDE3IDIyIDE3IDI0ek0xNCAyMGE2IDYgMCAxMTYtNkE2IDYgMCAwMTE0IDIwem0wLTEwYTQgNCAwIDEwNCA0QTQgNCAwIDAwMTQgMTB6XCJ9fV0sXCJuYW1lXCI6XCJjZC0tY3JlYXRlLWV4Y2hhbmdlXCIsXCJzaXplXCI6MjB9LFwic2l6ZVwiOjIwfSxcbiAgICBzdmc6IGA8c3ZnIGZvY3VzYWJsZT1cImZhbHNlXCIgcHJlc2VydmVBc3BlY3RSYXRpbz1cInhNaWRZTWlkIG1lZXRcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgZmlsbD1cImN1cnJlbnRDb2xvclwiIHdpZHRoPVwiMjBcIiBoZWlnaHQ9XCIyMFwiIHZpZXdCb3g9XCIwIDAgMzIgMzJcIiBhcmlhLWhpZGRlbj1cInRydWVcIj48Y2lyY2xlIGN4PVwiMTRcIiBjeT1cIjE0XCIgcj1cIjJcIj48L2NpcmNsZT48cGF0aCBkPVwiTTE0LDJhMTIsMTIsMCwwLDAsMCwyNFYyNEExMCwxMCwwLDEsMSwyNCwxNCw4LjI3LDguMjcsMCwwLDEsMjQsMTVoMmMwLS4zMy4wNS0uNjYuMDUtMUExMiwxMiwwLDAsMCwxNCwyWlwiPjwvcGF0aD48cGF0aCBkPVwiTTE3IDI0TDI2LjE3IDI0IDIzLjU4IDI2LjU5IDI1IDI4IDMwIDIzIDI1IDE4IDIzLjU4IDE5LjQyIDI2LjE3IDIyIDE3IDIyIDE3IDI0ek0xNCAyMGE2IDYgMCAxMTYtNkE2IDYgMCAwMTE0IDIwem0wLTEwYTQgNCAwIDEwNCA0QTQgNCAwIDAwMTQgMTB6XCI+PC9wYXRoPjwvc3ZnPmBcbiAgfSxcblxuICBcIjE2XCI6IHtcbiAgICBtZXRhZGF0YToge1wibW9kdWxlTmFtZVwiOlwiV2F0c29uSGVhbHRoQ2RDcmVhdGVFeGNoYW5nZTE2XCIsXCJmaWxlcGF0aFwiOlwid2F0c29uLWhlYWx0aC9jZC0tY3JlYXRlLWV4Y2hhbmdlLzE2LmpzXCIsXCJkZXNjcmlwdG9yXCI6e1wiZWxlbVwiOlwic3ZnXCIsXCJhdHRyc1wiOntcInhtbG5zXCI6XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLFwidmlld0JveFwiOlwiMCAwIDMyIDMyXCIsXCJmaWxsXCI6XCJjdXJyZW50Q29sb3JcIixcIndpZHRoXCI6MTYsXCJoZWlnaHRcIjoxNn0sXCJjb250ZW50XCI6W3tcImVsZW1cIjpcImNpcmNsZVwiLFwiYXR0cnNcIjp7XCJjeFwiOlwiMTRcIixcImN5XCI6XCIxNFwiLFwiclwiOlwiMlwifX0se1wiZWxlbVwiOlwicGF0aFwiLFwiYXR0cnNcIjp7XCJkXCI6XCJNMTQsMmExMiwxMiwwLDAsMCwwLDI0VjI0QTEwLDEwLDAsMSwxLDI0LDE0LDguMjcsOC4yNywwLDAsMSwyNCwxNWgyYzAtLjMzLjA1LS42Ni4wNS0xQTEyLDEyLDAsMCwwLDE0LDJaXCJ9fSx7XCJlbGVtXCI6XCJwYXRoXCIsXCJhdHRyc1wiOntcImRcIjpcIk0xNyAyNEwyNi4xNyAyNCAyMy41OCAyNi41OSAyNSAyOCAzMCAyMyAyNSAxOCAyMy41OCAxOS40MiAyNi4xNyAyMiAxNyAyMiAxNyAyNHpNMTQgMjBhNiA2IDAgMTE2LTZBNiA2IDAgMDExNCAyMHptMC0xMGE0IDQgMCAxMDQgNEE0IDQgMCAwMDE0IDEwelwifX1dLFwibmFtZVwiOlwiY2QtLWNyZWF0ZS1leGNoYW5nZVwiLFwic2l6ZVwiOjE2fSxcInNpemVcIjoxNn0sXG4gICAgc3ZnOiBgPHN2ZyBmb2N1c2FibGU9XCJmYWxzZVwiIHByZXNlcnZlQXNwZWN0UmF0aW89XCJ4TWlkWU1pZCBtZWV0XCIgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIGZpbGw9XCJjdXJyZW50Q29sb3JcIiB3aWR0aD1cIjE2XCIgaGVpZ2h0PVwiMTZcIiB2aWV3Qm94PVwiMCAwIDMyIDMyXCIgYXJpYS1oaWRkZW49XCJ0cnVlXCI+PGNpcmNsZSBjeD1cIjE0XCIgY3k9XCIxNFwiIHI9XCIyXCI+PC9jaXJjbGU+PHBhdGggZD1cIk0xNCwyYTEyLDEyLDAsMCwwLDAsMjRWMjRBMTAsMTAsMCwxLDEsMjQsMTQsOC4yNyw4LjI3LDAsMCwxLDI0LDE1aDJjMC0uMzMuMDUtLjY2LjA1LTFBMTIsMTIsMCwwLDAsMTQsMlpcIj48L3BhdGg+PHBhdGggZD1cIk0xNyAyNEwyNi4xNyAyNCAyMy41OCAyNi41OSAyNSAyOCAzMCAyMyAyNSAxOCAyMy41OCAxOS40MiAyNi4xNyAyMiAxNyAyMiAxNyAyNHpNMTQgMjBhNiA2IDAgMTE2LTZBNiA2IDAgMDExNCAyMHptMC0xMGE0IDQgMCAxMDQgNEE0IDQgMCAwMDE0IDEwelwiPjwvcGF0aD48L3N2Zz5gXG4gIH0sXG5cbiAgfTtcblxuICBjb25zdHJ1Y3Rvcihwcm90ZWN0ZWQgZWxlbWVudFJlZjogRWxlbWVudFJlZikge31cblxuXHRuZ0FmdGVyVmlld0luaXQoKSB7XG4gICAgY29uc3Qgc3ZnID0gdGhpcy5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQ7XG4gICAgc3ZnLnNldEF0dHJpYnV0ZShcInhtbG5zXCIsIFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIik7XG5cbiAgICBjb25zdCBpY29uID0gdGhpcy5pY29uc1t0aGlzLnNpemVdXG5cbiAgICBjb25zdCBkb21QYXJzZXIgPSBuZXcgRE9NUGFyc2VyKCk7XG4gICAgY29uc3QgcmF3U1ZHID0gaWNvbi5zdmc7XG4gICAgY29uc3Qgc3ZnRWxlbWVudCA9IGRvbVBhcnNlci5wYXJzZUZyb21TdHJpbmcocmF3U1ZHLCBcImltYWdlL3N2Zyt4bWxcIikuZG9jdW1lbnRFbGVtZW50O1xuXG4gICAgbGV0IG5vZGUgPSBzdmdFbGVtZW50LmZpcnN0Q2hpbGQ7XG4gICAgd2hpbGUgKG5vZGUpIHtcbiAgICAgIC8vIGltcG9ydE5vZGUgbWFrZXMgYSBjbG9uZSBvZiB0aGUgbm9kZVxuICAgICAgLy8gdGhpcyBlbnN1cmVzIHdlIGtlZXAgbG9vcGluZyBvdmVyIHRoZSBub2RlcyBpbiB0aGUgcGFyc2VkIGRvY3VtZW50XG4gICAgICBzdmcuYXBwZW5kQ2hpbGQoc3ZnLm93bmVyRG9jdW1lbnQuaW1wb3J0Tm9kZShub2RlLCB0cnVlKSk7XG4gICAgICBub2RlID0gbm9kZS5uZXh0U2libGluZztcbiAgICB9XG5cbiAgICBjb25zdCBhdHRyaWJ1dGVzID0gZ2V0QXR0cmlidXRlcyh7XG4gICAgICB3aWR0aDogaWNvbi5tZXRhZGF0YS5kZXNjcmlwdG9yLmF0dHJzLmhlaWdodCxcbiAgICAgIGhlaWdodDogaWNvbi5tZXRhZGF0YS5kZXNjcmlwdG9yLmF0dHJzLmhlaWdodCxcbiAgICAgIHZpZXdCb3g6IGljb24ubWV0YWRhdGEuZGVzY3JpcHRvci5hdHRycy52aWV3Qm94LFxuICAgICAgdGl0bGU6IHRoaXMudGl0bGUsXG4gICAgICBcImFyaWEtbGFiZWxcIjogdGhpcy5hcmlhTGFiZWwsXG4gICAgICBcImFyaWEtbGFiZWxsZWRieVwiOiB0aGlzLmFyaWFMYWJlbGxlZGJ5LFxuICAgICAgXCJhcmlhLWhpZGRlblwiOiB0aGlzLmFyaWFIaWRkZW4sXG4gICAgICBmb2N1c2FibGU6IHRoaXMuaXNGb2N1c2FibGUudG9TdHJpbmcoKVxuICAgIH0pO1xuXG4gICAgY29uc3QgYXR0cktleXMgPSBPYmplY3Qua2V5cyhhdHRyaWJ1dGVzKTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGF0dHJLZXlzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBjb25zdCBrZXkgPSBhdHRyS2V5c1tpXTtcbiAgICAgIGNvbnN0IHZhbHVlID0gYXR0cmlidXRlc1trZXldO1xuICAgICAgaWYgKGtleSA9PT0gXCJ0aXRsZVwiKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuICAgICAgaWYgKHZhbHVlKSB7XG4gICAgICAgIHN2Zy5zZXRBdHRyaWJ1dGUoa2V5LCB2YWx1ZSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKGF0dHJpYnV0ZXMudGl0bGUpIHtcbiAgICAgIGNvbnN0IHRpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInRpdGxlXCIpO1xuICAgICAgdGl0bGUudGV4dENvbnRlbnQgPSBhdHRyaWJ1dGVzLnRpdGxlO1xuICAgICAgV2F0c29uSGVhbHRoQ2RDcmVhdGVFeGNoYW5nZURpcmVjdGl2ZS50aXRsZUlkQ291bnRlcisrO1xuICAgICAgdGl0bGUuc2V0QXR0cmlidXRlKFwiaWRcIiwgYHdhdHNvbi1oZWFsdGgtY2QtY3JlYXRlLWV4Y2hhbmdlLSR7V2F0c29uSGVhbHRoQ2RDcmVhdGVFeGNoYW5nZURpcmVjdGl2ZS50aXRsZUlkQ291bnRlcn1gKTtcbiAgICAgIHN2Zy5hcHBlbmRDaGlsZCh0aXRsZSk7XG4gICAgICBzdmcuc2V0QXR0cmlidXRlKFwiYXJpYS1sYWJlbGxlZGJ5XCIsIGB3YXRzb24taGVhbHRoLWNkLWNyZWF0ZS1leGNoYW5nZS0ke1dhdHNvbkhlYWx0aENkQ3JlYXRlRXhjaGFuZ2VEaXJlY3RpdmUudGl0bGVJZENvdW50ZXJ9YCk7XG4gICAgfVxuXHR9XG59XG5cblxuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBbXG4gICAgXG4gIFdhdHNvbkhlYWx0aENkQ3JlYXRlRXhjaGFuZ2VDb21wb25lbnQsXG4gIFdhdHNvbkhlYWx0aENkQ3JlYXRlRXhjaGFuZ2VEaXJlY3RpdmUsXG5cbiAgXSxcbiAgZXhwb3J0czogW1xuICAgIFxuICBXYXRzb25IZWFsdGhDZENyZWF0ZUV4Y2hhbmdlQ29tcG9uZW50LFxuICBXYXRzb25IZWFsdGhDZENyZWF0ZUV4Y2hhbmdlRGlyZWN0aXZlLFxuXG4gIF1cbn0pXG5leHBvcnQgY2xhc3MgV2F0c29uSGVhbHRoQ2RDcmVhdGVFeGNoYW5nZU1vZHVsZSB7fVxuIl19