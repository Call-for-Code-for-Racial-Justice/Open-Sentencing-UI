import { __decorate, __metadata } from "tslib";
import { NgModule, Component, Directive, ElementRef, Input, AfterViewInit } from "@angular/core";
import { getAttributes } from "@carbon/icon-helpers";
var WatsonHealthStressBreathEditorComponent = /** @class */ (function () {
    function WatsonHealthStressBreathEditorComponent() {
        this.focusable = false;
    }
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthStressBreathEditorComponent.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthStressBreathEditorComponent.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], WatsonHealthStressBreathEditorComponent.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthStressBreathEditorComponent.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], WatsonHealthStressBreathEditorComponent.prototype, "focusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthStressBreathEditorComponent.prototype, "innerClass", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthStressBreathEditorComponent.prototype, "size", void 0);
    WatsonHealthStressBreathEditorComponent = __decorate([
        Component({
            selector: "ibm-icon-watson-health-stress-breath-editor",
            template: "\n    <svg\n      ibmIconWatsonHealthStressBreathEditor\n      [size]=\"size\"\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
        })
    ], WatsonHealthStressBreathEditorComponent);
    return WatsonHealthStressBreathEditorComponent;
}());
export { WatsonHealthStressBreathEditorComponent };
var WatsonHealthStressBreathEditorDirective = /** @class */ (function () {
    function WatsonHealthStressBreathEditorDirective(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
        this.icons = {
            "32": {
                metadata: { "moduleName": "WatsonHealthStressBreathEditor32", "filepath": "watson-health/stress-breath-editor/32.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 32, "height": 32 }, "content": [{ "elem": "path", "attrs": { "d": "M20 4a5 5 0 11-5 5 5 5 0 015-5m0-2a7 7 0 107 7A7 7 0 0020 2zM30 30H28V25a5 5 0 00-5-5H17a5 5 0 00-5 5v5H10V25a7 7 0 017-7h6a7 7 0 017 7zM11 8H5A3 3 0 012 5V3H4V5A1 1 0 005 6h6zM4 15H2V13a3 3 0 013-3h6v2H5a1 1 0 00-1 1z" } }], "name": "stress-breath-editor", "size": 32 }, "size": 32 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M20 4a5 5 0 11-5 5 5 5 0 015-5m0-2a7 7 0 107 7A7 7 0 0020 2zM30 30H28V25a5 5 0 00-5-5H17a5 5 0 00-5 5v5H10V25a7 7 0 017-7h6a7 7 0 017 7zM11 8H5A3 3 0 012 5V3H4V5A1 1 0 005 6h6zM4 15H2V13a3 3 0 013-3h6v2H5a1 1 0 00-1 1z\"></path></svg>"
            },
            "24": {
                metadata: { "moduleName": "WatsonHealthStressBreathEditor24", "filepath": "watson-health/stress-breath-editor/24.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 24, "height": 24 }, "content": [{ "elem": "path", "attrs": { "d": "M20 4a5 5 0 11-5 5 5 5 0 015-5m0-2a7 7 0 107 7A7 7 0 0020 2zM30 30H28V25a5 5 0 00-5-5H17a5 5 0 00-5 5v5H10V25a7 7 0 017-7h6a7 7 0 017 7zM11 8H5A3 3 0 012 5V3H4V5A1 1 0 005 6h6zM4 15H2V13a3 3 0 013-3h6v2H5a1 1 0 00-1 1z" } }], "name": "stress-breath-editor", "size": 24 }, "size": 24 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M20 4a5 5 0 11-5 5 5 5 0 015-5m0-2a7 7 0 107 7A7 7 0 0020 2zM30 30H28V25a5 5 0 00-5-5H17a5 5 0 00-5 5v5H10V25a7 7 0 017-7h6a7 7 0 017 7zM11 8H5A3 3 0 012 5V3H4V5A1 1 0 005 6h6zM4 15H2V13a3 3 0 013-3h6v2H5a1 1 0 00-1 1z\"></path></svg>"
            },
            "20": {
                metadata: { "moduleName": "WatsonHealthStressBreathEditor20", "filepath": "watson-health/stress-breath-editor/20.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 20, "height": 20 }, "content": [{ "elem": "path", "attrs": { "d": "M20 4a5 5 0 11-5 5 5 5 0 015-5m0-2a7 7 0 107 7A7 7 0 0020 2zM30 30H28V25a5 5 0 00-5-5H17a5 5 0 00-5 5v5H10V25a7 7 0 017-7h6a7 7 0 017 7zM11 8H5A3 3 0 012 5V3H4V5A1 1 0 005 6h6zM4 15H2V13a3 3 0 013-3h6v2H5a1 1 0 00-1 1z" } }], "name": "stress-breath-editor", "size": 20 }, "size": 20 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M20 4a5 5 0 11-5 5 5 5 0 015-5m0-2a7 7 0 107 7A7 7 0 0020 2zM30 30H28V25a5 5 0 00-5-5H17a5 5 0 00-5 5v5H10V25a7 7 0 017-7h6a7 7 0 017 7zM11 8H5A3 3 0 012 5V3H4V5A1 1 0 005 6h6zM4 15H2V13a3 3 0 013-3h6v2H5a1 1 0 00-1 1z\"></path></svg>"
            },
            "16": {
                metadata: { "moduleName": "WatsonHealthStressBreathEditor16", "filepath": "watson-health/stress-breath-editor/16.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 16, "height": 16 }, "content": [{ "elem": "path", "attrs": { "d": "M20 4a5 5 0 11-5 5 5 5 0 015-5m0-2a7 7 0 107 7A7 7 0 0020 2zM30 30H28V25a5 5 0 00-5-5H17a5 5 0 00-5 5v5H10V25a7 7 0 017-7h6a7 7 0 017 7zM11 8H5A3 3 0 012 5V3H4V5A1 1 0 005 6h6zM4 15H2V13a3 3 0 013-3h6v2H5a1 1 0 00-1 1z" } }], "name": "stress-breath-editor", "size": 16 }, "size": 16 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"16\" height=\"16\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M20 4a5 5 0 11-5 5 5 5 0 015-5m0-2a7 7 0 107 7A7 7 0 0020 2zM30 30H28V25a5 5 0 00-5-5H17a5 5 0 00-5 5v5H10V25a7 7 0 017-7h6a7 7 0 017 7zM11 8H5A3 3 0 012 5V3H4V5A1 1 0 005 6h6zM4 15H2V13a3 3 0 013-3h6v2H5a1 1 0 00-1 1z\"></path></svg>"
            },
        };
    }
    WatsonHealthStressBreathEditorDirective_1 = WatsonHealthStressBreathEditorDirective;
    WatsonHealthStressBreathEditorDirective.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var icon = this.icons[this.size];
        var domParser = new DOMParser();
        var rawSVG = icon.svg;
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: icon.metadata.descriptor.attrs.height,
            height: icon.metadata.descriptor.attrs.height,
            viewBox: icon.metadata.descriptor.attrs.viewBox,
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            WatsonHealthStressBreathEditorDirective_1.titleIdCounter++;
            title.setAttribute("id", "watson-health-stress-breath-editor-" + WatsonHealthStressBreathEditorDirective_1.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "watson-health-stress-breath-editor-" + WatsonHealthStressBreathEditorDirective_1.titleIdCounter);
        }
    };
    var WatsonHealthStressBreathEditorDirective_1;
    WatsonHealthStressBreathEditorDirective.titleIdCounter = 0;
    WatsonHealthStressBreathEditorDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthStressBreathEditorDirective.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthStressBreathEditorDirective.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], WatsonHealthStressBreathEditorDirective.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthStressBreathEditorDirective.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], WatsonHealthStressBreathEditorDirective.prototype, "isFocusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthStressBreathEditorDirective.prototype, "size", void 0);
    WatsonHealthStressBreathEditorDirective = WatsonHealthStressBreathEditorDirective_1 = __decorate([
        Directive({
            selector: "[ibmIconWatsonHealthStressBreathEditor]"
        }),
        __metadata("design:paramtypes", [ElementRef])
    ], WatsonHealthStressBreathEditorDirective);
    return WatsonHealthStressBreathEditorDirective;
}());
export { WatsonHealthStressBreathEditorDirective };
var WatsonHealthStressBreathEditorModule = /** @class */ (function () {
    function WatsonHealthStressBreathEditorModule() {
    }
    WatsonHealthStressBreathEditorModule = __decorate([
        NgModule({
            declarations: [
                WatsonHealthStressBreathEditorComponent,
                WatsonHealthStressBreathEditorDirective,
            ],
            exports: [
                WatsonHealthStressBreathEditorComponent,
                WatsonHealthStressBreathEditorDirective,
            ]
        })
    ], WatsonHealthStressBreathEditorModule);
    return WatsonHealthStressBreathEditorModule;
}());
export { WatsonHealthStressBreathEditorModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaWNvbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3RzL3dhdHNvbi1oZWFsdGgvc3RyZXNzLWJyZWF0aC1lZGl0b3IvaWNvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0EsT0FBTyxFQUNMLFFBQVEsRUFDUixTQUFTLEVBQ1QsU0FBUyxFQUNULFVBQVUsRUFDVixLQUFLLEVBQ0wsYUFBYSxFQUNkLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQWtCckQ7SUFBQTtRQUtXLGNBQVMsR0FBWSxLQUFLLENBQUM7SUFHdEMsQ0FBQztJQVBVO1FBQVIsS0FBSyxFQUFFOzs4RUFBbUI7SUFDbEI7UUFBUixLQUFLLEVBQUU7O21GQUF3QjtJQUN2QjtRQUFSLEtBQUssRUFBRTs7K0VBQXFCO0lBQ3BCO1FBQVIsS0FBSyxFQUFFOzswRUFBZTtJQUNkO1FBQVIsS0FBSyxFQUFFOzs4RUFBNEI7SUFDM0I7UUFBUixLQUFLLEVBQUU7OytFQUFvQjtJQUNuQjtRQUFSLEtBQUssRUFBRTs7eUVBQWM7SUFQWCx1Q0FBdUM7UUFmbkQsU0FBUyxDQUFDO1lBQ1YsUUFBUSxFQUFFLDZDQUE2QztZQUN0RCxRQUFRLEVBQUUsK1NBV1Q7U0FDRixDQUFDO09BQ1csdUNBQXVDLENBUW5EO0lBQUQsOENBQUM7Q0FBQSxBQVJELElBUUM7U0FSWSx1Q0FBdUM7QUFlcEQ7SUFrQ0UsaURBQXNCLFVBQXNCO1FBQXRCLGVBQVUsR0FBVixVQUFVLENBQVk7UUEzQm5DLGdCQUFXLEdBQVksS0FBSyxDQUFDO1FBRzVCLFVBQUssR0FBRztZQUVsQixJQUFJLEVBQUU7Z0JBQ0osUUFBUSxFQUFFLEVBQUMsWUFBWSxFQUFDLGtDQUFrQyxFQUFDLFVBQVUsRUFBQywwQ0FBMEMsRUFBQyxZQUFZLEVBQUMsRUFBQyxNQUFNLEVBQUMsS0FBSyxFQUFDLE9BQU8sRUFBQyxFQUFDLE9BQU8sRUFBQyw0QkFB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Q0FBQztDQUFBLEFBdEZELElBc0ZDO1NBdEZZLHVDQUF1QztBQXVHcEQ7SUFBQTtJQUFtRCxDQUFDO0lBQXZDLG9DQUFvQztRQWRoRCxRQUFRLENBQUM7WUFDUixZQUFZLEVBQUU7Z0JBRWQsdUNBQXVDO2dCQUN2Qyx1Q0FBdUM7YUFFdEM7WUFDRCxPQUFPLEVBQUU7Z0JBRVQsdUNBQXVDO2dCQUN2Qyx1Q0FBdUM7YUFFdEM7U0FDRixDQUFDO09BQ1csb0NBQW9DLENBQUc7SUFBRCwyQ0FBQztDQUFBLEFBQXBELElBQW9EO1NBQXZDLG9DQUFvQyIsInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IHtcbiAgTmdNb2R1bGUsXG4gIENvbXBvbmVudCxcbiAgRGlyZWN0aXZlLFxuICBFbGVtZW50UmVmLFxuICBJbnB1dCxcbiAgQWZ0ZXJWaWV3SW5pdFxufSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHsgZ2V0QXR0cmlidXRlcyB9IGZyb20gXCJAY2FyYm9uL2ljb24taGVscGVyc1wiO1xuXG5cbkBDb21wb25lbnQoe1xuXHRzZWxlY3RvcjogXCJpYm0taWNvbi13YXRzb24taGVhbHRoLXN0cmVzcy1icmVhdGgtZWRpdG9yXCIsXG4gIHRlbXBsYXRlOiBgXG4gICAgPHN2Z1xuICAgICAgaWJtSWNvbldhdHNvbkhlYWx0aFN0cmVzc0JyZWF0aEVkaXRvclxuICAgICAgW3NpemVdPVwic2l6ZVwiXG4gICAgICBbYXJpYUxhYmVsXT1cImFyaWFMYWJlbFwiXG4gICAgICBbYXJpYUxhYmVsbGVkYnldPVwiYXJpYUxhYmVsbGVkYnlcIlxuICAgICAgW2FyaWFIaWRkZW5dPVwiYXJpYUhpZGRlblwiXG4gICAgICBbdGl0bGVdPVwidGl0bGVcIlxuICAgICAgW2lzRm9jdXNhYmxlXT1cImZvY3VzYWJsZVwiXG4gICAgICBbYXR0ci5jbGFzc109XCJpbm5lckNsYXNzXCI+XG4gICAgPC9zdmc+XG4gIGBcbn0pXG5leHBvcnQgY2xhc3MgV2F0c29uSGVhbHRoU3RyZXNzQnJlYXRoRWRpdG9yQ29tcG9uZW50IHtcbiAgQElucHV0KCkgYXJpYUxhYmVsOiBzdHJpbmc7XG4gIEBJbnB1dCgpIGFyaWFMYWJlbGxlZGJ5OiBzdHJpbmc7XG4gIEBJbnB1dCgpIGFyaWFIaWRkZW46IGJvb2xlYW47XG4gIEBJbnB1dCgpIHRpdGxlOiBzdHJpbmc7XG4gIEBJbnB1dCgpIGZvY3VzYWJsZTogYm9vbGVhbiA9IGZhbHNlO1xuICBASW5wdXQoKSBpbm5lckNsYXNzOiBzdHJpbmc7XG4gIEBJbnB1dCgpIHNpemU6IHN0cmluZztcbn1cblxuXG5cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogXCJbaWJtSWNvbldhdHNvbkhlYWx0aFN0cmVzc0JyZWF0aEVkaXRvcl1cIlxufSlcbmV4cG9ydCBjbGFzcyBXYXRzb25IZWFsdGhTdHJlc3NCcmVhdGhFZGl0b3JEaXJlY3RpdmUgaW1wbGVtZW50cyBBZnRlclZpZXdJbml0IHtcbiAgc3RhdGljIHRpdGxlSWRDb3VudGVyID0gMDtcblxuICBASW5wdXQoKSBhcmlhTGFiZWw6IHN0cmluZztcbiAgQElucHV0KCkgYXJpYUxhYmVsbGVkYnk6IHN0cmluZztcbiAgQElucHV0KCkgYXJpYUhpZGRlbjogYm9vbGVhbjtcbiAgQElucHV0KCkgdGl0bGU6IHN0cmluZztcbiAgQElucHV0KCkgaXNGb2N1c2FibGU6IGJvb2xlYW4gPSBmYWxzZTtcbiAgQElucHV0KCkgc2l6ZTogc3RyaW5nO1xuXG4gIHByb3RlY3RlZCBpY29ucyA9IHtcbiAgICBcbiAgXCIzMlwiOiB7XG4gICAgbWV0YWRhdGE6IHtcIm1vZHVsZU5hbWVcIjpcIldhdHNvbkhlYWx0aFN0cmVzc0JyZWF0aEVkaXRvcjMyXCIsXCJmaWxlcGF0aFwiOlwid2F0c29uLWhlYWx0aC9zdHJlc3MtYnJlYXRoLWVkaXRvci8zMi5qc1wiLFwiZGVzY3JpcHRvclwiOntcImVsZW1cIjpcInN2Z1wiLFwiYXR0cnNcIjp7XCJ4bWxuc1wiOlwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIixcInZpZXdCb3hcIjpcIjAgMCAzMiAzMlwiLFwiZmlsbFwiOlwiY3VycmVudENvbG9yXCIsXCJ3aWR0aFwiOjMyLFwiaGVpZ2h0XCI6MzJ9LFwiY29udGVudFwiOlt7XCJlbGVtXCI6XCJwYXRoXCIsXCJhdHRyc1wiOntcImRcIjpcIk0yMCA0YTUgNSAwIDExLTUgNSA1IDUgMCAwMTUtNW0wLTJhNyA3IDAgMTA3IDdBNyA3IDAgMDAyMCAyek0zMCAzMEgyOFYyNWE1IDUgMCAwMC01LTVIMTdhNSA1IDAgMDAtNSA1djVIMTBWMjVhNyA3IDAgMDE3LTdoNmE3IDcgMCAwMTcgN3pNMTEgOEg1QTMgMyAwIDAxMiA1VjNINFY1QTEgMSAwIDAwNSA2aDZ6TTQgMTVIMlYxM2EzIDMgMCAwMTMtM2g2djJINWExIDEgMCAwMC0xIDF6XCJ9fV0sXCJuYW1lXCI6XCJzdHJlc3MtYnJlYXRoLWVkaXRvclwiLFwic2l6ZVwiOjMyfSxcInNpemVcIjozMn0sXG4gICAgc3ZnOiBgPHN2ZyBmb2N1c2FibGU9XCJmYWxzZVwiIHByZXNlcnZlQXNwZWN0UmF0aW89XCJ4TWlkWU1pZCBtZWV0XCIgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIGZpbGw9XCJjdXJyZW50Q29sb3JcIiB3aWR0aD1cIjMyXCIgaGVpZ2h0PVwiMzJcIiB2aWV3Qm94PVwiMCAwIDMyIDMyXCIgYXJpYS1oaWRkZW49XCJ0cnVlXCI+PHBhdGggZD1cIk0yMCA0YTUgNSAwIDExLTUgNSA1IDUgMCAwMTUtNW0wLTJhNyA3IDAgMTA3IDdBNyA3IDAgMDAyMCAyek0zMCAzMEgyOFYyNWE1IDUgMCAwMC01LTVIMTdhNSA1IDAgMDAtNSA1djVIMTBWMjVhNyA3IDAgMDE3LTdoNmE3IDcgMCAwMTcgN3pNMTEgOEg1QTMgMyAwIDAxMiA1VjNINFY1QTEgMSAwIDAwNSA2aDZ6TTQgMTVIMlYxM2EzIDMgMCAwMTMtM2g2djJINWExIDEgMCAwMC0xIDF6XCI+PC9wYXRoPjwvc3ZnPmBcbiAgfSxcblxuICBcIjI0XCI6IHtcbiAgICBtZXRhZGF0YToge1wibW9kdWxlTmFtZVwiOlwiV2F0c29uSGVhbHRoU3RyZXNzQnJlYXRoRWRpdG9yMjRcIixcImZpbGVwYXRoXCI6XCJ3YXRzb24taGVhbHRoL3N0cmVzcy1icmVhdGgtZWRpdG9yLzI0LmpzXCIsXCJkZXNjcmlwdG9yXCI6e1wiZWxlbVwiOlwic3ZnXCIsXCJhdHRyc1wiOntcInhtbG5zXCI6XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLFwidmlld0JveFwiOlwiMCAwIDMyIDMyXCIsXCJmaWxsXCI6XCJjdXJyZW50Q29sb3JcIixcIndpZHRoXCI6MjQsXCJoZWlnaHRcIjoyNH0sXCJjb250ZW50XCI6W3tcImVsZW1cIjpcInBhdGhcIixcImF0dHJzXCI6e1wiZFwiOlwiTTIwIDRhNSA1IDAgMTEtNSA1IDUgNSAwIDAxNS01bTAtMmE3IDcgMCAxMDcgN0E3IDcgMCAwMDIwIDJ6TTMwIDMwSDI4VjI1YTUgNSAwIDAwLTUtNUgxN2E1IDUgMCAwMC01IDV2NUgxMFYyNWE3IDcgMCAwMTctN2g2YTcgNyAwIDAxNyA3ek0xMSA4SDVBMyAzIDAgMDEyIDVWM0g0VjVBMSAxIDAgMDA1IDZoNnpNNCAxNUgyVjEzYTMgMyAwIDAxMy0zaDZ2Mkg1YTEgMSAwIDAwLTEgMXpcIn19XSxcIm5hbWVcIjpcInN0cmVzcy1icmVhdGgtZWRpdG9yXCIsXCJzaXplXCI6MjR9LFwic2l6ZVwiOjI0fSxcbiAgICBzdmc6IGA8c3ZnIGZvY3VzYWJsZT1cImZhbHNlXCIgcHJlc2VydmVBc3BlY3RSYXRpbz1cInhNaWRZTWlkIG1lZXRcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgZmlsbD1cImN1cnJlbnRDb2xvclwiIHdpZHRoPVwiMjRcIiBoZWlnaHQ9XCIyNFwiIHZpZXdCb3g9XCIwIDAgMzIgMzJcIiBhcmlhLWhpZGRlbj1cInRydWVcIj48cGF0aCBkPVwiTTIwIDRhNSA1IDAgMTEtNSA1IDUgNSAwIDAxNS01bTAtMmE3IDcgMCAxMDcgN0E3IDcgMCAwMDIwIDJ6TTMwIDMwSDI4VjI1YTUgNSAwIDAwLTUtNUgxN2E1IDUgMCAwMC01IDV2NUgxMFYyNWE3IDcgMCAwMTctN2g2YTcgNyAwIDAxNyA3ek0xMSA4SDVBMyAzIDAgMDEyIDVWM0g0VjVBMSAxIDAgMDA1IDZoNnpNNCAxNUgyVjEzYTMgMyAwIDAxMy0zaDZ2Mkg1YTEgMSAwIDAwLTEgMXpcIj48L3BhdGg+PC9zdmc+YFxuICB9LFxuXG4gIFwiMjBcIjoge1xuICAgIG1ldGFkYXRhOiB7XCJtb2R1bGVOYW1lXCI6XCJXYXRzb25IZWFsdGhTdHJlc3NCcmVhdGhFZGl0b3IyMFwiLFwiZmlsZXBhdGhcIjpcIndhdHNvbi1oZWFsdGgvc3RyZXNzLWJyZWF0aC1lZGl0b3IvMjAuanNcIixcImRlc2NyaXB0b3JcIjp7XCJlbGVtXCI6XCJzdmdcIixcImF0dHJzXCI6e1wieG1sbnNcIjpcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIsXCJ2aWV3Qm94XCI6XCIwIDAgMzIgMzJcIixcImZpbGxcIjpcImN1cnJlbnRDb2xvclwiLFwid2lkdGhcIjoyMCxcImhlaWdodFwiOjIwfSxcImNvbnRlbnRcIjpbe1wiZWxlbVwiOlwicGF0aFwiLFwiYXR0cnNcIjp7XCJkXCI6XCJNMjAgNGE1IDUgMCAxMS01IDUgNSA1IDAgMDE1LTVtMC0yYTcgNyAwIDEwNyA3QTcgNyAwIDAwMjAgMnpNMzAgMzBIMjhWMjVhNSA1IDAgMDAtNS01SDE3YTUgNSAwIDAwLTUgNXY1SDEwVjI1YTcgNyAwIDAxNy03aDZhNyA3IDAgMDE3IDd6TTExIDhINUEzIDMgMCAwMTIgNVYzSDRWNUExIDEgMCAwMDUgNmg2ek00IDE1SDJWMTNhMyAzIDAgMDEzLTNoNnYySDVhMSAxIDAgMDAtMSAxelwifX1dLFwibmFtZVwiOlwic3RyZXNzLWJyZWF0aC1lZGl0b3JcIixcInNpemVcIjoyMH0sXCJzaXplXCI6MjB9LFxuICAgIHN2ZzogYDxzdmcgZm9jdXNhYmxlPVwiZmFsc2VcIiBwcmVzZXJ2ZUFzcGVjdFJhdGlvPVwieE1pZFlNaWQgbWVldFwiIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiBmaWxsPVwiY3VycmVudENvbG9yXCIgd2lkdGg9XCIyMFwiIGhlaWdodD1cIjIwXCIgdmlld0JveD1cIjAgMCAzMiAzMlwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiPjxwYXRoIGQ9XCJNMjAgNGE1IDUgMCAxMS01IDUgNSA1IDAgMDE1LTVtMC0yYTcgNyAwIDEwNyA3QTcgNyAwIDAwMjAgMnpNMzAgMzBIMjhWMjVhNSA1IDAgMDAtNS01SDE3YTUgNSAwIDAwLTUgNXY1SDEwVjI1YTcgNyAwIDAxNy03aDZhNyA3IDAgMDE3IDd6TTExIDhINUEzIDMgMCAwMTIgNVYzSDRWNUExIDEgMCAwMDUgNmg2ek00IDE1SDJWMTNhMyAzIDAgMDEzLTNoNnYySDVhMSAxIDAgMDAtMSAxelwiPjwvcGF0aD48L3N2Zz5gXG4gIH0sXG5cbiAgXCIxNlwiOiB7XG4gICAgbWV0YWRhdGE6IHtcIm1vZHVsZU5hbWVcIjpcIldhdHNvbkhlYWx0aFN0cmVzc0JyZWF0aEVkaXRvcjE2XCIsXCJmaWxlcGF0aFwiOlwid2F0c29uLWhlYWx0aC9zdHJlc3MtYnJlYXRoLWVkaXRvci8xNi5qc1wiLFwiZGVzY3JpcHRvclwiOntcImVsZW1cIjpcInN2Z1wiLFwiYXR0cnNcIjp7XCJ4bWxuc1wiOlwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIixcInZpZXdCb3hcIjpcIjAgMCAzMiAzMlwiLFwiZmlsbFwiOlwiY3VycmVudENvbG9yXCIsXCJ3aWR0aFwiOjE2LFwiaGVpZ2h0XCI6MTZ9LFwiY29udGVudFwiOlt7XCJlbGVtXCI6XCJwYXRoXCIsXCJhdHRyc1wiOntcImRcIjpcIk0yMCA0YTUgNSAwIDExLTUgNSA1IDUgMCAwMTUtNW0wLTJhNyA3IDAgMTA3IDdBNyA3IDAgMDAyMCAyek0zMCAzMEgyOFYyNWE1IDUgMCAwMC01LTVIMTdhNSA1IDAgMDAtNSA1djVIMTBWMjVhNyA3IDAgMDE3LTdoNmE3IDcgMCAwMTcgN3pNMTEgOEg1QTMgMyAwIDAxMiA1VjNINFY1QTEgMSAwIDAwNSA2aDZ6TTQgMTVIMlYxM2EzIDMgMCAwMTMtM2g2djJINWExIDEgMCAwMC0xIDF6XCJ9fV0sXCJuYW1lXCI6XCJzdHJlc3MtYnJlYXRoLWVkaXRvclwiLFwic2l6ZVwiOjE2fSxcInNpemVcIjoxNn0sXG4gICAgc3ZnOiBgPHN2ZyBmb2N1c2FibGU9XCJmYWxzZVwiIHByZXNlcnZlQXNwZWN0UmF0aW89XCJ4TWlkWU1pZCBtZWV0XCIgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIGZpbGw9XCJjdXJyZW50Q29sb3JcIiB3aWR0aD1cIjE2XCIgaGVpZ2h0PVwiMTZcIiB2aWV3Qm94PVwiMCAwIDMyIDMyXCIgYXJpYS1oaWRkZW49XCJ0cnVlXCI+PHBhdGggZD1cIk0yMCA0YTUgNSAwIDExLTUgNSA1IDUgMCAwMTUtNW0wLTJhNyA3IDAgMTA3IDdBNyA3IDAgMDAyMCAyek0zMCAzMEgyOFYyNWE1IDUgMCAwMC01LTVIMTdhNSA1IDAgMDAtNSA1djVIMTBWMjVhNyA3IDAgMDE3LTdoNmE3IDcgMCAwMTcgN3pNMTEgOEg1QTMgMyAwIDAxMiA1VjNINFY1QTEgMSAwIDAwNSA2aDZ6TTQgMTVIMlYxM2EzIDMgMCAwMTMtM2g2djJINWExIDEgMCAwMC0xIDF6XCI+PC9wYXRoPjwvc3ZnPmBcbiAgfSxcblxuICB9O1xuXG4gIGNvbnN0cnVjdG9yKHByb3RlY3RlZCBlbGVtZW50UmVmOiBFbGVtZW50UmVmKSB7fVxuXG5cdG5nQWZ0ZXJWaWV3SW5pdCgpIHtcbiAgICBjb25zdCBzdmcgPSB0aGlzLmVsZW1lbnRSZWYubmF0aXZlRWxlbWVudDtcbiAgICBzdmcuc2V0QXR0cmlidXRlKFwieG1sbnNcIiwgXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiKTtcblxuICAgIGNvbnN0IGljb24gPSB0aGlzLmljb25zW3RoaXMuc2l6ZV1cblxuICAgIGNvbnN0IGRvbVBhcnNlciA9IG5ldyBET01QYXJzZXIoKTtcbiAgICBjb25zdCByYXdTVkcgPSBpY29uLnN2ZztcbiAgICBjb25zdCBzdmdFbGVtZW50ID0gZG9tUGFyc2VyLnBhcnNlRnJvbVN0cmluZyhyYXdTVkcsIFwiaW1hZ2Uvc3ZnK3htbFwiKS5kb2N1bWVudEVsZW1lbnQ7XG5cbiAgICBsZXQgbm9kZSA9IHN2Z0VsZW1lbnQuZmlyc3RDaGlsZDtcbiAgICB3aGlsZSAobm9kZSkge1xuICAgICAgLy8gaW1wb3J0Tm9kZSBtYWtlcyBhIGNsb25lIG9mIHRoZSBub2RlXG4gICAgICAvLyB0aGlzIGVuc3VyZXMgd2Uga2VlcCBsb29waW5nIG92ZXIgdGhlIG5vZGVzIGluIHRoZSBwYXJzZWQgZG9jdW1lbnRcbiAgICAgIHN2Zy5hcHBlbmRDaGlsZChzdmcub3duZXJEb2N1bWVudC5pbXBvcnROb2RlKG5vZGUsIHRydWUpKTtcbiAgICAgIG5vZGUgPSBub2RlLm5leHRTaWJsaW5nO1xuICAgIH1cblxuICAgIGNvbnN0IGF0dHJpYnV0ZXMgPSBnZXRBdHRyaWJ1dGVzKHtcbiAgICAgIHdpZHRoOiBpY29uLm1ldGFkYXRhLmRlc2NyaXB0b3IuYXR0cnMuaGVpZ2h0LFxuICAgICAgaGVpZ2h0OiBpY29uLm1ldGFkYXRhLmRlc2NyaXB0b3IuYXR0cnMuaGVpZ2h0LFxuICAgICAgdmlld0JveDogaWNvbi5tZXRhZGF0YS5kZXNjcmlwdG9yLmF0dHJzLnZpZXdCb3gsXG4gICAgICB0aXRsZTogdGhpcy50aXRsZSxcbiAgICAgIFwiYXJpYS1sYWJlbFwiOiB0aGlzLmFyaWFMYWJlbCxcbiAgICAgIFwiYXJpYS1sYWJlbGxlZGJ5XCI6IHRoaXMuYXJpYUxhYmVsbGVkYnksXG4gICAgICBcImFyaWEtaGlkZGVuXCI6IHRoaXMuYXJpYUhpZGRlbixcbiAgICAgIGZvY3VzYWJsZTogdGhpcy5pc0ZvY3VzYWJsZS50b1N0cmluZygpXG4gICAgfSk7XG5cbiAgICBjb25zdCBhdHRyS2V5cyA9IE9iamVjdC5rZXlzKGF0dHJpYnV0ZXMpO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYXR0cktleXMubGVuZ3RoOyBpKyspIHtcbiAgICAgIGNvbnN0IGtleSA9IGF0dHJLZXlzW2ldO1xuICAgICAgY29uc3QgdmFsdWUgPSBhdHRyaWJ1dGVzW2tleV07XG4gICAgICBpZiAoa2V5ID09PSBcInRpdGxlXCIpIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG4gICAgICBpZiAodmFsdWUpIHtcbiAgICAgICAgc3ZnLnNldEF0dHJpYnV0ZShrZXksIHZhbHVlKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoYXR0cmlidXRlcy50aXRsZSkge1xuICAgICAgY29uc3QgdGl0bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwidGl0bGVcIik7XG4gICAgICB0aXRsZS50ZXh0Q29udGVudCA9IGF0dHJpYnV0ZXMudGl0bGU7XG4gICAgICBXYXRzb25IZWFsdGhTdHJlc3NCcmVhdGhFZGl0b3JEaXJlY3RpdmUudGl0bGVJZENvdW50ZXIrKztcbiAgICAgIHRpdGxlLnNldEF0dHJpYnV0ZShcImlkXCIsIGB3YXRzb24taGVhbHRoLXN0cmVzcy1icmVhdGgtZWRpdG9yLSR7V2F0c29uSGVhbHRoU3RyZXNzQnJlYXRoRWRpdG9yRGlyZWN0aXZlLnRpdGxlSWRDb3VudGVyfWApO1xuICAgICAgc3ZnLmFwcGVuZENoaWxkKHRpdGxlKTtcbiAgICAgIHN2Zy5zZXRBdHRyaWJ1dGUoXCJhcmlhLWxhYmVsbGVkYnlcIiwgYHdhdHNvbi1oZWFsdGgtc3RyZXNzLWJyZWF0aC1lZGl0b3ItJHtXYXRzb25IZWFsdGhTdHJlc3NCcmVhdGhFZGl0b3JEaXJlY3RpdmUudGl0bGVJZENvdW50ZXJ9YCk7XG4gICAgfVxuXHR9XG59XG5cblxuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBbXG4gICAgXG4gIFdhdHNvbkhlYWx0aFN0cmVzc0JyZWF0aEVkaXRvckNvbXBvbmVudCxcbiAgV2F0c29uSGVhbHRoU3RyZXNzQnJlYXRoRWRpdG9yRGlyZWN0aXZlLFxuXG4gIF0sXG4gIGV4cG9ydHM6IFtcbiAgICBcbiAgV2F0c29uSGVhbHRoU3RyZXNzQnJlYXRoRWRpdG9yQ29tcG9uZW50LFxuICBXYXRzb25IZWFsdGhTdHJlc3NCcmVhdGhFZGl0b3JEaXJlY3RpdmUsXG5cbiAgXVxufSlcbmV4cG9ydCBjbGFzcyBXYXRzb25IZWFsdGhTdHJlc3NCcmVhdGhFZGl0b3JNb2R1bGUge31cbiJdfQ==