import { __decorate, __metadata } from "tslib";
import { NgModule, Component, Directive, ElementRef, Input, AfterViewInit } from "@angular/core";
import { getAttributes } from "@carbon/icon-helpers";
var WarningAltInvertedFilledComponent = /** @class */ (function () {
    function WarningAltInvertedFilledComponent() {
        this.focusable = false;
    }
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WarningAltInvertedFilledComponent.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WarningAltInvertedFilledComponent.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], WarningAltInvertedFilledComponent.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WarningAltInvertedFilledComponent.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], WarningAltInvertedFilledComponent.prototype, "focusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WarningAltInvertedFilledComponent.prototype, "innerClass", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WarningAltInvertedFilledComponent.prototype, "size", void 0);
    WarningAltInvertedFilledComponent = __decorate([
        Component({
            selector: "ibm-icon-warning-alt-inverted-filled",
            template: "\n    <svg\n      ibmIconWarningAltInvertedFilled\n      [size]=\"size\"\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
        })
    ], WarningAltInvertedFilledComponent);
    return WarningAltInvertedFilledComponent;
}());
export { WarningAltInvertedFilledComponent };
var WarningAltInvertedFilledDirective = /** @class */ (function () {
    function WarningAltInvertedFilledDirective(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
        this.icons = {
            "32": {
                metadata: { "moduleName": "WarningAltInvertedFilled32", "filepath": "warning--alt-inverted--filled/32.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 32, "height": 32 }, "content": [{ "elem": "path", "attrs": { "d": "M29.8594,2.4893A1,1,0,0,0,29,2H3a1.0015,1.0015,0,0,0-.8794,1.4785l13,25.0366a1.04,1.04,0,0,0,1.7583,0l13-25.0366A1.0034,1.0034,0,0,0,29.8594,2.4893ZM14.875,5h2.25V15h-2.25ZM16,21a1.5,1.5,0,1,1,1.5-1.5A1.5,1.5,0,0,1,16,21Z" } }, { "elem": "path", "attrs": { "fill": "none", "d": "M14.875,5h2.25V15h-2.25ZM16,21a1.5,1.5,0,1,1,1.5-1.5A1.5,1.5,0,0,1,16,21Z", "data-icon-path": "inner-path" } }], "name": "warning--alt-inverted--filled", "size": 32 }, "size": 32 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M29.8594,2.4893A1,1,0,0,0,29,2H3a1.0015,1.0015,0,0,0-.8794,1.4785l13,25.0366a1.04,1.04,0,0,0,1.7583,0l13-25.0366A1.0034,1.0034,0,0,0,29.8594,2.4893ZM14.875,5h2.25V15h-2.25ZM16,21a1.5,1.5,0,1,1,1.5-1.5A1.5,1.5,0,0,1,16,21Z\"></path><path fill=\"none\" d=\"M14.875,5h2.25V15h-2.25ZM16,21a1.5,1.5,0,1,1,1.5-1.5A1.5,1.5,0,0,1,16,21Z\" data-icon-path=\"inner-path\"></path></svg>"
            },
            "24": {
                metadata: { "moduleName": "WarningAltInvertedFilled24", "filepath": "warning--alt-inverted--filled/24.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 24, "height": 24 }, "content": [{ "elem": "path", "attrs": { "d": "M29.8594,2.4893A1,1,0,0,0,29,2H3a1.0015,1.0015,0,0,0-.8794,1.4785l13,25.0366a1.04,1.04,0,0,0,1.7583,0l13-25.0366A1.0034,1.0034,0,0,0,29.8594,2.4893ZM14.875,5h2.25V15h-2.25ZM16,21a1.5,1.5,0,1,1,1.5-1.5A1.5,1.5,0,0,1,16,21Z" } }, { "elem": "path", "attrs": { "fill": "none", "d": "M14.875,5h2.25V15h-2.25ZM16,21a1.5,1.5,0,1,1,1.5-1.5A1.5,1.5,0,0,1,16,21Z", "data-icon-path": "inner-path" } }], "name": "warning--alt-inverted--filled", "size": 24 }, "size": 24 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M29.8594,2.4893A1,1,0,0,0,29,2H3a1.0015,1.0015,0,0,0-.8794,1.4785l13,25.0366a1.04,1.04,0,0,0,1.7583,0l13-25.0366A1.0034,1.0034,0,0,0,29.8594,2.4893ZM14.875,5h2.25V15h-2.25ZM16,21a1.5,1.5,0,1,1,1.5-1.5A1.5,1.5,0,0,1,16,21Z\"></path><path fill=\"none\" d=\"M14.875,5h2.25V15h-2.25ZM16,21a1.5,1.5,0,1,1,1.5-1.5A1.5,1.5,0,0,1,16,21Z\" data-icon-path=\"inner-path\"></path></svg>"
            },
            "20": {
                metadata: { "moduleName": "WarningAltInvertedFilled20", "filepath": "warning--alt-inverted--filled/20.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 20, "height": 20 }, "content": [{ "elem": "path", "attrs": { "d": "M29.8594,2.4893A1,1,0,0,0,29,2H3a1.0015,1.0015,0,0,0-.8794,1.4785l13,25.0366a1.04,1.04,0,0,0,1.7583,0l13-25.0366A1.0034,1.0034,0,0,0,29.8594,2.4893ZM14.875,5h2.25V15h-2.25ZM16,21a1.5,1.5,0,1,1,1.5-1.5A1.5,1.5,0,0,1,16,21Z" } }, { "elem": "path", "attrs": { "fill": "none", "d": "M14.875,5h2.25V15h-2.25ZM16,21a1.5,1.5,0,1,1,1.5-1.5A1.5,1.5,0,0,1,16,21Z", "data-icon-path": "inner-path" } }], "name": "warning--alt-inverted--filled", "size": 20 }, "size": 20 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M29.8594,2.4893A1,1,0,0,0,29,2H3a1.0015,1.0015,0,0,0-.8794,1.4785l13,25.0366a1.04,1.04,0,0,0,1.7583,0l13-25.0366A1.0034,1.0034,0,0,0,29.8594,2.4893ZM14.875,5h2.25V15h-2.25ZM16,21a1.5,1.5,0,1,1,1.5-1.5A1.5,1.5,0,0,1,16,21Z\"></path><path fill=\"none\" d=\"M14.875,5h2.25V15h-2.25ZM16,21a1.5,1.5,0,1,1,1.5-1.5A1.5,1.5,0,0,1,16,21Z\" data-icon-path=\"inner-path\"></path></svg>"
            },
            "16": {
                metadata: { "moduleName": "WarningAltInvertedFilled16", "filepath": "warning--alt-inverted--filled/16.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 16, "height": 16 }, "content": [{ "elem": "path", "attrs": { "d": "M29.8594,2.4893A1,1,0,0,0,29,2H3a1.0015,1.0015,0,0,0-.8794,1.4785l13,25.0366a1.04,1.04,0,0,0,1.7583,0l13-25.0366A1.0034,1.0034,0,0,0,29.8594,2.4893ZM14.875,5h2.25V15h-2.25ZM16,21a1.5,1.5,0,1,1,1.5-1.5A1.5,1.5,0,0,1,16,21Z" } }, { "elem": "path", "attrs": { "fill": "none", "d": "M14.875,5h2.25V15h-2.25ZM16,21a1.5,1.5,0,1,1,1.5-1.5A1.5,1.5,0,0,1,16,21Z", "data-icon-path": "inner-path" } }], "name": "warning--alt-inverted--filled", "size": 16 }, "size": 16 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"16\" height=\"16\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M29.8594,2.4893A1,1,0,0,0,29,2H3a1.0015,1.0015,0,0,0-.8794,1.4785l13,25.0366a1.04,1.04,0,0,0,1.7583,0l13-25.0366A1.0034,1.0034,0,0,0,29.8594,2.4893ZM14.875,5h2.25V15h-2.25ZM16,21a1.5,1.5,0,1,1,1.5-1.5A1.5,1.5,0,0,1,16,21Z\"></path><path fill=\"none\" d=\"M14.875,5h2.25V15h-2.25ZM16,21a1.5,1.5,0,1,1,1.5-1.5A1.5,1.5,0,0,1,16,21Z\" data-icon-path=\"inner-path\"></path></svg>"
            },
        };
    }
    WarningAltInvertedFilledDirective_1 = WarningAltInvertedFilledDirective;
    WarningAltInvertedFilledDirective.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var icon = this.icons[this.size];
        var domParser = new DOMParser();
        var rawSVG = icon.svg;
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: icon.metadata.descriptor.attrs.height,
            height: icon.metadata.descriptor.attrs.height,
            viewBox: icon.metadata.descriptor.attrs.viewBox,
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            WarningAltInvertedFilledDirective_1.titleIdCounter++;
            title.setAttribute("id", "warning-alt-inverted-filled-" + WarningAltInvertedFilledDirective_1.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "warning-alt-inverted-filled-" + WarningAltInvertedFilledDirective_1.titleIdCounter);
        }
    };
    var WarningAltInvertedFilledDirective_1;
    WarningAltInvertedFilledDirective.titleIdCounter = 0;
    WarningAltInvertedFilledDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WarningAltInvertedFilledDirective.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WarningAltInvertedFilledDirective.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], WarningAltInvertedFilledDirective.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WarningAltInvertedFilledDirective.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], WarningAltInvertedFilledDirective.prototype, "isFocusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WarningAltInvertedFilledDirective.prototype, "size", void 0);
    WarningAltInvertedFilledDirective = WarningAltInvertedFilledDirective_1 = __decorate([
        Directive({
            selector: "[ibmIconWarningAltInvertedFilled]"
        }),
        __metadata("design:paramtypes", [ElementRef])
    ], WarningAltInvertedFilledDirective);
    return WarningAltInvertedFilledDirective;
}());
export { WarningAltInvertedFilledDirective };
var WarningAltInvertedFilledModule = /** @class */ (function () {
    function WarningAltInvertedFilledModule() {
    }
    WarningAltInvertedFilledModule = __decorate([
        NgModule({
            declarations: [
                WarningAltInvertedFilledComponent,
                WarningAltInvertedFilledDirective,
            ],
            exports: [
                WarningAltInvertedFilledComponent,
                WarningAltInvertedFilledDirective,
            ]
        })
    ], WarningAltInvertedFilledModule);
    return WarningAltInvertedFilledModule;
}());
export { WarningAltInvertedFilledModule };
//# sourceMappingURL=data:application/json;base64,