import { __decorate, __metadata } from "tslib";
import { NgModule, Component, Directive, ElementRef, Input, AfterViewInit } from "@angular/core";
import { getAttributes } from "@carbon/icon-helpers";
var LetterKkComponent = /** @class */ (function () {
    function LetterKkComponent() {
        this.focusable = false;
    }
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], LetterKkComponent.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], LetterKkComponent.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], LetterKkComponent.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], LetterKkComponent.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], LetterKkComponent.prototype, "focusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], LetterKkComponent.prototype, "innerClass", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], LetterKkComponent.prototype, "size", void 0);
    LetterKkComponent = __decorate([
        Component({
            selector: "ibm-icon-letter-kk",
            template: "\n    <svg\n      ibmIconLetterKk\n      [size]=\"size\"\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
        })
    ], LetterKkComponent);
    return LetterKkComponent;
}());
export { LetterKkComponent };
var LetterKkDirective = /** @class */ (function () {
    function LetterKkDirective(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
        this.icons = {
            "32": {
                metadata: { "moduleName": "LetterKk32", "filepath": "letter--Kk/32.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 32, "height": 32 }, "content": [{ "elem": "path", "attrs": { "d": "M15 9L12.89 9 9 15.55 9 9 7 9 7 23 9 23 9 18.71 9.93 17.22 12.89 23 15 23 11.11 15.43 15 9zM22.78 23L25 23 21.22 17 25 13 22.76 13 19 17.17 19 9 17 9 17 23 19 23 19 19.25 19.96 18.21 22.78 23z" } }], "name": "letter--Kk", "size": 32 }, "size": 32 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M15 9L12.89 9 9 15.55 9 9 7 9 7 23 9 23 9 18.71 9.93 17.22 12.89 23 15 23 11.11 15.43 15 9zM22.78 23L25 23 21.22 17 25 13 22.76 13 19 17.17 19 9 17 9 17 23 19 23 19 19.25 19.96 18.21 22.78 23z\"></path></svg>"
            },
            "24": {
                metadata: { "moduleName": "LetterKk24", "filepath": "letter--Kk/24.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 24, "height": 24 }, "content": [{ "elem": "path", "attrs": { "d": "M15 9L12.89 9 9 15.55 9 9 7 9 7 23 9 23 9 18.71 9.93 17.22 12.89 23 15 23 11.11 15.43 15 9zM22.78 23L25 23 21.22 17 25 13 22.76 13 19 17.17 19 9 17 9 17 23 19 23 19 19.25 19.96 18.21 22.78 23z" } }], "name": "letter--Kk", "size": 24 }, "size": 24 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M15 9L12.89 9 9 15.55 9 9 7 9 7 23 9 23 9 18.71 9.93 17.22 12.89 23 15 23 11.11 15.43 15 9zM22.78 23L25 23 21.22 17 25 13 22.76 13 19 17.17 19 9 17 9 17 23 19 23 19 19.25 19.96 18.21 22.78 23z\"></path></svg>"
            },
            "20": {
                metadata: { "moduleName": "LetterKk20", "filepath": "letter--Kk/20.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 20, "height": 20 }, "content": [{ "elem": "path", "attrs": { "d": "M15 9L12.89 9 9 15.55 9 9 7 9 7 23 9 23 9 18.71 9.93 17.22 12.89 23 15 23 11.11 15.43 15 9zM22.78 23L25 23 21.22 17 25 13 22.76 13 19 17.17 19 9 17 9 17 23 19 23 19 19.25 19.96 18.21 22.78 23z" } }], "name": "letter--Kk", "size": 20 }, "size": 20 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M15 9L12.89 9 9 15.55 9 9 7 9 7 23 9 23 9 18.71 9.93 17.22 12.89 23 15 23 11.11 15.43 15 9zM22.78 23L25 23 21.22 17 25 13 22.76 13 19 17.17 19 9 17 9 17 23 19 23 19 19.25 19.96 18.21 22.78 23z\"></path></svg>"
            },
            "16": {
                metadata: { "moduleName": "LetterKk16", "filepath": "letter--Kk/16.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 16, "height": 16 }, "content": [{ "elem": "path", "attrs": { "d": "M15 9L12.89 9 9 15.55 9 9 7 9 7 23 9 23 9 18.71 9.93 17.22 12.89 23 15 23 11.11 15.43 15 9zM22.78 23L25 23 21.22 17 25 13 22.76 13 19 17.17 19 9 17 9 17 23 19 23 19 19.25 19.96 18.21 22.78 23z" } }], "name": "letter--Kk", "size": 16 }, "size": 16 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"16\" height=\"16\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M15 9L12.89 9 9 15.55 9 9 7 9 7 23 9 23 9 18.71 9.93 17.22 12.89 23 15 23 11.11 15.43 15 9zM22.78 23L25 23 21.22 17 25 13 22.76 13 19 17.17 19 9 17 9 17 23 19 23 19 19.25 19.96 18.21 22.78 23z\"></path></svg>"
            },
        };
    }
    LetterKkDirective_1 = LetterKkDirective;
    LetterKkDirective.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var icon = this.icons[this.size];
        var domParser = new DOMParser();
        var rawSVG = icon.svg;
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: icon.metadata.descriptor.attrs.height,
            height: icon.metadata.descriptor.attrs.height,
            viewBox: icon.metadata.descriptor.attrs.viewBox,
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            LetterKkDirective_1.titleIdCounter++;
            title.setAttribute("id", "letter-kk-" + LetterKkDirective_1.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "letter-kk-" + LetterKkDirective_1.titleIdCounter);
        }
    };
    var LetterKkDirective_1;
    LetterKkDirective.titleIdCounter = 0;
    LetterKkDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], LetterKkDirective.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], LetterKkDirective.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], LetterKkDirective.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], LetterKkDirective.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], LetterKkDirective.prototype, "isFocusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], LetterKkDirective.prototype, "size", void 0);
    LetterKkDirective = LetterKkDirective_1 = __decorate([
        Directive({
            selector: "[ibmIconLetterKk]"
        }),
        __metadata("design:paramtypes", [ElementRef])
    ], LetterKkDirective);
    return LetterKkDirective;
}());
export { LetterKkDirective };
var LetterKkModule = /** @class */ (function () {
    function LetterKkModule() {
    }
    LetterKkModule = __decorate([
        NgModule({
            declarations: [
                LetterKkComponent,
                LetterKkDirective,
            ],
            exports: [
                LetterKkComponent,
                LetterKkDirective,
            ]
        })
    ], LetterKkModule);
    return LetterKkModule;
}());
export { LetterKkModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaWNvbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3RzL2xldHRlci0tS2svaWNvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0EsT0FBTyxFQUNMLFFBQVEsRUFDUixTQUFTLEVBQ1QsU0FBUyxFQUNULFVBQVUsRUFDVixLQUFLLEVBQ0wsYUFBYSxFQUNkLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQWtCckQ7SUFBQTtRQUtXLGNBQVMsR0FBWSxLQUFLLENBQUM7SUFHdEMsQ0FBQztJQVBVO1FBQVIsS0FBSyxFQUFFOzt3REFBbUI7SUFDbEI7UUFBUixLQUFLLEVBQUU7OzZEQUF3QjtJQUN2QjtRQUFSLEtBQUssRUFBRTs7eURBQXFCO0lBQ3BCO1FBQVIsS0FBSyxFQUFFOztvREFBZTtJQUNkO1FBQVIsS0FBSyxFQUFFOzt3REFBNEI7SUFDM0I7UUFBUixLQUFLLEVBQUU7O3lEQUFvQjtJQUNuQjtRQUFSLEtBQUssRUFBRTs7bURBQWM7SUFQWCxpQkFBaUI7UUFmN0IsU0FBUyxDQUFDO1lBQ1YsUUFBUSxFQUFFLG9CQUFvQjtZQUM3QixRQUFRLEVBQUUseVJBV1Q7U0FDRixDQUFDO09BQ1csaUJBQWlCLENBUTdCO0lBQUQsd0JBQUM7Q0FBQSxBQVJELElBUUM7U0FSWSxpQkFBaUI7QUFlOUI7SUFrQ0UsMkJBQXNCLFVBQXNCO1FBQXRCLGVBQVUsR0FBVixVQUFVLENBQVk7UUEzQm5DLGdCQUFXLEdBQVksS0FBSyxDQUFDO1FBRzVCLFVBQUssR0FBRztZQUVsQixJQUFJLEVBQUU7Z0JBQ0osUUFBUSxFQUFFLEVBQUMsWUFBWSxFQUFDLFlBQVksRUFBQyxVQUFVLEVBQUMsa0JBQWtCLEVBQUMsWUFBWSxFQUFDLEVBQUMsTUFBTSxFQUFDLEtBQUssRUFBQyxPQUFPLEVBQUMsRUFBQyxPQUFPLEVBQUMsNEJBQTRCLEVBQUMsU0FBUyxFQUFDLFdBQVcsRUFBQyxN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QixDQUFDO0lBQWpCLGNBQWM7UUFkMUIsUUFBUSxDQUFDO1lBQ1IsWUFBWSxFQUFFO2dCQUVkLGlCQUFpQjtnQkFDakIsaUJBQWlCO2FBRWhCO1lBQ0QsT0FBTyxFQUFFO2dCQUVULGlCQUFpQjtnQkFDakIsaUJBQWlCO2FBRWhCO1NBQ0YsQ0FBQztPQUNXLGNBQWMsQ0FBRztJQUFELHFCQUFDO0NBQUEsQUFBOUIsSUFBOEI7U0FBakIsY0FBYyIsInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IHtcbiAgTmdNb2R1bGUsXG4gIENvbXBvbmVudCxcbiAgRGlyZWN0aXZlLFxuICBFbGVtZW50UmVmLFxuICBJbnB1dCxcbiAgQWZ0ZXJWaWV3SW5pdFxufSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHsgZ2V0QXR0cmlidXRlcyB9IGZyb20gXCJAY2FyYm9uL2ljb24taGVscGVyc1wiO1xuXG5cbkBDb21wb25lbnQoe1xuXHRzZWxlY3RvcjogXCJpYm0taWNvbi1sZXR0ZXIta2tcIixcbiAgdGVtcGxhdGU6IGBcbiAgICA8c3ZnXG4gICAgICBpYm1JY29uTGV0dGVyS2tcbiAgICAgIFtzaXplXT1cInNpemVcIlxuICAgICAgW2FyaWFMYWJlbF09XCJhcmlhTGFiZWxcIlxuICAgICAgW2FyaWFMYWJlbGxlZGJ5XT1cImFyaWFMYWJlbGxlZGJ5XCJcbiAgICAgIFthcmlhSGlkZGVuXT1cImFyaWFIaWRkZW5cIlxuICAgICAgW3RpdGxlXT1cInRpdGxlXCJcbiAgICAgIFtpc0ZvY3VzYWJsZV09XCJmb2N1c2FibGVcIlxuICAgICAgW2F0dHIuY2xhc3NdPVwiaW5uZXJDbGFzc1wiPlxuICAgIDwvc3ZnPlxuICBgXG59KVxuZXhwb3J0IGNsYXNzIExldHRlcktrQ29tcG9uZW50IHtcbiAgQElucHV0KCkgYXJpYUxhYmVsOiBzdHJpbmc7XG4gIEBJbnB1dCgpIGFyaWFMYWJlbGxlZGJ5OiBzdHJpbmc7XG4gIEBJbnB1dCgpIGFyaWFIaWRkZW46IGJvb2xlYW47XG4gIEBJbnB1dCgpIHRpdGxlOiBzdHJpbmc7XG4gIEBJbnB1dCgpIGZvY3VzYWJsZTogYm9vbGVhbiA9IGZhbHNlO1xuICBASW5wdXQoKSBpbm5lckNsYXNzOiBzdHJpbmc7XG4gIEBJbnB1dCgpIHNpemU6IHN0cmluZztcbn1cblxuXG5cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogXCJbaWJtSWNvbkxldHRlcktrXVwiXG59KVxuZXhwb3J0IGNsYXNzIExldHRlcktrRGlyZWN0aXZlIGltcGxlbWVudHMgQWZ0ZXJWaWV3SW5pdCB7XG4gIHN0YXRpYyB0aXRsZUlkQ291bnRlciA9IDA7XG5cbiAgQElucHV0KCkgYXJpYUxhYmVsOiBzdHJpbmc7XG4gIEBJbnB1dCgpIGFyaWFMYWJlbGxlZGJ5OiBzdHJpbmc7XG4gIEBJbnB1dCgpIGFyaWFIaWRkZW46IGJvb2xlYW47XG4gIEBJbnB1dCgpIHRpdGxlOiBzdHJpbmc7XG4gIEBJbnB1dCgpIGlzRm9jdXNhYmxlOiBib29sZWFuID0gZmFsc2U7XG4gIEBJbnB1dCgpIHNpemU6IHN0cmluZztcblxuICBwcm90ZWN0ZWQgaWNvbnMgPSB7XG4gICAgXG4gIFwiMzJcIjoge1xuICAgIG1ldGFkYXRhOiB7XCJtb2R1bGVOYW1lXCI6XCJMZXR0ZXJLazMyXCIsXCJmaWxlcGF0aFwiOlwibGV0dGVyLS1Lay8zMi5qc1wiLFwiZGVzY3JpcHRvclwiOntcImVsZW1cIjpcInN2Z1wiLFwiYXR0cnNcIjp7XCJ4bWxuc1wiOlwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIixcInZpZXdCb3hcIjpcIjAgMCAzMiAzMlwiLFwiZmlsbFwiOlwiY3VycmVudENvbG9yXCIsXCJ3aWR0aFwiOjMyLFwiaGVpZ2h0XCI6MzJ9LFwiY29udGVudFwiOlt7XCJlbGVtXCI6XCJwYXRoXCIsXCJhdHRyc1wiOntcImRcIjpcIk0xNSA5TDEyLjg5IDkgOSAxNS41NSA5IDkgNyA5IDcgMjMgOSAyMyA5IDE4LjcxIDkuOTMgMTcuMjIgMTIuODkgMjMgMTUgMjMgMTEuMTEgMTUuNDMgMTUgOXpNMjIuNzggMjNMMjUgMjMgMjEuMjIgMTcgMjUgMTMgMjIuNzYgMTMgMTkgMTcuMTcgMTkgOSAxNyA5IDE3IDIzIDE5IDIzIDE5IDE5LjI1IDE5Ljk2IDE4LjIxIDIyLjc4IDIzelwifX1dLFwibmFtZVwiOlwibGV0dGVyLS1La1wiLFwic2l6ZVwiOjMyfSxcInNpemVcIjozMn0sXG4gICAgc3ZnOiBgPHN2ZyBmb2N1c2FibGU9XCJmYWxzZVwiIHByZXNlcnZlQXNwZWN0UmF0aW89XCJ4TWlkWU1pZCBtZWV0XCIgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIGZpbGw9XCJjdXJyZW50Q29sb3JcIiB3aWR0aD1cIjMyXCIgaGVpZ2h0PVwiMzJcIiB2aWV3Qm94PVwiMCAwIDMyIDMyXCIgYXJpYS1oaWRkZW49XCJ0cnVlXCI+PHBhdGggZD1cIk0xNSA5TDEyLjg5IDkgOSAxNS41NSA5IDkgNyA5IDcgMjMgOSAyMyA5IDE4LjcxIDkuOTMgMTcuMjIgMTIuODkgMjMgMTUgMjMgMTEuMTEgMTUuNDMgMTUgOXpNMjIuNzggMjNMMjUgMjMgMjEuMjIgMTcgMjUgMTMgMjIuNzYgMTMgMTkgMTcuMTcgMTkgOSAxNyA5IDE3IDIzIDE5IDIzIDE5IDE5LjI1IDE5Ljk2IDE4LjIxIDIyLjc4IDIzelwiPjwvcGF0aD48L3N2Zz5gXG4gIH0sXG5cbiAgXCIyNFwiOiB7XG4gICAgbWV0YWRhdGE6IHtcIm1vZHVsZU5hbWVcIjpcIkxldHRlcktrMjRcIixcImZpbGVwYXRoXCI6XCJsZXR0ZXItLUtrLzI0LmpzXCIsXCJkZXNjcmlwdG9yXCI6e1wiZWxlbVwiOlwic3ZnXCIsXCJhdHRyc1wiOntcInhtbG5zXCI6XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLFwidmlld0JveFwiOlwiMCAwIDMyIDMyXCIsXCJmaWxsXCI6XCJjdXJyZW50Q29sb3JcIixcIndpZHRoXCI6MjQsXCJoZWlnaHRcIjoyNH0sXCJjb250ZW50XCI6W3tcImVsZW1cIjpcInBhdGhcIixcImF0dHJzXCI6e1wiZFwiOlwiTTE1IDlMMTIuODkgOSA5IDE1LjU1IDkgOSA3IDkgNyAyMyA5IDIzIDkgMTguNzEgOS45MyAxNy4yMiAxMi44OSAyMyAxNSAyMyAxMS4xMSAxNS40MyAxNSA5ek0yMi43OCAyM0wyNSAyMyAyMS4yMiAxNyAyNSAxMyAyMi43NiAxMyAxOSAxNy4xNyAxOSA5IDE3IDkgMTcgMjMgMTkgMjMgMTkgMTkuMjUgMTkuOTYgMTguMjEgMjIuNzggMjN6XCJ9fV0sXCJuYW1lXCI6XCJsZXR0ZXItLUtrXCIsXCJzaXplXCI6MjR9LFwic2l6ZVwiOjI0fSxcbiAgICBzdmc6IGA8c3ZnIGZvY3VzYWJsZT1cImZhbHNlXCIgcHJlc2VydmVBc3BlY3RSYXRpbz1cInhNaWRZTWlkIG1lZXRcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgZmlsbD1cImN1cnJlbnRDb2xvclwiIHdpZHRoPVwiMjRcIiBoZWlnaHQ9XCIyNFwiIHZpZXdCb3g9XCIwIDAgMzIgMzJcIiBhcmlhLWhpZGRlbj1cInRydWVcIj48cGF0aCBkPVwiTTE1IDlMMTIuODkgOSA5IDE1LjU1IDkgOSA3IDkgNyAyMyA5IDIzIDkgMTguNzEgOS45MyAxNy4yMiAxMi44OSAyMyAxNSAyMyAxMS4xMSAxNS40MyAxNSA5ek0yMi43OCAyM0wyNSAyMyAyMS4yMiAxNyAyNSAxMyAyMi43NiAxMyAxOSAxNy4xNyAxOSA5IDE3IDkgMTcgMjMgMTkgMjMgMTkgMTkuMjUgMTkuOTYgMTguMjEgMjIuNzggMjN6XCI+PC9wYXRoPjwvc3ZnPmBcbiAgfSxcblxuICBcIjIwXCI6IHtcbiAgICBtZXRhZGF0YToge1wibW9kdWxlTmFtZVwiOlwiTGV0dGVyS2syMFwiLFwiZmlsZXBhdGhcIjpcImxldHRlci0tS2svMjAuanNcIixcImRlc2NyaXB0b3JcIjp7XCJlbGVtXCI6XCJzdmdcIixcImF0dHJzXCI6e1wieG1sbnNcIjpcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIsXCJ2aWV3Qm94XCI6XCIwIDAgMzIgMzJcIixcImZpbGxcIjpcImN1cnJlbnRDb2xvclwiLFwid2lkdGhcIjoyMCxcImhlaWdodFwiOjIwfSxcImNvbnRlbnRcIjpbe1wiZWxlbVwiOlwicGF0aFwiLFwiYXR0cnNcIjp7XCJkXCI6XCJNMTUgOUwxMi44OSA5IDkgMTUuNTUgOSA5IDcgOSA3IDIzIDkgMjMgOSAxOC43MSA5LjkzIDE3LjIyIDEyLjg5IDIzIDE1IDIzIDExLjExIDE1LjQzIDE1IDl6TTIyLjc4IDIzTDI1IDIzIDIxLjIyIDE3IDI1IDEzIDIyLjc2IDEzIDE5IDE3LjE3IDE5IDkgMTcgOSAxNyAyMyAxOSAyMyAxOSAxOS4yNSAxOS45NiAxOC4yMSAyMi43OCAyM3pcIn19XSxcIm5hbWVcIjpcImxldHRlci0tS2tcIixcInNpemVcIjoyMH0sXCJzaXplXCI6MjB9LFxuICAgIHN2ZzogYDxzdmcgZm9jdXNhYmxlPVwiZmFsc2VcIiBwcmVzZXJ2ZUFzcGVjdFJhdGlvPVwieE1pZFlNaWQgbWVldFwiIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiBmaWxsPVwiY3VycmVudENvbG9yXCIgd2lkdGg9XCIyMFwiIGhlaWdodD1cIjIwXCIgdmlld0JveD1cIjAgMCAzMiAzMlwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiPjxwYXRoIGQ9XCJNMTUgOUwxMi44OSA5IDkgMTUuNTUgOSA5IDcgOSA3IDIzIDkgMjMgOSAxOC43MSA5LjkzIDE3LjIyIDEyLjg5IDIzIDE1IDIzIDExLjExIDE1LjQzIDE1IDl6TTIyLjc4IDIzTDI1IDIzIDIxLjIyIDE3IDI1IDEzIDIyLjc2IDEzIDE5IDE3LjE3IDE5IDkgMTcgOSAxNyAyMyAxOSAyMyAxOSAxOS4yNSAxOS45NiAxOC4yMSAyMi43OCAyM3pcIj48L3BhdGg+PC9zdmc+YFxuICB9LFxuXG4gIFwiMTZcIjoge1xuICAgIG1ldGFkYXRhOiB7XCJtb2R1bGVOYW1lXCI6XCJMZXR0ZXJLazE2XCIsXCJmaWxlcGF0aFwiOlwibGV0dGVyLS1Lay8xNi5qc1wiLFwiZGVzY3JpcHRvclwiOntcImVsZW1cIjpcInN2Z1wiLFwiYXR0cnNcIjp7XCJ4bWxuc1wiOlwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIixcInZpZXdCb3hcIjpcIjAgMCAzMiAzMlwiLFwiZmlsbFwiOlwiY3VycmVudENvbG9yXCIsXCJ3aWR0aFwiOjE2LFwiaGVpZ2h0XCI6MTZ9LFwiY29udGVudFwiOlt7XCJlbGVtXCI6XCJwYXRoXCIsXCJhdHRyc1wiOntcImRcIjpcIk0xNSA5TDEyLjg5IDkgOSAxNS41NSA5IDkgNyA5IDcgMjMgOSAyMyA5IDE4LjcxIDkuOTMgMTcuMjIgMTIuODkgMjMgMTUgMjMgMTEuMTEgMTUuNDMgMTUgOXpNMjIuNzggMjNMMjUgMjMgMjEuMjIgMTcgMjUgMTMgMjIuNzYgMTMgMTkgMTcuMTcgMTkgOSAxNyA5IDE3IDIzIDE5IDIzIDE5IDE5LjI1IDE5Ljk2IDE4LjIxIDIyLjc4IDIzelwifX1dLFwibmFtZVwiOlwibGV0dGVyLS1La1wiLFwic2l6ZVwiOjE2fSxcInNpemVcIjoxNn0sXG4gICAgc3ZnOiBgPHN2ZyBmb2N1c2FibGU9XCJmYWxzZVwiIHByZXNlcnZlQXNwZWN0UmF0aW89XCJ4TWlkWU1pZCBtZWV0XCIgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIGZpbGw9XCJjdXJyZW50Q29sb3JcIiB3aWR0aD1cIjE2XCIgaGVpZ2h0PVwiMTZcIiB2aWV3Qm94PVwiMCAwIDMyIDMyXCIgYXJpYS1oaWRkZW49XCJ0cnVlXCI+PHBhdGggZD1cIk0xNSA5TDEyLjg5IDkgOSAxNS41NSA5IDkgNyA5IDcgMjMgOSAyMyA5IDE4LjcxIDkuOTMgMTcuMjIgMTIuODkgMjMgMTUgMjMgMTEuMTEgMTUuNDMgMTUgOXpNMjIuNzggMjNMMjUgMjMgMjEuMjIgMTcgMjUgMTMgMjIuNzYgMTMgMTkgMTcuMTcgMTkgOSAxNyA5IDE3IDIzIDE5IDIzIDE5IDE5LjI1IDE5Ljk2IDE4LjIxIDIyLjc4IDIzelwiPjwvcGF0aD48L3N2Zz5gXG4gIH0sXG5cbiAgfTtcblxuICBjb25zdHJ1Y3Rvcihwcm90ZWN0ZWQgZWxlbWVudFJlZjogRWxlbWVudFJlZikge31cblxuXHRuZ0FmdGVyVmlld0luaXQoKSB7XG4gICAgY29uc3Qgc3ZnID0gdGhpcy5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQ7XG4gICAgc3ZnLnNldEF0dHJpYnV0ZShcInhtbG5zXCIsIFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIik7XG5cbiAgICBjb25zdCBpY29uID0gdGhpcy5pY29uc1t0aGlzLnNpemVdXG5cbiAgICBjb25zdCBkb21QYXJzZXIgPSBuZXcgRE9NUGFyc2VyKCk7XG4gICAgY29uc3QgcmF3U1ZHID0gaWNvbi5zdmc7XG4gICAgY29uc3Qgc3ZnRWxlbWVudCA9IGRvbVBhcnNlci5wYXJzZUZyb21TdHJpbmcocmF3U1ZHLCBcImltYWdlL3N2Zyt4bWxcIikuZG9jdW1lbnRFbGVtZW50O1xuXG4gICAgbGV0IG5vZGUgPSBzdmdFbGVtZW50LmZpcnN0Q2hpbGQ7XG4gICAgd2hpbGUgKG5vZGUpIHtcbiAgICAgIC8vIGltcG9ydE5vZGUgbWFrZXMgYSBjbG9uZSBvZiB0aGUgbm9kZVxuICAgICAgLy8gdGhpcyBlbnN1cmVzIHdlIGtlZXAgbG9vcGluZyBvdmVyIHRoZSBub2RlcyBpbiB0aGUgcGFyc2VkIGRvY3VtZW50XG4gICAgICBzdmcuYXBwZW5kQ2hpbGQoc3ZnLm93bmVyRG9jdW1lbnQuaW1wb3J0Tm9kZShub2RlLCB0cnVlKSk7XG4gICAgICBub2RlID0gbm9kZS5uZXh0U2libGluZztcbiAgICB9XG5cbiAgICBjb25zdCBhdHRyaWJ1dGVzID0gZ2V0QXR0cmlidXRlcyh7XG4gICAgICB3aWR0aDogaWNvbi5tZXRhZGF0YS5kZXNjcmlwdG9yLmF0dHJzLmhlaWdodCxcbiAgICAgIGhlaWdodDogaWNvbi5tZXRhZGF0YS5kZXNjcmlwdG9yLmF0dHJzLmhlaWdodCxcbiAgICAgIHZpZXdCb3g6IGljb24ubWV0YWRhdGEuZGVzY3JpcHRvci5hdHRycy52aWV3Qm94LFxuICAgICAgdGl0bGU6IHRoaXMudGl0bGUsXG4gICAgICBcImFyaWEtbGFiZWxcIjogdGhpcy5hcmlhTGFiZWwsXG4gICAgICBcImFyaWEtbGFiZWxsZWRieVwiOiB0aGlzLmFyaWFMYWJlbGxlZGJ5LFxuICAgICAgXCJhcmlhLWhpZGRlblwiOiB0aGlzLmFyaWFIaWRkZW4sXG4gICAgICBmb2N1c2FibGU6IHRoaXMuaXNGb2N1c2FibGUudG9TdHJpbmcoKVxuICAgIH0pO1xuXG4gICAgY29uc3QgYXR0cktleXMgPSBPYmplY3Qua2V5cyhhdHRyaWJ1dGVzKTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGF0dHJLZXlzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBjb25zdCBrZXkgPSBhdHRyS2V5c1tpXTtcbiAgICAgIGNvbnN0IHZhbHVlID0gYXR0cmlidXRlc1trZXldO1xuICAgICAgaWYgKGtleSA9PT0gXCJ0aXRsZVwiKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuICAgICAgaWYgKHZhbHVlKSB7XG4gICAgICAgIHN2Zy5zZXRBdHRyaWJ1dGUoa2V5LCB2YWx1ZSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKGF0dHJpYnV0ZXMudGl0bGUpIHtcbiAgICAgIGNvbnN0IHRpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInRpdGxlXCIpO1xuICAgICAgdGl0bGUudGV4dENvbnRlbnQgPSBhdHRyaWJ1dGVzLnRpdGxlO1xuICAgICAgTGV0dGVyS2tEaXJlY3RpdmUudGl0bGVJZENvdW50ZXIrKztcbiAgICAgIHRpdGxlLnNldEF0dHJpYnV0ZShcImlkXCIsIGBsZXR0ZXIta2stJHtMZXR0ZXJLa0RpcmVjdGl2ZS50aXRsZUlkQ291bnRlcn1gKTtcbiAgICAgIHN2Zy5hcHBlbmRDaGlsZCh0aXRsZSk7XG4gICAgICBzdmcuc2V0QXR0cmlidXRlKFwiYXJpYS1sYWJlbGxlZGJ5XCIsIGBsZXR0ZXIta2stJHtMZXR0ZXJLa0RpcmVjdGl2ZS50aXRsZUlkQ291bnRlcn1gKTtcbiAgICB9XG5cdH1cbn1cblxuXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtcbiAgICBcbiAgTGV0dGVyS2tDb21wb25lbnQsXG4gIExldHRlcktrRGlyZWN0aXZlLFxuXG4gIF0sXG4gIGV4cG9ydHM6IFtcbiAgICBcbiAgTGV0dGVyS2tDb21wb25lbnQsXG4gIExldHRlcktrRGlyZWN0aXZlLFxuXG4gIF1cbn0pXG5leHBvcnQgY2xhc3MgTGV0dGVyS2tNb2R1bGUge31cbiJdfQ==