import { __decorate, __metadata } from "tslib";
import { NgModule, Component, Directive, ElementRef, Input, AfterViewInit } from "@angular/core";
import { getAttributes } from "@carbon/icon-helpers";
var QqPlotComponent = /** @class */ (function () {
    function QqPlotComponent() {
        this.focusable = false;
    }
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], QqPlotComponent.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], QqPlotComponent.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], QqPlotComponent.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], QqPlotComponent.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], QqPlotComponent.prototype, "focusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], QqPlotComponent.prototype, "innerClass", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], QqPlotComponent.prototype, "size", void 0);
    QqPlotComponent = __decorate([
        Component({
            selector: "ibm-icon-qq-plot",
            template: "\n    <svg\n      ibmIconQqPlot\n      [size]=\"size\"\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
        })
    ], QqPlotComponent);
    return QqPlotComponent;
}());
export { QqPlotComponent };
var QqPlotDirective = /** @class */ (function () {
    function QqPlotDirective(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
        this.icons = {
            "32": {
                metadata: { "moduleName": "QqPlot32", "filepath": "qq-plot/32.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 32, "height": 32 }, "content": [{ "elem": "circle", "attrs": { "cx": "20", "cy": "4", "r": "2" } }, { "elem": "circle", "attrs": { "cx": "8", "cy": "16", "r": "2" } }, { "elem": "circle", "attrs": { "cx": "28", "cy": "12", "r": "2" } }, { "elem": "circle", "attrs": { "cx": "11", "cy": "7", "r": "2" } }, { "elem": "circle", "attrs": { "cx": "16", "cy": "24", "r": "2" } }, { "elem": "path", "attrs": { "d": "M30,3.4131,28.5859,2,4,26.585V2H2V28a2,2,0,0,0,2,2H30V28H5.4131Z" } }], "name": "qq-plot", "size": 32 }, "size": 32 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><circle cx=\"20\" cy=\"4\" r=\"2\"></circle><circle cx=\"8\" cy=\"16\" r=\"2\"></circle><circle cx=\"28\" cy=\"12\" r=\"2\"></circle><circle cx=\"11\" cy=\"7\" r=\"2\"></circle><circle cx=\"16\" cy=\"24\" r=\"2\"></circle><path d=\"M30,3.4131,28.5859,2,4,26.585V2H2V28a2,2,0,0,0,2,2H30V28H5.4131Z\"></path></svg>"
            },
            "24": {
                metadata: { "moduleName": "QqPlot24", "filepath": "qq-plot/24.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 24, "height": 24 }, "content": [{ "elem": "circle", "attrs": { "cx": "20", "cy": "4", "r": "2" } }, { "elem": "circle", "attrs": { "cx": "8", "cy": "16", "r": "2" } }, { "elem": "circle", "attrs": { "cx": "28", "cy": "12", "r": "2" } }, { "elem": "circle", "attrs": { "cx": "11", "cy": "7", "r": "2" } }, { "elem": "circle", "attrs": { "cx": "16", "cy": "24", "r": "2" } }, { "elem": "path", "attrs": { "d": "M30,3.4131,28.5859,2,4,26.585V2H2V28a2,2,0,0,0,2,2H30V28H5.4131Z" } }], "name": "qq-plot", "size": 24 }, "size": 24 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><circle cx=\"20\" cy=\"4\" r=\"2\"></circle><circle cx=\"8\" cy=\"16\" r=\"2\"></circle><circle cx=\"28\" cy=\"12\" r=\"2\"></circle><circle cx=\"11\" cy=\"7\" r=\"2\"></circle><circle cx=\"16\" cy=\"24\" r=\"2\"></circle><path d=\"M30,3.4131,28.5859,2,4,26.585V2H2V28a2,2,0,0,0,2,2H30V28H5.4131Z\"></path></svg>"
            },
            "20": {
                metadata: { "moduleName": "QqPlot20", "filepath": "qq-plot/20.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 20, "height": 20 }, "content": [{ "elem": "circle", "attrs": { "cx": "20", "cy": "4", "r": "2" } }, { "elem": "circle", "attrs": { "cx": "8", "cy": "16", "r": "2" } }, { "elem": "circle", "attrs": { "cx": "28", "cy": "12", "r": "2" } }, { "elem": "circle", "attrs": { "cx": "11", "cy": "7", "r": "2" } }, { "elem": "circle", "attrs": { "cx": "16", "cy": "24", "r": "2" } }, { "elem": "path", "attrs": { "d": "M30,3.4131,28.5859,2,4,26.585V2H2V28a2,2,0,0,0,2,2H30V28H5.4131Z" } }], "name": "qq-plot", "size": 20 }, "size": 20 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><circle cx=\"20\" cy=\"4\" r=\"2\"></circle><circle cx=\"8\" cy=\"16\" r=\"2\"></circle><circle cx=\"28\" cy=\"12\" r=\"2\"></circle><circle cx=\"11\" cy=\"7\" r=\"2\"></circle><circle cx=\"16\" cy=\"24\" r=\"2\"></circle><path d=\"M30,3.4131,28.5859,2,4,26.585V2H2V28a2,2,0,0,0,2,2H30V28H5.4131Z\"></path></svg>"
            },
            "16": {
                metadata: { "moduleName": "QqPlot16", "filepath": "qq-plot/16.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 16, "height": 16 }, "content": [{ "elem": "circle", "attrs": { "cx": "20", "cy": "4", "r": "2" } }, { "elem": "circle", "attrs": { "cx": "8", "cy": "16", "r": "2" } }, { "elem": "circle", "attrs": { "cx": "28", "cy": "12", "r": "2" } }, { "elem": "circle", "attrs": { "cx": "11", "cy": "7", "r": "2" } }, { "elem": "circle", "attrs": { "cx": "16", "cy": "24", "r": "2" } }, { "elem": "path", "attrs": { "d": "M30,3.4131,28.5859,2,4,26.585V2H2V28a2,2,0,0,0,2,2H30V28H5.4131Z" } }], "name": "qq-plot", "size": 16 }, "size": 16 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"16\" height=\"16\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><circle cx=\"20\" cy=\"4\" r=\"2\"></circle><circle cx=\"8\" cy=\"16\" r=\"2\"></circle><circle cx=\"28\" cy=\"12\" r=\"2\"></circle><circle cx=\"11\" cy=\"7\" r=\"2\"></circle><circle cx=\"16\" cy=\"24\" r=\"2\"></circle><path d=\"M30,3.4131,28.5859,2,4,26.585V2H2V28a2,2,0,0,0,2,2H30V28H5.4131Z\"></path></svg>"
            },
        };
    }
    QqPlotDirective_1 = QqPlotDirective;
    QqPlotDirective.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var icon = this.icons[this.size];
        var domParser = new DOMParser();
        var rawSVG = icon.svg;
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: icon.metadata.descriptor.attrs.height,
            height: icon.metadata.descriptor.attrs.height,
            viewBox: icon.metadata.descriptor.attrs.viewBox,
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            QqPlotDirective_1.titleIdCounter++;
            title.setAttribute("id", "qq-plot-" + QqPlotDirective_1.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "qq-plot-" + QqPlotDirective_1.titleIdCounter);
        }
    };
    var QqPlotDirective_1;
    QqPlotDirective.titleIdCounter = 0;
    QqPlotDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], QqPlotDirective.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], QqPlotDirective.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], QqPlotDirective.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], QqPlotDirective.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], QqPlotDirective.prototype, "isFocusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], QqPlotDirective.prototype, "size", void 0);
    QqPlotDirective = QqPlotDirective_1 = __decorate([
        Directive({
            selector: "[ibmIconQqPlot]"
        }),
        __metadata("design:paramtypes", [ElementRef])
    ], QqPlotDirective);
    return QqPlotDirective;
}());
export { QqPlotDirective };
var QqPlotModule = /** @class */ (function () {
    function QqPlotModule() {
    }
    QqPlotModule = __decorate([
        NgModule({
            declarations: [
                QqPlotComponent,
                QqPlotDirective,
            ],
            exports: [
                QqPlotComponent,
                QqPlotDirective,
            ]
        })
    ], QqPlotModule);
    return QqPlotModule;
}());
export { QqPlotModule };
//# sourceMappingURL=data:application/json;base64,