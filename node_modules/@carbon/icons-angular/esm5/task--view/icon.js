import { __decorate, __metadata } from "tslib";
import { NgModule, Component, Directive, ElementRef, Input, AfterViewInit } from "@angular/core";
import { getAttributes } from "@carbon/icon-helpers";
var TaskViewComponent = /** @class */ (function () {
    function TaskViewComponent() {
        this.focusable = false;
    }
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], TaskViewComponent.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], TaskViewComponent.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], TaskViewComponent.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], TaskViewComponent.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], TaskViewComponent.prototype, "focusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], TaskViewComponent.prototype, "innerClass", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], TaskViewComponent.prototype, "size", void 0);
    TaskViewComponent = __decorate([
        Component({
            selector: "ibm-icon-task-view",
            template: "\n    <svg\n      ibmIconTaskView\n      [size]=\"size\"\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
        })
    ], TaskViewComponent);
    return TaskViewComponent;
}());
export { TaskViewComponent };
var TaskViewDirective = /** @class */ (function () {
    function TaskViewDirective(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
        this.icons = {
            "32": {
                metadata: { "moduleName": "TaskView32", "filepath": "task--view/32.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 32, "height": 32 }, "content": [{ "elem": "circle", "attrs": { "cx": "22", "cy": "24", "r": "2" } }, { "elem": "path", "attrs": { "fill": "none", "d": "M22,28a4,4,0,1,1,4-4A4.0039,4.0039,0,0,1,22,28Zm0-6a2,2,0,1,0,2,2A2.0027,2.0027,0,0,0,22,22Z" } }, { "elem": "path", "attrs": { "d": "M29.7769,23.4785A8.64,8.64,0,0,0,22,18a8.64,8.64,0,0,0-7.7769,5.4785L14,24l.2231.5215A8.64,8.64,0,0,0,22,30a8.64,8.64,0,0,0,7.7769-5.4785L30,24ZM22,28a4,4,0,1,1,4-4A4.0045,4.0045,0,0,1,22,28Z" } }, { "elem": "path", "attrs": { "d": "M12,28H7V7h3v3H22V7h3v9h2V7a2,2,0,0,0-2-2H22V4a2,2,0,0,0-2-2H12a2,2,0,0,0-2,2V5H7A2,2,0,0,0,5,7V28a2,2,0,0,0,2,2h5ZM12,4h8V8H12Z" } }], "name": "task--view", "size": 32 }, "size": 32 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><circle cx=\"22\" cy=\"24\" r=\"2\"></circle><path fill=\"none\" d=\"M22,28a4,4,0,1,1,4-4A4.0039,4.0039,0,0,1,22,28Zm0-6a2,2,0,1,0,2,2A2.0027,2.0027,0,0,0,22,22Z\"></path><path d=\"M29.7769,23.4785A8.64,8.64,0,0,0,22,18a8.64,8.64,0,0,0-7.7769,5.4785L14,24l.2231.5215A8.64,8.64,0,0,0,22,30a8.64,8.64,0,0,0,7.7769-5.4785L30,24ZM22,28a4,4,0,1,1,4-4A4.0045,4.0045,0,0,1,22,28Z\"></path><path d=\"M12,28H7V7h3v3H22V7h3v9h2V7a2,2,0,0,0-2-2H22V4a2,2,0,0,0-2-2H12a2,2,0,0,0-2,2V5H7A2,2,0,0,0,5,7V28a2,2,0,0,0,2,2h5ZM12,4h8V8H12Z\"></path></svg>"
            },
            "24": {
                metadata: { "moduleName": "TaskView24", "filepath": "task--view/24.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 24, "height": 24 }, "content": [{ "elem": "circle", "attrs": { "cx": "22", "cy": "24", "r": "2" } }, { "elem": "path", "attrs": { "fill": "none", "d": "M22,28a4,4,0,1,1,4-4A4.0039,4.0039,0,0,1,22,28Zm0-6a2,2,0,1,0,2,2A2.0027,2.0027,0,0,0,22,22Z" } }, { "elem": "path", "attrs": { "d": "M29.7769,23.4785A8.64,8.64,0,0,0,22,18a8.64,8.64,0,0,0-7.7769,5.4785L14,24l.2231.5215A8.64,8.64,0,0,0,22,30a8.64,8.64,0,0,0,7.7769-5.4785L30,24ZM22,28a4,4,0,1,1,4-4A4.0045,4.0045,0,0,1,22,28Z" } }, { "elem": "path", "attrs": { "d": "M12,28H7V7h3v3H22V7h3v9h2V7a2,2,0,0,0-2-2H22V4a2,2,0,0,0-2-2H12a2,2,0,0,0-2,2V5H7A2,2,0,0,0,5,7V28a2,2,0,0,0,2,2h5ZM12,4h8V8H12Z" } }], "name": "task--view", "size": 24 }, "size": 24 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><circle cx=\"22\" cy=\"24\" r=\"2\"></circle><path fill=\"none\" d=\"M22,28a4,4,0,1,1,4-4A4.0039,4.0039,0,0,1,22,28Zm0-6a2,2,0,1,0,2,2A2.0027,2.0027,0,0,0,22,22Z\"></path><path d=\"M29.7769,23.4785A8.64,8.64,0,0,0,22,18a8.64,8.64,0,0,0-7.7769,5.4785L14,24l.2231.5215A8.64,8.64,0,0,0,22,30a8.64,8.64,0,0,0,7.7769-5.4785L30,24ZM22,28a4,4,0,1,1,4-4A4.0045,4.0045,0,0,1,22,28Z\"></path><path d=\"M12,28H7V7h3v3H22V7h3v9h2V7a2,2,0,0,0-2-2H22V4a2,2,0,0,0-2-2H12a2,2,0,0,0-2,2V5H7A2,2,0,0,0,5,7V28a2,2,0,0,0,2,2h5ZM12,4h8V8H12Z\"></path></svg>"
            },
            "20": {
                metadata: { "moduleName": "TaskView20", "filepath": "task--view/20.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 20, "height": 20 }, "content": [{ "elem": "circle", "attrs": { "cx": "22", "cy": "24", "r": "2" } }, { "elem": "path", "attrs": { "fill": "none", "d": "M22,28a4,4,0,1,1,4-4A4.0039,4.0039,0,0,1,22,28Zm0-6a2,2,0,1,0,2,2A2.0027,2.0027,0,0,0,22,22Z" } }, { "elem": "path", "attrs": { "d": "M29.7769,23.4785A8.64,8.64,0,0,0,22,18a8.64,8.64,0,0,0-7.7769,5.4785L14,24l.2231.5215A8.64,8.64,0,0,0,22,30a8.64,8.64,0,0,0,7.7769-5.4785L30,24ZM22,28a4,4,0,1,1,4-4A4.0045,4.0045,0,0,1,22,28Z" } }, { "elem": "path", "attrs": { "d": "M12,28H7V7h3v3H22V7h3v9h2V7a2,2,0,0,0-2-2H22V4a2,2,0,0,0-2-2H12a2,2,0,0,0-2,2V5H7A2,2,0,0,0,5,7V28a2,2,0,0,0,2,2h5ZM12,4h8V8H12Z" } }], "name": "task--view", "size": 20 }, "size": 20 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><circle cx=\"22\" cy=\"24\" r=\"2\"></circle><path fill=\"none\" d=\"M22,28a4,4,0,1,1,4-4A4.0039,4.0039,0,0,1,22,28Zm0-6a2,2,0,1,0,2,2A2.0027,2.0027,0,0,0,22,22Z\"></path><path d=\"M29.7769,23.4785A8.64,8.64,0,0,0,22,18a8.64,8.64,0,0,0-7.7769,5.4785L14,24l.2231.5215A8.64,8.64,0,0,0,22,30a8.64,8.64,0,0,0,7.7769-5.4785L30,24ZM22,28a4,4,0,1,1,4-4A4.0045,4.0045,0,0,1,22,28Z\"></path><path d=\"M12,28H7V7h3v3H22V7h3v9h2V7a2,2,0,0,0-2-2H22V4a2,2,0,0,0-2-2H12a2,2,0,0,0-2,2V5H7A2,2,0,0,0,5,7V28a2,2,0,0,0,2,2h5ZM12,4h8V8H12Z\"></path></svg>"
            },
            "16": {
                metadata: { "moduleName": "TaskView16", "filepath": "task--view/16.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 16, "height": 16 }, "content": [{ "elem": "circle", "attrs": { "cx": "22", "cy": "24", "r": "2" } }, { "elem": "path", "attrs": { "fill": "none", "d": "M22,28a4,4,0,1,1,4-4A4.0039,4.0039,0,0,1,22,28Zm0-6a2,2,0,1,0,2,2A2.0027,2.0027,0,0,0,22,22Z" } }, { "elem": "path", "attrs": { "d": "M29.7769,23.4785A8.64,8.64,0,0,0,22,18a8.64,8.64,0,0,0-7.7769,5.4785L14,24l.2231.5215A8.64,8.64,0,0,0,22,30a8.64,8.64,0,0,0,7.7769-5.4785L30,24ZM22,28a4,4,0,1,1,4-4A4.0045,4.0045,0,0,1,22,28Z" } }, { "elem": "path", "attrs": { "d": "M12,28H7V7h3v3H22V7h3v9h2V7a2,2,0,0,0-2-2H22V4a2,2,0,0,0-2-2H12a2,2,0,0,0-2,2V5H7A2,2,0,0,0,5,7V28a2,2,0,0,0,2,2h5ZM12,4h8V8H12Z" } }], "name": "task--view", "size": 16 }, "size": 16 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"16\" height=\"16\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><circle cx=\"22\" cy=\"24\" r=\"2\"></circle><path fill=\"none\" d=\"M22,28a4,4,0,1,1,4-4A4.0039,4.0039,0,0,1,22,28Zm0-6a2,2,0,1,0,2,2A2.0027,2.0027,0,0,0,22,22Z\"></path><path d=\"M29.7769,23.4785A8.64,8.64,0,0,0,22,18a8.64,8.64,0,0,0-7.7769,5.4785L14,24l.2231.5215A8.64,8.64,0,0,0,22,30a8.64,8.64,0,0,0,7.7769-5.4785L30,24ZM22,28a4,4,0,1,1,4-4A4.0045,4.0045,0,0,1,22,28Z\"></path><path d=\"M12,28H7V7h3v3H22V7h3v9h2V7a2,2,0,0,0-2-2H22V4a2,2,0,0,0-2-2H12a2,2,0,0,0-2,2V5H7A2,2,0,0,0,5,7V28a2,2,0,0,0,2,2h5ZM12,4h8V8H12Z\"></path></svg>"
            },
        };
    }
    TaskViewDirective_1 = TaskViewDirective;
    TaskViewDirective.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var icon = this.icons[this.size];
        var domParser = new DOMParser();
        var rawSVG = icon.svg;
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: icon.metadata.descriptor.attrs.height,
            height: icon.metadata.descriptor.attrs.height,
            viewBox: icon.metadata.descriptor.attrs.viewBox,
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            TaskViewDirective_1.titleIdCounter++;
            title.setAttribute("id", "task-view-" + TaskViewDirective_1.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "task-view-" + TaskViewDirective_1.titleIdCounter);
        }
    };
    var TaskViewDirective_1;
    TaskViewDirective.titleIdCounter = 0;
    TaskViewDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], TaskViewDirective.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], TaskViewDirective.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], TaskViewDirective.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], TaskViewDirective.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], TaskViewDirective.prototype, "isFocusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], TaskViewDirective.prototype, "size", void 0);
    TaskViewDirective = TaskViewDirective_1 = __decorate([
        Directive({
            selector: "[ibmIconTaskView]"
        }),
        __metadata("design:paramtypes", [ElementRef])
    ], TaskViewDirective);
    return TaskViewDirective;
}());
export { TaskViewDirective };
var TaskViewModule = /** @class */ (function () {
    function TaskViewModule() {
    }
    TaskViewModule = __decorate([
        NgModule({
            declarations: [
                TaskViewComponent,
                TaskViewDirective,
            ],
            exports: [
                TaskViewComponent,
                TaskViewDirective,
            ]
        })
    ], TaskViewModule);
    return TaskViewModule;
}());
export { TaskViewModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaWNvbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3RzL3Rhc2stLXZpZXcvaWNvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0EsT0FBTyxFQUNMLFFBQVEsRUFDUixTQUFTLEVBQ1QsU0FBUyxFQUNULFVBQVUsRUFDVixLQUFLLEVBQ0wsYUFBYSxFQUNkLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQWtCckQ7SUFBQTtRQUtXLGNBQVMsR0FBWSxLQUFLLENBQUM7SUFHdEMsQ0FBQztJQVBVO1FBQVIsS0FBSyxFQUFFOzt3REFBbUI7SUFDbEI7UUFBUixLQUFLLEVBQUU7OzZEQUF3QjtJQUN2QjtRQUFSLEtBQUssRUFBRTs7eURBQXFCO0lBQ3BCO1FBQVIsS0FBSyxFQUFFOztvREFBZTtJQUNkO1FBQVIsS0FBSyxFQUFFOzt3REFBNEI7SUFDM0I7UUFBUixLQUFLLEVBQUU7O3lEQUFvQjtJQUNuQjtRQUFSLEtBQUssRUFBRTs7bURBQWM7SUFQWCxpQkFBaUI7UUFmN0IsU0FBUyxDQUFDO1lBQ1YsUUFBUSxFQUFFLG9CQUFvQjtZQUM3QixRQUFRLEVBQUUseVJBV1Q7U0FDRixDQUFDO09BQ1csaUJBQWlCLENBUTdCO0lBQUQsd0JBQUM7Q0FBQSxBQVJELElBUUM7U0FSWSxpQkFBaUI7QUFlOUI7SUFrQ0UsMkJBQXNCLFVBQXNCO1FBQXRCLGVBQVUsR0FBVixVQUFVLENBQVk7UUEzQm5DLGdCQUFXLEdBQVksS0FBSyxDQUFDO1FBRzVCLFVBQUssR0FBRztZQUVsQixJQUFJLEVBQUU7Z0JBQ0osUUFBUSxFQUFFLEVBQUMsWUFBWSxFQUFDLFlBQVksRUFBQyxVQUFVLEVBQUMsa0JBQWtCLEVBQUMsWUFBWSxFQUFDLEVBQUMsTUFBTSxFQUFDLEtBQUssRUFBQyxPQUFPLEVBQUMsRUFBQyxPQUFPLEVBQUMsNEJBQTRCLEVBQUMsU0FBUyxFQUFDLFdBQVcsRUFBQyxN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QUFlO0lBQ2Q7UUFBUixLQUFLLEVBQUU7OzBEQUE4QjtJQUM3QjtRQUFSLEtBQUssRUFBRTs7bURBQWM7SUFSWCxpQkFBaUI7UUFIN0IsU0FBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLG1CQUFtQjtTQUM5QixDQUFDO3lDQW1Da0MsVUFBVTtPQWxDakMsaUJBQWlCLENBc0Y3QjtJQUFELHdCQUFDO0NBQUEsQUF0RkQsSUFzRkM7U0F0RlksaUJBQWlCO0FBdUc5QjtJQUFBO0lBQTZCLENBQUM7SUFBakIsY0FBYztRQWQxQixRQUFRLENBQUM7WUFDUixZQUFZLEVBQUU7Z0JBRWQsaUJBQWlCO2dCQUNqQixpQkFBaUI7YUFFaEI7WUFDRCxPQUFPLEVBQUU7Z0JBRVQsaUJBQWlCO2dCQUNqQixpQkFBaUI7YUFFaEI7U0FDRixDQUFDO09BQ1csY0FBYyxDQUFHO0lBQUQscUJBQUM7Q0FBQSxBQUE5QixJQUE4QjtTQUFqQixjQUFjIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQge1xuICBOZ01vZHVsZSxcbiAgQ29tcG9uZW50LFxuICBEaXJlY3RpdmUsXG4gIEVsZW1lbnRSZWYsXG4gIElucHV0LFxuICBBZnRlclZpZXdJbml0XG59IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5pbXBvcnQgeyBnZXRBdHRyaWJ1dGVzIH0gZnJvbSBcIkBjYXJib24vaWNvbi1oZWxwZXJzXCI7XG5cblxuQENvbXBvbmVudCh7XG5cdHNlbGVjdG9yOiBcImlibS1pY29uLXRhc2stdmlld1wiLFxuICB0ZW1wbGF0ZTogYFxuICAgIDxzdmdcbiAgICAgIGlibUljb25UYXNrVmlld1xuICAgICAgW3NpemVdPVwic2l6ZVwiXG4gICAgICBbYXJpYUxhYmVsXT1cImFyaWFMYWJlbFwiXG4gICAgICBbYXJpYUxhYmVsbGVkYnldPVwiYXJpYUxhYmVsbGVkYnlcIlxuICAgICAgW2FyaWFIaWRkZW5dPVwiYXJpYUhpZGRlblwiXG4gICAgICBbdGl0bGVdPVwidGl0bGVcIlxuICAgICAgW2lzRm9jdXNhYmxlXT1cImZvY3VzYWJsZVwiXG4gICAgICBbYXR0ci5jbGFzc109XCJpbm5lckNsYXNzXCI+XG4gICAgPC9zdmc+XG4gIGBcbn0pXG5leHBvcnQgY2xhc3MgVGFza1ZpZXdDb21wb25lbnQge1xuICBASW5wdXQoKSBhcmlhTGFiZWw6IHN0cmluZztcbiAgQElucHV0KCkgYXJpYUxhYmVsbGVkYnk6IHN0cmluZztcbiAgQElucHV0KCkgYXJpYUhpZGRlbjogYm9vbGVhbjtcbiAgQElucHV0KCkgdGl0bGU6IHN0cmluZztcbiAgQElucHV0KCkgZm9jdXNhYmxlOiBib29sZWFuID0gZmFsc2U7XG4gIEBJbnB1dCgpIGlubmVyQ2xhc3M6IHN0cmluZztcbiAgQElucHV0KCkgc2l6ZTogc3RyaW5nO1xufVxuXG5cblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiBcIltpYm1JY29uVGFza1ZpZXddXCJcbn0pXG5leHBvcnQgY2xhc3MgVGFza1ZpZXdEaXJlY3RpdmUgaW1wbGVtZW50cyBBZnRlclZpZXdJbml0IHtcbiAgc3RhdGljIHRpdGxlSWRDb3VudGVyID0gMDtcblxuICBASW5wdXQoKSBhcmlhTGFiZWw6IHN0cmluZztcbiAgQElucHV0KCkgYXJpYUxhYmVsbGVkYnk6IHN0cmluZztcbiAgQElucHV0KCkgYXJpYUhpZGRlbjogYm9vbGVhbjtcbiAgQElucHV0KCkgdGl0bGU6IHN0cmluZztcbiAgQElucHV0KCkgaXNGb2N1c2FibGU6IGJvb2xlYW4gPSBmYWxzZTtcbiAgQElucHV0KCkgc2l6ZTogc3RyaW5nO1xuXG4gIHByb3RlY3RlZCBpY29ucyA9IHtcbiAgICBcbiAgXCIzMlwiOiB7XG4gICAgbWV0YWRhdGE6IHtcIm1vZHVsZU5hbWVcIjpcIlRhc2tWaWV3MzJcIixcImZpbGVwYXRoXCI6XCJ0YXNrLS12aWV3LzMyLmpzXCIsXCJkZXNjcmlwdG9yXCI6e1wiZWxlbVwiOlwic3ZnXCIsXCJhdHRyc1wiOntcInhtbG5zXCI6XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLFwidmlld0JveFwiOlwiMCAwIDMyIDMyXCIsXCJmaWxsXCI6XCJjdXJyZW50Q29sb3JcIixcIndpZHRoXCI6MzIsXCJoZWlnaHRcIjozMn0sXCJjb250ZW50XCI6W3tcImVsZW1cIjpcImNpcmNsZVwiLFwiYXR0cnNcIjp7XCJjeFwiOlwiMjJcIixcImN5XCI6XCIyNFwiLFwiclwiOlwiMlwifX0se1wiZWxlbVwiOlwicGF0aFwiLFwiYXR0cnNcIjp7XCJmaWxsXCI6XCJub25lXCIsXCJkXCI6XCJNMjIsMjhhNCw0LDAsMSwxLDQtNEE0LjAwMzksNC4wMDM5LDAsMCwxLDIyLDI4Wm0wLTZhMiwyLDAsMSwwLDIsMkEyLjAwMjcsMi4wMDI3LDAsMCwwLDIyLDIyWlwifX0se1wiZWxlbVwiOlwicGF0aFwiLFwiYXR0cnNcIjp7XCJkXCI6XCJNMjkuNzc2OSwyMy40Nzg1QTguNjQsOC42NCwwLDAsMCwyMiwxOGE4LjY0LDguNjQsMCwwLDAtNy43NzY5LDUuNDc4NUwxNCwyNGwuMjIzMS41MjE1QTguNjQsOC42NCwwLDAsMCwyMiwzMGE4LjY0LDguNjQsMCwwLDAsNy43NzY5LTUuNDc4NUwzMCwyNFpNMjIsMjhhNCw0LDAsMSwxLDQtNEE0LjAwNDUsNC4wMDQ1LDAsMCwxLDIyLDI4WlwifX0se1wiZWxlbVwiOlwicGF0aFwiLFwiYXR0cnNcIjp7XCJkXCI6XCJNMTIsMjhIN1Y3aDN2M0gyMlY3aDN2OWgyVjdhMiwyLDAsMCwwLTItMkgyMlY0YTIsMiwwLDAsMC0yLTJIMTJhMiwyLDAsMCwwLTIsMlY1SDdBMiwyLDAsMCwwLDUsN1YyOGEyLDIsMCwwLDAsMiwyaDVaTTEyLDRoOFY4SDEyWlwifX1dLFwibmFtZVwiOlwidGFzay0tdmlld1wiLFwic2l6ZVwiOjMyfSxcInNpemVcIjozMn0sXG4gICAgc3ZnOiBgPHN2ZyBmb2N1c2FibGU9XCJmYWxzZVwiIHByZXNlcnZlQXNwZWN0UmF0aW89XCJ4TWlkWU1pZCBtZWV0XCIgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIGZpbGw9XCJjdXJyZW50Q29sb3JcIiB3aWR0aD1cIjMyXCIgaGVpZ2h0PVwiMzJcIiB2aWV3Qm94PVwiMCAwIDMyIDMyXCIgYXJpYS1oaWRkZW49XCJ0cnVlXCI+PGNpcmNsZSBjeD1cIjIyXCIgY3k9XCIyNFwiIHI9XCIyXCI+PC9jaXJjbGU+PHBhdGggZmlsbD1cIm5vbmVcIiBkPVwiTTIyLDI4YTQsNCwwLDEsMSw0LTRBNC4wMDM5LDQuMDAzOSwwLDAsMSwyMiwyOFptMC02YTIsMiwwLDEsMCwyLDJBMi4wMDI3LDIuMDAyNywwLDAsMCwyMiwyMlpcIj48L3BhdGg+PHBhdGggZD1cIk0yOS43NzY5LDIzLjQ3ODVBOC42NCw4LjY0LDAsMCwwLDIyLDE4YTguNjQsOC42NCwwLDAsMC03Ljc3NjksNS40Nzg1TDE0LDI0bC4yMjMxLjUyMTVBOC42NCw4LjY0LDAsMCwwLDIyLDMwYTguNjQsOC42NCwwLDAsMCw3Ljc3NjktNS40Nzg1TDMwLDI0Wk0yMiwyOGE0LDQsMCwxLDEsNC00QTQuMDA0NSw0LjAwNDUsMCwwLDEsMjIsMjhaXCI+PC9wYXRoPjxwYXRoIGQ9XCJNMTIsMjhIN1Y3aDN2M0gyMlY3aDN2OWgyVjdhMiwyLDAsMCwwLTItMkgyMlY0YTIsMiwwLDAsMC0yLTJIMTJhMiwyLDAsMCwwLTIsMlY1SDdBMiwyLDAsMCwwLDUsN1YyOGEyLDIsMCwwLDAsMiwyaDVaTTEyLDRoOFY4SDEyWlwiPjwvcGF0aD48L3N2Zz5gXG4gIH0sXG5cbiAgXCIyNFwiOiB7XG4gICAgbWV0YWRhdGE6IHtcIm1vZHVsZU5hbWVcIjpcIlRhc2tWaWV3MjRcIixcImZpbGVwYXRoXCI6XCJ0YXNrLS12aWV3LzI0LmpzXCIsXCJkZXNjcmlwdG9yXCI6e1wiZWxlbVwiOlwic3ZnXCIsXCJhdHRyc1wiOntcInhtbG5zXCI6XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLFwidmlld0JveFwiOlwiMCAwIDMyIDMyXCIsXCJmaWxsXCI6XCJjdXJyZW50Q29sb3JcIixcIndpZHRoXCI6MjQsXCJoZWlnaHRcIjoyNH0sXCJjb250ZW50XCI6W3tcImVsZW1cIjpcImNpcmNsZVwiLFwiYXR0cnNcIjp7XCJjeFwiOlwiMjJcIixcImN5XCI6XCIyNFwiLFwiclwiOlwiMlwifX0se1wiZWxlbVwiOlwicGF0aFwiLFwiYXR0cnNcIjp7XCJmaWxsXCI6XCJub25lXCIsXCJkXCI6XCJNMjIsMjhhNCw0LDAsMSwxLDQtNEE0LjAwMzksNC4wMDM5LDAsMCwxLDIyLDI4Wm0wLTZhMiwyLDAsMSwwLDIsMkEyLjAwMjcsMi4wMDI3LDAsMCwwLDIyLDIyWlwifX0se1wiZWxlbVwiOlwicGF0aFwiLFwiYXR0cnNcIjp7XCJkXCI6XCJNMjkuNzc2OSwyMy40Nzg1QTguNjQsOC42NCwwLDAsMCwyMiwxOGE4LjY0LDguNjQsMCwwLDAtNy43NzY5LDUuNDc4NUwxNCwyNGwuMjIzMS41MjE1QTguNjQsOC42NCwwLDAsMCwyMiwzMGE4LjY0LDguNjQsMCwwLDAsNy43NzY5LTUuNDc4NUwzMCwyNFpNMjIsMjhhNCw0LDAsMSwxLDQtNEE0LjAwNDUsNC4wMDQ1LDAsMCwxLDIyLDI4WlwifX0se1wiZWxlbVwiOlwicGF0aFwiLFwiYXR0cnNcIjp7XCJkXCI6XCJNMTIsMjhIN1Y3aDN2M0gyMlY3aDN2OWgyVjdhMiwyLDAsMCwwLTItMkgyMlY0YTIsMiwwLDAsMC0yLTJIMTJhMiwyLDAsMCwwLTIsMlY1SDdBMiwyLDAsMCwwLDUsN1YyOGEyLDIsMCwwLDAsMiwyaDVaTTEyLDRoOFY4SDEyWlwifX1dLFwibmFtZVwiOlwidGFzay0tdmlld1wiLFwic2l6ZVwiOjI0fSxcInNpemVcIjoyNH0sXG4gICAgc3ZnOiBgPHN2ZyBmb2N1c2FibGU9XCJmYWxzZVwiIHByZXNlcnZlQXNwZWN0UmF0aW89XCJ4TWlkWU1pZCBtZWV0XCIgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIGZpbGw9XCJjdXJyZW50Q29sb3JcIiB3aWR0aD1cIjI0XCIgaGVpZ2h0PVwiMjRcIiB2aWV3Qm94PVwiMCAwIDMyIDMyXCIgYXJpYS1oaWRkZW49XCJ0cnVlXCI+PGNpcmNsZSBjeD1cIjIyXCIgY3k9XCIyNFwiIHI9XCIyXCI+PC9jaXJjbGU+PHBhdGggZmlsbD1cIm5vbmVcIiBkPVwiTTIyLDI4YTQsNCwwLDEsMSw0LTRBNC4wMDM5LDQuMDAzOSwwLDAsMSwyMiwyOFptMC02YTIsMiwwLDEsMCwyLDJBMi4wMDI3LDIuMDAyNywwLDAsMCwyMiwyMlpcIj48L3BhdGg+PHBhdGggZD1cIk0yOS43NzY5LDIzLjQ3ODVBOC42NCw4LjY0LDAsMCwwLDIyLDE4YTguNjQsOC42NCwwLDAsMC03Ljc3NjksNS40Nzg1TDE0LDI0bC4yMjMxLjUyMTVBOC42NCw4LjY0LDAsMCwwLDIyLDMwYTguNjQsOC42NCwwLDAsMCw3Ljc3NjktNS40Nzg1TDMwLDI0Wk0yMiwyOGE0LDQsMCwxLDEsNC00QTQuMDA0NSw0LjAwNDUsMCwwLDEsMjIsMjhaXCI+PC9wYXRoPjxwYXRoIGQ9XCJNMTIsMjhIN1Y3aDN2M0gyMlY3aDN2OWgyVjdhMiwyLDAsMCwwLTItMkgyMlY0YTIsMiwwLDAsMC0yLTJIMTJhMiwyLDAsMCwwLTIsMlY1SDdBMiwyLDAsMCwwLDUsN1YyOGEyLDIsMCwwLDAsMiwyaDVaTTEyLDRoOFY4SDEyWlwiPjwvcGF0aD48L3N2Zz5gXG4gIH0sXG5cbiAgXCIyMFwiOiB7XG4gICAgbWV0YWRhdGE6IHtcIm1vZHVsZU5hbWVcIjpcIlRhc2tWaWV3MjBcIixcImZpbGVwYXRoXCI6XCJ0YXNrLS12aWV3LzIwLmpzXCIsXCJkZXNjcmlwdG9yXCI6e1wiZWxlbVwiOlwic3ZnXCIsXCJhdHRyc1wiOntcInhtbG5zXCI6XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLFwidmlld0JveFwiOlwiMCAwIDMyIDMyXCIsXCJmaWxsXCI6XCJjdXJyZW50Q29sb3JcIixcIndpZHRoXCI6MjAsXCJoZWlnaHRcIjoyMH0sXCJjb250ZW50XCI6W3tcImVsZW1cIjpcImNpcmNsZVwiLFwiYXR0cnNcIjp7XCJjeFwiOlwiMjJcIixcImN5XCI6XCIyNFwiLFwiclwiOlwiMlwifX0se1wiZWxlbVwiOlwicGF0aFwiLFwiYXR0cnNcIjp7XCJmaWxsXCI6XCJub25lXCIsXCJkXCI6XCJNMjIsMjhhNCw0LDAsMSwxLDQtNEE0LjAwMzksNC4wMDM5LDAsMCwxLDIyLDI4Wm0wLTZhMiwyLDAsMSwwLDIsMkEyLjAwMjcsMi4wMDI3LDAsMCwwLDIyLDIyWlwifX0se1wiZWxlbVwiOlwicGF0aFwiLFwiYXR0cnNcIjp7XCJkXCI6XCJNMjkuNzc2OSwyMy40Nzg1QTguNjQsOC42NCwwLDAsMCwyMiwxOGE4LjY0LDguNjQsMCwwLDAtNy43NzY5LDUuNDc4NUwxNCwyNGwuMjIzMS41MjE1QTguNjQsOC42NCwwLDAsMCwyMiwzMGE4LjY0LDguNjQsMCwwLDAsNy43NzY5LTUuNDc4NUwzMCwyNFpNMjIsMjhhNCw0LDAsMSwxLDQtNEE0LjAwNDUsNC4wMDQ1LDAsMCwxLDIyLDI4WlwifX0se1wiZWxlbVwiOlwicGF0aFwiLFwiYXR0cnNcIjp7XCJkXCI6XCJNMTIsMjhIN1Y3aDN2M0gyMlY3aDN2OWgyVjdhMiwyLDAsMCwwLTItMkgyMlY0YTIsMiwwLDAsMC0yLTJIMTJhMiwyLDAsMCwwLTIsMlY1SDdBMiwyLDAsMCwwLDUsN1YyOGEyLDIsMCwwLDAsMiwyaDVaTTEyLDRoOFY4SDEyWlwifX1dLFwibmFtZVwiOlwidGFzay0tdmlld1wiLFwic2l6ZVwiOjIwfSxcInNpemVcIjoyMH0sXG4gICAgc3ZnOiBgPHN2ZyBmb2N1c2FibGU9XCJmYWxzZVwiIHByZXNlcnZlQXNwZWN0UmF0aW89XCJ4TWlkWU1pZCBtZWV0XCIgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIGZpbGw9XCJjdXJyZW50Q29sb3JcIiB3aWR0aD1cIjIwXCIgaGVpZ2h0PVwiMjBcIiB2aWV3Qm94PVwiMCAwIDMyIDMyXCIgYXJpYS1oaWRkZW49XCJ0cnVlXCI+PGNpcmNsZSBjeD1cIjIyXCIgY3k9XCIyNFwiIHI9XCIyXCI+PC9jaXJjbGU+PHBhdGggZmlsbD1cIm5vbmVcIiBkPVwiTTIyLDI4YTQsNCwwLDEsMSw0LTRBNC4wMDM5LDQuMDAzOSwwLDAsMSwyMiwyOFptMC02YTIsMiwwLDEsMCwyLDJBMi4wMDI3LDIuMDAyNywwLDAsMCwyMiwyMlpcIj48L3BhdGg+PHBhdGggZD1cIk0yOS43NzY5LDIzLjQ3ODVBOC42NCw4LjY0LDAsMCwwLDIyLDE4YTguNjQsOC42NCwwLDAsMC03Ljc3NjksNS40Nzg1TDE0LDI0bC4yMjMxLjUyMTVBOC42NCw4LjY0LDAsMCwwLDIyLDMwYTguNjQsOC42NCwwLDAsMCw3Ljc3NjktNS40Nzg1TDMwLDI0Wk0yMiwyOGE0LDQsMCwxLDEsNC00QTQuMDA0NSw0LjAwNDUsMCwwLDEsMjIsMjhaXCI+PC9wYXRoPjxwYXRoIGQ9XCJNMTIsMjhIN1Y3aDN2M0gyMlY3aDN2OWgyVjdhMiwyLDAsMCwwLTItMkgyMlY0YTIsMiwwLDAsMC0yLTJIMTJhMiwyLDAsMCwwLTIsMlY1SDdBMiwyLDAsMCwwLDUsN1YyOGEyLDIsMCwwLDAsMiwyaDVaTTEyLDRoOFY4SDEyWlwiPjwvcGF0aD48L3N2Zz5gXG4gIH0sXG5cbiAgXCIxNlwiOiB7XG4gICAgbWV0YWRhdGE6IHtcIm1vZHVsZU5hbWVcIjpcIlRhc2tWaWV3MTZcIixcImZpbGVwYXRoXCI6XCJ0YXNrLS12aWV3LzE2LmpzXCIsXCJkZXNjcmlwdG9yXCI6e1wiZWxlbVwiOlwic3ZnXCIsXCJhdHRyc1wiOntcInhtbG5zXCI6XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLFwidmlld0JveFwiOlwiMCAwIDMyIDMyXCIsXCJmaWxsXCI6XCJjdXJyZW50Q29sb3JcIixcIndpZHRoXCI6MTYsXCJoZWlnaHRcIjoxNn0sXCJjb250ZW50XCI6W3tcImVsZW1cIjpcImNpcmNsZVwiLFwiYXR0cnNcIjp7XCJjeFwiOlwiMjJcIixcImN5XCI6XCIyNFwiLFwiclwiOlwiMlwifX0se1wiZWxlbVwiOlwicGF0aFwiLFwiYXR0cnNcIjp7XCJmaWxsXCI6XCJub25lXCIsXCJkXCI6XCJNMjIsMjhhNCw0LDAsMSwxLDQtNEE0LjAwMzksNC4wMDM5LDAsMCwxLDIyLDI4Wm0wLTZhMiwyLDAsMSwwLDIsMkEyLjAwMjcsMi4wMDI3LDAsMCwwLDIyLDIyWlwifX0se1wiZWxlbVwiOlwicGF0aFwiLFwiYXR0cnNcIjp7XCJkXCI6XCJNMjkuNzc2OSwyMy40Nzg1QTguNjQsOC42NCwwLDAsMCwyMiwxOGE4LjY0LDguNjQsMCwwLDAtNy43NzY5LDUuNDc4NUwxNCwyNGwuMjIzMS41MjE1QTguNjQsOC42NCwwLDAsMCwyMiwzMGE4LjY0LDguNjQsMCwwLDAsNy43NzY5LTUuNDc4NUwzMCwyNFpNMjIsMjhhNCw0LDAsMSwxLDQtNEE0LjAwNDUsNC4wMDQ1LDAsMCwxLDIyLDI4WlwifX0se1wiZWxlbVwiOlwicGF0aFwiLFwiYXR0cnNcIjp7XCJkXCI6XCJNMTIsMjhIN1Y3aDN2M0gyMlY3aDN2OWgyVjdhMiwyLDAsMCwwLTItMkgyMlY0YTIsMiwwLDAsMC0yLTJIMTJhMiwyLDAsMCwwLTIsMlY1SDdBMiwyLDAsMCwwLDUsN1YyOGEyLDIsMCwwLDAsMiwyaDVaTTEyLDRoOFY4SDEyWlwifX1dLFwibmFtZVwiOlwidGFzay0tdmlld1wiLFwic2l6ZVwiOjE2fSxcInNpemVcIjoxNn0sXG4gICAgc3ZnOiBgPHN2ZyBmb2N1c2FibGU9XCJmYWxzZVwiIHByZXNlcnZlQXNwZWN0UmF0aW89XCJ4TWlkWU1pZCBtZWV0XCIgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIGZpbGw9XCJjdXJyZW50Q29sb3JcIiB3aWR0aD1cIjE2XCIgaGVpZ2h0PVwiMTZcIiB2aWV3Qm94PVwiMCAwIDMyIDMyXCIgYXJpYS1oaWRkZW49XCJ0cnVlXCI+PGNpcmNsZSBjeD1cIjIyXCIgY3k9XCIyNFwiIHI9XCIyXCI+PC9jaXJjbGU+PHBhdGggZmlsbD1cIm5vbmVcIiBkPVwiTTIyLDI4YTQsNCwwLDEsMSw0LTRBNC4wMDM5LDQuMDAzOSwwLDAsMSwyMiwyOFptMC02YTIsMiwwLDEsMCwyLDJBMi4wMDI3LDIuMDAyNywwLDAsMCwyMiwyMlpcIj48L3BhdGg+PHBhdGggZD1cIk0yOS43NzY5LDIzLjQ3ODVBOC42NCw4LjY0LDAsMCwwLDIyLDE4YTguNjQsOC42NCwwLDAsMC03Ljc3NjksNS40Nzg1TDE0LDI0bC4yMjMxLjUyMTVBOC42NCw4LjY0LDAsMCwwLDIyLDMwYTguNjQsOC42NCwwLDAsMCw3Ljc3NjktNS40Nzg1TDMwLDI0Wk0yMiwyOGE0LDQsMCwxLDEsNC00QTQuMDA0NSw0LjAwNDUsMCwwLDEsMjIsMjhaXCI+PC9wYXRoPjxwYXRoIGQ9XCJNMTIsMjhIN1Y3aDN2M0gyMlY3aDN2OWgyVjdhMiwyLDAsMCwwLTItMkgyMlY0YTIsMiwwLDAsMC0yLTJIMTJhMiwyLDAsMCwwLTIsMlY1SDdBMiwyLDAsMCwwLDUsN1YyOGEyLDIsMCwwLDAsMiwyaDVaTTEyLDRoOFY4SDEyWlwiPjwvcGF0aD48L3N2Zz5gXG4gIH0sXG5cbiAgfTtcblxuICBjb25zdHJ1Y3Rvcihwcm90ZWN0ZWQgZWxlbWVudFJlZjogRWxlbWVudFJlZikge31cblxuXHRuZ0FmdGVyVmlld0luaXQoKSB7XG4gICAgY29uc3Qgc3ZnID0gdGhpcy5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQ7XG4gICAgc3ZnLnNldEF0dHJpYnV0ZShcInhtbG5zXCIsIFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIik7XG5cbiAgICBjb25zdCBpY29uID0gdGhpcy5pY29uc1t0aGlzLnNpemVdXG5cbiAgICBjb25zdCBkb21QYXJzZXIgPSBuZXcgRE9NUGFyc2VyKCk7XG4gICAgY29uc3QgcmF3U1ZHID0gaWNvbi5zdmc7XG4gICAgY29uc3Qgc3ZnRWxlbWVudCA9IGRvbVBhcnNlci5wYXJzZUZyb21TdHJpbmcocmF3U1ZHLCBcImltYWdlL3N2Zyt4bWxcIikuZG9jdW1lbnRFbGVtZW50O1xuXG4gICAgbGV0IG5vZGUgPSBzdmdFbGVtZW50LmZpcnN0Q2hpbGQ7XG4gICAgd2hpbGUgKG5vZGUpIHtcbiAgICAgIC8vIGltcG9ydE5vZGUgbWFrZXMgYSBjbG9uZSBvZiB0aGUgbm9kZVxuICAgICAgLy8gdGhpcyBlbnN1cmVzIHdlIGtlZXAgbG9vcGluZyBvdmVyIHRoZSBub2RlcyBpbiB0aGUgcGFyc2VkIGRvY3VtZW50XG4gICAgICBzdmcuYXBwZW5kQ2hpbGQoc3ZnLm93bmVyRG9jdW1lbnQuaW1wb3J0Tm9kZShub2RlLCB0cnVlKSk7XG4gICAgICBub2RlID0gbm9kZS5uZXh0U2libGluZztcbiAgICB9XG5cbiAgICBjb25zdCBhdHRyaWJ1dGVzID0gZ2V0QXR0cmlidXRlcyh7XG4gICAgICB3aWR0aDogaWNvbi5tZXRhZGF0YS5kZXNjcmlwdG9yLmF0dHJzLmhlaWdodCxcbiAgICAgIGhlaWdodDogaWNvbi5tZXRhZGF0YS5kZXNjcmlwdG9yLmF0dHJzLmhlaWdodCxcbiAgICAgIHZpZXdCb3g6IGljb24ubWV0YWRhdGEuZGVzY3JpcHRvci5hdHRycy52aWV3Qm94LFxuICAgICAgdGl0bGU6IHRoaXMudGl0bGUsXG4gICAgICBcImFyaWEtbGFiZWxcIjogdGhpcy5hcmlhTGFiZWwsXG4gICAgICBcImFyaWEtbGFiZWxsZWRieVwiOiB0aGlzLmFyaWFMYWJlbGxlZGJ5LFxuICAgICAgXCJhcmlhLWhpZGRlblwiOiB0aGlzLmFyaWFIaWRkZW4sXG4gICAgICBmb2N1c2FibGU6IHRoaXMuaXNGb2N1c2FibGUudG9TdHJpbmcoKVxuICAgIH0pO1xuXG4gICAgY29uc3QgYXR0cktleXMgPSBPYmplY3Qua2V5cyhhdHRyaWJ1dGVzKTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGF0dHJLZXlzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBjb25zdCBrZXkgPSBhdHRyS2V5c1tpXTtcbiAgICAgIGNvbnN0IHZhbHVlID0gYXR0cmlidXRlc1trZXldO1xuICAgICAgaWYgKGtleSA9PT0gXCJ0aXRsZVwiKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuICAgICAgaWYgKHZhbHVlKSB7XG4gICAgICAgIHN2Zy5zZXRBdHRyaWJ1dGUoa2V5LCB2YWx1ZSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKGF0dHJpYnV0ZXMudGl0bGUpIHtcbiAgICAgIGNvbnN0IHRpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInRpdGxlXCIpO1xuICAgICAgdGl0bGUudGV4dENvbnRlbnQgPSBhdHRyaWJ1dGVzLnRpdGxlO1xuICAgICAgVGFza1ZpZXdEaXJlY3RpdmUudGl0bGVJZENvdW50ZXIrKztcbiAgICAgIHRpdGxlLnNldEF0dHJpYnV0ZShcImlkXCIsIGB0YXNrLXZpZXctJHtUYXNrVmlld0RpcmVjdGl2ZS50aXRsZUlkQ291bnRlcn1gKTtcbiAgICAgIHN2Zy5hcHBlbmRDaGlsZCh0aXRsZSk7XG4gICAgICBzdmcuc2V0QXR0cmlidXRlKFwiYXJpYS1sYWJlbGxlZGJ5XCIsIGB0YXNrLXZpZXctJHtUYXNrVmlld0RpcmVjdGl2ZS50aXRsZUlkQ291bnRlcn1gKTtcbiAgICB9XG5cdH1cbn1cblxuXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtcbiAgICBcbiAgVGFza1ZpZXdDb21wb25lbnQsXG4gIFRhc2tWaWV3RGlyZWN0aXZlLFxuXG4gIF0sXG4gIGV4cG9ydHM6IFtcbiAgICBcbiAgVGFza1ZpZXdDb21wb25lbnQsXG4gIFRhc2tWaWV3RGlyZWN0aXZlLFxuXG4gIF1cbn0pXG5leHBvcnQgY2xhc3MgVGFza1ZpZXdNb2R1bGUge31cbiJdfQ==