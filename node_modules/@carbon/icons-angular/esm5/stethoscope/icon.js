import { __decorate, __metadata } from "tslib";
import { NgModule, Component, Directive, ElementRef, Input, AfterViewInit } from "@angular/core";
import { getAttributes } from "@carbon/icon-helpers";
var StethoscopeComponent = /** @class */ (function () {
    function StethoscopeComponent() {
        this.focusable = false;
    }
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], StethoscopeComponent.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], StethoscopeComponent.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], StethoscopeComponent.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], StethoscopeComponent.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], StethoscopeComponent.prototype, "focusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], StethoscopeComponent.prototype, "innerClass", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], StethoscopeComponent.prototype, "size", void 0);
    StethoscopeComponent = __decorate([
        Component({
            selector: "ibm-icon-stethoscope",
            template: "\n    <svg\n      ibmIconStethoscope\n      [size]=\"size\"\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
        })
    ], StethoscopeComponent);
    return StethoscopeComponent;
}());
export { StethoscopeComponent };
var StethoscopeDirective = /** @class */ (function () {
    function StethoscopeDirective(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
        this.icons = {
            "32": {
                metadata: { "moduleName": "Stethoscope32", "filepath": "stethoscope/32.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 32, "height": 32 }, "content": [{ "elem": "path", "attrs": { "d": "M24,2V4h2v6a4,4,0,0,1-8,0V4h2V2H16v8a6.0051,6.0051,0,0,0,5,5.91V22A6,6,0,0,1,9,22V15.8579a4,4,0,1,0-2,0V22a8,8,0,0,0,16,0V15.91A6.0051,6.0051,0,0,0,28,10V2ZM6,12a2,2,0,1,1,2,2A2.0023,2.0023,0,0,1,6,12Z" } }], "name": "stethoscope", "size": 32 }, "size": 32 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M24,2V4h2v6a4,4,0,0,1-8,0V4h2V2H16v8a6.0051,6.0051,0,0,0,5,5.91V22A6,6,0,0,1,9,22V15.8579a4,4,0,1,0-2,0V22a8,8,0,0,0,16,0V15.91A6.0051,6.0051,0,0,0,28,10V2ZM6,12a2,2,0,1,1,2,2A2.0023,2.0023,0,0,1,6,12Z\"></path></svg>"
            },
            "24": {
                metadata: { "moduleName": "Stethoscope24", "filepath": "stethoscope/24.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 24, "height": 24 }, "content": [{ "elem": "path", "attrs": { "d": "M24,2V4h2v6a4,4,0,0,1-8,0V4h2V2H16v8a6.0051,6.0051,0,0,0,5,5.91V22A6,6,0,0,1,9,22V15.8579a4,4,0,1,0-2,0V22a8,8,0,0,0,16,0V15.91A6.0051,6.0051,0,0,0,28,10V2ZM6,12a2,2,0,1,1,2,2A2.0023,2.0023,0,0,1,6,12Z" } }], "name": "stethoscope", "size": 24 }, "size": 24 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M24,2V4h2v6a4,4,0,0,1-8,0V4h2V2H16v8a6.0051,6.0051,0,0,0,5,5.91V22A6,6,0,0,1,9,22V15.8579a4,4,0,1,0-2,0V22a8,8,0,0,0,16,0V15.91A6.0051,6.0051,0,0,0,28,10V2ZM6,12a2,2,0,1,1,2,2A2.0023,2.0023,0,0,1,6,12Z\"></path></svg>"
            },
            "20": {
                metadata: { "moduleName": "Stethoscope20", "filepath": "stethoscope/20.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 20, "height": 20 }, "content": [{ "elem": "path", "attrs": { "d": "M24,2V4h2v6a4,4,0,0,1-8,0V4h2V2H16v8a6.0051,6.0051,0,0,0,5,5.91V22A6,6,0,0,1,9,22V15.8579a4,4,0,1,0-2,0V22a8,8,0,0,0,16,0V15.91A6.0051,6.0051,0,0,0,28,10V2ZM6,12a2,2,0,1,1,2,2A2.0023,2.0023,0,0,1,6,12Z" } }], "name": "stethoscope", "size": 20 }, "size": 20 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M24,2V4h2v6a4,4,0,0,1-8,0V4h2V2H16v8a6.0051,6.0051,0,0,0,5,5.91V22A6,6,0,0,1,9,22V15.8579a4,4,0,1,0-2,0V22a8,8,0,0,0,16,0V15.91A6.0051,6.0051,0,0,0,28,10V2ZM6,12a2,2,0,1,1,2,2A2.0023,2.0023,0,0,1,6,12Z\"></path></svg>"
            },
            "16": {
                metadata: { "moduleName": "Stethoscope16", "filepath": "stethoscope/16.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 16, "height": 16 }, "content": [{ "elem": "path", "attrs": { "d": "M24,2V4h2v6a4,4,0,0,1-8,0V4h2V2H16v8a6.0051,6.0051,0,0,0,5,5.91V22A6,6,0,0,1,9,22V15.8579a4,4,0,1,0-2,0V22a8,8,0,0,0,16,0V15.91A6.0051,6.0051,0,0,0,28,10V2ZM6,12a2,2,0,1,1,2,2A2.0023,2.0023,0,0,1,6,12Z" } }], "name": "stethoscope", "size": 16 }, "size": 16 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"16\" height=\"16\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M24,2V4h2v6a4,4,0,0,1-8,0V4h2V2H16v8a6.0051,6.0051,0,0,0,5,5.91V22A6,6,0,0,1,9,22V15.8579a4,4,0,1,0-2,0V22a8,8,0,0,0,16,0V15.91A6.0051,6.0051,0,0,0,28,10V2ZM6,12a2,2,0,1,1,2,2A2.0023,2.0023,0,0,1,6,12Z\"></path></svg>"
            },
        };
    }
    StethoscopeDirective_1 = StethoscopeDirective;
    StethoscopeDirective.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var icon = this.icons[this.size];
        var domParser = new DOMParser();
        var rawSVG = icon.svg;
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: icon.metadata.descriptor.attrs.height,
            height: icon.metadata.descriptor.attrs.height,
            viewBox: icon.metadata.descriptor.attrs.viewBox,
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            StethoscopeDirective_1.titleIdCounter++;
            title.setAttribute("id", "stethoscope-" + StethoscopeDirective_1.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "stethoscope-" + StethoscopeDirective_1.titleIdCounter);
        }
    };
    var StethoscopeDirective_1;
    StethoscopeDirective.titleIdCounter = 0;
    StethoscopeDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], StethoscopeDirective.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], StethoscopeDirective.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], StethoscopeDirective.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], StethoscopeDirective.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], StethoscopeDirective.prototype, "isFocusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], StethoscopeDirective.prototype, "size", void 0);
    StethoscopeDirective = StethoscopeDirective_1 = __decorate([
        Directive({
            selector: "[ibmIconStethoscope]"
        }),
        __metadata("design:paramtypes", [ElementRef])
    ], StethoscopeDirective);
    return StethoscopeDirective;
}());
export { StethoscopeDirective };
var StethoscopeModule = /** @class */ (function () {
    function StethoscopeModule() {
    }
    StethoscopeModule = __decorate([
        NgModule({
            declarations: [
                StethoscopeComponent,
                StethoscopeDirective,
            ],
            exports: [
                StethoscopeComponent,
                StethoscopeDirective,
            ]
        })
    ], StethoscopeModule);
    return StethoscopeModule;
}());
export { StethoscopeModule };
//# sourceMappingURL=data:application/json;base64,