import { __decorate, __metadata } from "tslib";
import { NgModule, Component, Directive, ElementRef, Input, AfterViewInit } from "@angular/core";
import { getAttributes } from "@carbon/icon-helpers";
var DewPointFilledComponent = /** @class */ (function () {
    function DewPointFilledComponent() {
        this.focusable = false;
    }
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], DewPointFilledComponent.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], DewPointFilledComponent.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], DewPointFilledComponent.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], DewPointFilledComponent.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], DewPointFilledComponent.prototype, "focusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], DewPointFilledComponent.prototype, "innerClass", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], DewPointFilledComponent.prototype, "size", void 0);
    DewPointFilledComponent = __decorate([
        Component({
            selector: "ibm-icon-dew-point-filled",
            template: "\n    <svg\n      ibmIconDewPointFilled\n      [size]=\"size\"\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
        })
    ], DewPointFilledComponent);
    return DewPointFilledComponent;
}());
export { DewPointFilledComponent };
var DewPointFilledDirective = /** @class */ (function () {
    function DewPointFilledDirective(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
        this.icons = {
            "32": {
                metadata: { "moduleName": "DewPointFilled32", "filepath": "dew-point--filled/32.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 32, "height": 32 }, "content": [{ "elem": "path", "attrs": { "d": "M24 10a4 4 0 114-4A4.0045 4.0045 0 0124 10zm0-6a2 2 0 102 2A2.0021 2.0021 0 0024 4zM14.5 30A5.4962 5.4962 0 019 24.52c0-3.4426 4.3442-21.0141 4.5293-21.76a1 1 0 011.9414 0C15.6558 3.5059 20 21.0774 20 24.52A5.4962 5.4962 0 0114.5 30z" } }], "name": "dew-point--filled", "size": 32 }, "size": 32 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M24 10a4 4 0 114-4A4.0045 4.0045 0 0124 10zm0-6a2 2 0 102 2A2.0021 2.0021 0 0024 4zM14.5 30A5.4962 5.4962 0 019 24.52c0-3.4426 4.3442-21.0141 4.5293-21.76a1 1 0 011.9414 0C15.6558 3.5059 20 21.0774 20 24.52A5.4962 5.4962 0 0114.5 30z\"></path></svg>"
            },
            "24": {
                metadata: { "moduleName": "DewPointFilled24", "filepath": "dew-point--filled/24.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 24, "height": 24 }, "content": [{ "elem": "path", "attrs": { "d": "M24 10a4 4 0 114-4A4.0045 4.0045 0 0124 10zm0-6a2 2 0 102 2A2.0021 2.0021 0 0024 4zM14.5 30A5.4962 5.4962 0 019 24.52c0-3.4426 4.3442-21.0141 4.5293-21.76a1 1 0 011.9414 0C15.6558 3.5059 20 21.0774 20 24.52A5.4962 5.4962 0 0114.5 30z" } }], "name": "dew-point--filled", "size": 24 }, "size": 24 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M24 10a4 4 0 114-4A4.0045 4.0045 0 0124 10zm0-6a2 2 0 102 2A2.0021 2.0021 0 0024 4zM14.5 30A5.4962 5.4962 0 019 24.52c0-3.4426 4.3442-21.0141 4.5293-21.76a1 1 0 011.9414 0C15.6558 3.5059 20 21.0774 20 24.52A5.4962 5.4962 0 0114.5 30z\"></path></svg>"
            },
            "20": {
                metadata: { "moduleName": "DewPointFilled20", "filepath": "dew-point--filled/20.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 20, "height": 20 }, "content": [{ "elem": "path", "attrs": { "d": "M24 10a4 4 0 114-4A4.0045 4.0045 0 0124 10zm0-6a2 2 0 102 2A2.0021 2.0021 0 0024 4zM14.5 30A5.4962 5.4962 0 019 24.52c0-3.4426 4.3442-21.0141 4.5293-21.76a1 1 0 011.9414 0C15.6558 3.5059 20 21.0774 20 24.52A5.4962 5.4962 0 0114.5 30z" } }], "name": "dew-point--filled", "size": 20 }, "size": 20 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M24 10a4 4 0 114-4A4.0045 4.0045 0 0124 10zm0-6a2 2 0 102 2A2.0021 2.0021 0 0024 4zM14.5 30A5.4962 5.4962 0 019 24.52c0-3.4426 4.3442-21.0141 4.5293-21.76a1 1 0 011.9414 0C15.6558 3.5059 20 21.0774 20 24.52A5.4962 5.4962 0 0114.5 30z\"></path></svg>"
            },
            "16": {
                metadata: { "moduleName": "DewPointFilled16", "filepath": "dew-point--filled/16.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 16, "height": 16 }, "content": [{ "elem": "path", "attrs": { "d": "M24 10a4 4 0 114-4A4.0045 4.0045 0 0124 10zm0-6a2 2 0 102 2A2.0021 2.0021 0 0024 4zM14.5 30A5.4962 5.4962 0 019 24.52c0-3.4426 4.3442-21.0141 4.5293-21.76a1 1 0 011.9414 0C15.6558 3.5059 20 21.0774 20 24.52A5.4962 5.4962 0 0114.5 30z" } }], "name": "dew-point--filled", "size": 16 }, "size": 16 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"16\" height=\"16\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M24 10a4 4 0 114-4A4.0045 4.0045 0 0124 10zm0-6a2 2 0 102 2A2.0021 2.0021 0 0024 4zM14.5 30A5.4962 5.4962 0 019 24.52c0-3.4426 4.3442-21.0141 4.5293-21.76a1 1 0 011.9414 0C15.6558 3.5059 20 21.0774 20 24.52A5.4962 5.4962 0 0114.5 30z\"></path></svg>"
            },
        };
    }
    DewPointFilledDirective_1 = DewPointFilledDirective;
    DewPointFilledDirective.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var icon = this.icons[this.size];
        var domParser = new DOMParser();
        var rawSVG = icon.svg;
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: icon.metadata.descriptor.attrs.height,
            height: icon.metadata.descriptor.attrs.height,
            viewBox: icon.metadata.descriptor.attrs.viewBox,
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            DewPointFilledDirective_1.titleIdCounter++;
            title.setAttribute("id", "dew-point-filled-" + DewPointFilledDirective_1.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "dew-point-filled-" + DewPointFilledDirective_1.titleIdCounter);
        }
    };
    var DewPointFilledDirective_1;
    DewPointFilledDirective.titleIdCounter = 0;
    DewPointFilledDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], DewPointFilledDirective.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], DewPointFilledDirective.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], DewPointFilledDirective.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], DewPointFilledDirective.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], DewPointFilledDirective.prototype, "isFocusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], DewPointFilledDirective.prototype, "size", void 0);
    DewPointFilledDirective = DewPointFilledDirective_1 = __decorate([
        Directive({
            selector: "[ibmIconDewPointFilled]"
        }),
        __metadata("design:paramtypes", [ElementRef])
    ], DewPointFilledDirective);
    return DewPointFilledDirective;
}());
export { DewPointFilledDirective };
var DewPointFilledModule = /** @class */ (function () {
    function DewPointFilledModule() {
    }
    DewPointFilledModule = __decorate([
        NgModule({
            declarations: [
                DewPointFilledComponent,
                DewPointFilledDirective,
            ],
            exports: [
                DewPointFilledComponent,
                DewPointFilledDirective,
            ]
        })
    ], DewPointFilledModule);
    return DewPointFilledModule;
}());
export { DewPointFilledModule };
//# sourceMappingURL=data:application/json;base64,