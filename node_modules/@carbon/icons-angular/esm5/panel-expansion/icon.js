import { __decorate, __metadata } from "tslib";
import { NgModule, Component, Directive, ElementRef, Input, AfterViewInit } from "@angular/core";
import { getAttributes } from "@carbon/icon-helpers";
var PanelExpansionComponent = /** @class */ (function () {
    function PanelExpansionComponent() {
        this.focusable = false;
    }
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], PanelExpansionComponent.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], PanelExpansionComponent.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], PanelExpansionComponent.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], PanelExpansionComponent.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], PanelExpansionComponent.prototype, "focusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], PanelExpansionComponent.prototype, "innerClass", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], PanelExpansionComponent.prototype, "size", void 0);
    PanelExpansionComponent = __decorate([
        Component({
            selector: "ibm-icon-panel-expansion",
            template: "\n    <svg\n      ibmIconPanelExpansion\n      [size]=\"size\"\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
        })
    ], PanelExpansionComponent);
    return PanelExpansionComponent;
}());
export { PanelExpansionComponent };
var PanelExpansionDirective = /** @class */ (function () {
    function PanelExpansionDirective(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
        this.icons = {
            "32": {
                metadata: { "moduleName": "PanelExpansion32", "filepath": "panel-expansion/32.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 32, "height": 32 }, "content": [{ "elem": "path", "attrs": { "d": "M12 6H6A2 2 0 004 8v6a2 2 0 002 2h6a2 2 0 002-2V8A2 2 0 0012 6zM6 14V8h6v6zM26 6H20a2 2 0 00-2 2V24a2 2 0 002 2h6a2 2 0 002-2V8A2 2 0 0026 6zM20 24V8h6V24z" } }], "name": "panel-expansion", "size": 32 }, "size": 32 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M12 6H6A2 2 0 004 8v6a2 2 0 002 2h6a2 2 0 002-2V8A2 2 0 0012 6zM6 14V8h6v6zM26 6H20a2 2 0 00-2 2V24a2 2 0 002 2h6a2 2 0 002-2V8A2 2 0 0026 6zM20 24V8h6V24z\"></path></svg>"
            },
            "24": {
                metadata: { "moduleName": "PanelExpansion24", "filepath": "panel-expansion/24.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 24, "height": 24 }, "content": [{ "elem": "path", "attrs": { "d": "M12 6H6A2 2 0 004 8v6a2 2 0 002 2h6a2 2 0 002-2V8A2 2 0 0012 6zM6 14V8h6v6zM26 6H20a2 2 0 00-2 2V24a2 2 0 002 2h6a2 2 0 002-2V8A2 2 0 0026 6zM20 24V8h6V24z" } }], "name": "panel-expansion", "size": 24 }, "size": 24 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M12 6H6A2 2 0 004 8v6a2 2 0 002 2h6a2 2 0 002-2V8A2 2 0 0012 6zM6 14V8h6v6zM26 6H20a2 2 0 00-2 2V24a2 2 0 002 2h6a2 2 0 002-2V8A2 2 0 0026 6zM20 24V8h6V24z\"></path></svg>"
            },
            "20": {
                metadata: { "moduleName": "PanelExpansion20", "filepath": "panel-expansion/20.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 20, "height": 20 }, "content": [{ "elem": "path", "attrs": { "d": "M12 6H6A2 2 0 004 8v6a2 2 0 002 2h6a2 2 0 002-2V8A2 2 0 0012 6zM6 14V8h6v6zM26 6H20a2 2 0 00-2 2V24a2 2 0 002 2h6a2 2 0 002-2V8A2 2 0 0026 6zM20 24V8h6V24z" } }], "name": "panel-expansion", "size": 20 }, "size": 20 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M12 6H6A2 2 0 004 8v6a2 2 0 002 2h6a2 2 0 002-2V8A2 2 0 0012 6zM6 14V8h6v6zM26 6H20a2 2 0 00-2 2V24a2 2 0 002 2h6a2 2 0 002-2V8A2 2 0 0026 6zM20 24V8h6V24z\"></path></svg>"
            },
            "16": {
                metadata: { "moduleName": "PanelExpansion16", "filepath": "panel-expansion/16.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 16, "height": 16 }, "content": [{ "elem": "path", "attrs": { "d": "M12 6H6A2 2 0 004 8v6a2 2 0 002 2h6a2 2 0 002-2V8A2 2 0 0012 6zM6 14V8h6v6zM26 6H20a2 2 0 00-2 2V24a2 2 0 002 2h6a2 2 0 002-2V8A2 2 0 0026 6zM20 24V8h6V24z" } }], "name": "panel-expansion", "size": 16 }, "size": 16 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"16\" height=\"16\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M12 6H6A2 2 0 004 8v6a2 2 0 002 2h6a2 2 0 002-2V8A2 2 0 0012 6zM6 14V8h6v6zM26 6H20a2 2 0 00-2 2V24a2 2 0 002 2h6a2 2 0 002-2V8A2 2 0 0026 6zM20 24V8h6V24z\"></path></svg>"
            },
        };
    }
    PanelExpansionDirective_1 = PanelExpansionDirective;
    PanelExpansionDirective.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var icon = this.icons[this.size];
        var domParser = new DOMParser();
        var rawSVG = icon.svg;
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: icon.metadata.descriptor.attrs.height,
            height: icon.metadata.descriptor.attrs.height,
            viewBox: icon.metadata.descriptor.attrs.viewBox,
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            PanelExpansionDirective_1.titleIdCounter++;
            title.setAttribute("id", "panel-expansion-" + PanelExpansionDirective_1.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "panel-expansion-" + PanelExpansionDirective_1.titleIdCounter);
        }
    };
    var PanelExpansionDirective_1;
    PanelExpansionDirective.titleIdCounter = 0;
    PanelExpansionDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], PanelExpansionDirective.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], PanelExpansionDirective.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], PanelExpansionDirective.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], PanelExpansionDirective.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], PanelExpansionDirective.prototype, "isFocusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], PanelExpansionDirective.prototype, "size", void 0);
    PanelExpansionDirective = PanelExpansionDirective_1 = __decorate([
        Directive({
            selector: "[ibmIconPanelExpansion]"
        }),
        __metadata("design:paramtypes", [ElementRef])
    ], PanelExpansionDirective);
    return PanelExpansionDirective;
}());
export { PanelExpansionDirective };
var PanelExpansionModule = /** @class */ (function () {
    function PanelExpansionModule() {
    }
    PanelExpansionModule = __decorate([
        NgModule({
            declarations: [
                PanelExpansionComponent,
                PanelExpansionDirective,
            ],
            exports: [
                PanelExpansionComponent,
                PanelExpansionDirective,
            ]
        })
    ], PanelExpansionModule);
    return PanelExpansionModule;
}());
export { PanelExpansionModule };
//# sourceMappingURL=data:application/json;base64,