import { __decorate, __metadata } from "tslib";
import { NgModule, Component, Directive, ElementRef, Input, AfterViewInit } from "@angular/core";
import { getAttributes } from "@carbon/icon-helpers";
var IdentificationComponent = /** @class */ (function () {
    function IdentificationComponent() {
        this.focusable = false;
    }
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], IdentificationComponent.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], IdentificationComponent.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], IdentificationComponent.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], IdentificationComponent.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], IdentificationComponent.prototype, "focusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], IdentificationComponent.prototype, "innerClass", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], IdentificationComponent.prototype, "size", void 0);
    IdentificationComponent = __decorate([
        Component({
            selector: "ibm-icon-identification",
            template: "\n    <svg\n      ibmIconIdentification\n      [size]=\"size\"\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
        })
    ], IdentificationComponent);
    return IdentificationComponent;
}());
export { IdentificationComponent };
var IdentificationDirective = /** @class */ (function () {
    function IdentificationDirective(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
        this.icons = {
            "32": {
                metadata: { "moduleName": "Identification32", "filepath": "identification/32.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 32, "height": 32 }, "content": [{ "elem": "path", "attrs": { "d": "M28,6V26H4V6H28m0-2H4A2,2,0,0,0,2,6V26a2,2,0,0,0,2,2H28a2,2,0,0,0,2-2V6a2,2,0,0,0-2-2Z" } }, { "elem": "path", "attrs": { "d": "M6 10H13V12H6zM6 14H10V16H6zM23 18H17a3 3 0 00-3 3v2h2V21a1 1 0 011-1h6a1 1 0 011 1v2h2V21A3 3 0 0023 18zM20 17a4 4 0 10-4-4A4 4 0 0020 17zm0-6a2 2 0 11-2 2A2 2 0 0120 11z" } }], "name": "identification", "size": 32 }, "size": 32 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M28,6V26H4V6H28m0-2H4A2,2,0,0,0,2,6V26a2,2,0,0,0,2,2H28a2,2,0,0,0,2-2V6a2,2,0,0,0-2-2Z\"></path><path d=\"M6 10H13V12H6zM6 14H10V16H6zM23 18H17a3 3 0 00-3 3v2h2V21a1 1 0 011-1h6a1 1 0 011 1v2h2V21A3 3 0 0023 18zM20 17a4 4 0 10-4-4A4 4 0 0020 17zm0-6a2 2 0 11-2 2A2 2 0 0120 11z\"></path></svg>"
            },
            "24": {
                metadata: { "moduleName": "Identification24", "filepath": "identification/24.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 24, "height": 24 }, "content": [{ "elem": "path", "attrs": { "d": "M28,6V26H4V6H28m0-2H4A2,2,0,0,0,2,6V26a2,2,0,0,0,2,2H28a2,2,0,0,0,2-2V6a2,2,0,0,0-2-2Z" } }, { "elem": "path", "attrs": { "d": "M6 10H13V12H6zM6 14H10V16H6zM23 18H17a3 3 0 00-3 3v2h2V21a1 1 0 011-1h6a1 1 0 011 1v2h2V21A3 3 0 0023 18zM20 17a4 4 0 10-4-4A4 4 0 0020 17zm0-6a2 2 0 11-2 2A2 2 0 0120 11z" } }], "name": "identification", "size": 24 }, "size": 24 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M28,6V26H4V6H28m0-2H4A2,2,0,0,0,2,6V26a2,2,0,0,0,2,2H28a2,2,0,0,0,2-2V6a2,2,0,0,0-2-2Z\"></path><path d=\"M6 10H13V12H6zM6 14H10V16H6zM23 18H17a3 3 0 00-3 3v2h2V21a1 1 0 011-1h6a1 1 0 011 1v2h2V21A3 3 0 0023 18zM20 17a4 4 0 10-4-4A4 4 0 0020 17zm0-6a2 2 0 11-2 2A2 2 0 0120 11z\"></path></svg>"
            },
            "20": {
                metadata: { "moduleName": "Identification20", "filepath": "identification/20.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 20, "height": 20 }, "content": [{ "elem": "path", "attrs": { "d": "M28,6V26H4V6H28m0-2H4A2,2,0,0,0,2,6V26a2,2,0,0,0,2,2H28a2,2,0,0,0,2-2V6a2,2,0,0,0-2-2Z" } }, { "elem": "path", "attrs": { "d": "M6 10H13V12H6zM6 14H10V16H6zM23 18H17a3 3 0 00-3 3v2h2V21a1 1 0 011-1h6a1 1 0 011 1v2h2V21A3 3 0 0023 18zM20 17a4 4 0 10-4-4A4 4 0 0020 17zm0-6a2 2 0 11-2 2A2 2 0 0120 11z" } }], "name": "identification", "size": 20 }, "size": 20 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M28,6V26H4V6H28m0-2H4A2,2,0,0,0,2,6V26a2,2,0,0,0,2,2H28a2,2,0,0,0,2-2V6a2,2,0,0,0-2-2Z\"></path><path d=\"M6 10H13V12H6zM6 14H10V16H6zM23 18H17a3 3 0 00-3 3v2h2V21a1 1 0 011-1h6a1 1 0 011 1v2h2V21A3 3 0 0023 18zM20 17a4 4 0 10-4-4A4 4 0 0020 17zm0-6a2 2 0 11-2 2A2 2 0 0120 11z\"></path></svg>"
            },
            "16": {
                metadata: { "moduleName": "Identification16", "filepath": "identification/16.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 16, "height": 16 }, "content": [{ "elem": "path", "attrs": { "d": "M28,6V26H4V6H28m0-2H4A2,2,0,0,0,2,6V26a2,2,0,0,0,2,2H28a2,2,0,0,0,2-2V6a2,2,0,0,0-2-2Z" } }, { "elem": "path", "attrs": { "d": "M6 10H13V12H6zM6 14H10V16H6zM23 18H17a3 3 0 00-3 3v2h2V21a1 1 0 011-1h6a1 1 0 011 1v2h2V21A3 3 0 0023 18zM20 17a4 4 0 10-4-4A4 4 0 0020 17zm0-6a2 2 0 11-2 2A2 2 0 0120 11z" } }], "name": "identification", "size": 16 }, "size": 16 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"16\" height=\"16\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M28,6V26H4V6H28m0-2H4A2,2,0,0,0,2,6V26a2,2,0,0,0,2,2H28a2,2,0,0,0,2-2V6a2,2,0,0,0-2-2Z\"></path><path d=\"M6 10H13V12H6zM6 14H10V16H6zM23 18H17a3 3 0 00-3 3v2h2V21a1 1 0 011-1h6a1 1 0 011 1v2h2V21A3 3 0 0023 18zM20 17a4 4 0 10-4-4A4 4 0 0020 17zm0-6a2 2 0 11-2 2A2 2 0 0120 11z\"></path></svg>"
            },
        };
    }
    IdentificationDirective_1 = IdentificationDirective;
    IdentificationDirective.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var icon = this.icons[this.size];
        var domParser = new DOMParser();
        var rawSVG = icon.svg;
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: icon.metadata.descriptor.attrs.height,
            height: icon.metadata.descriptor.attrs.height,
            viewBox: icon.metadata.descriptor.attrs.viewBox,
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            IdentificationDirective_1.titleIdCounter++;
            title.setAttribute("id", "identification-" + IdentificationDirective_1.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "identification-" + IdentificationDirective_1.titleIdCounter);
        }
    };
    var IdentificationDirective_1;
    IdentificationDirective.titleIdCounter = 0;
    IdentificationDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], IdentificationDirective.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], IdentificationDirective.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], IdentificationDirective.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], IdentificationDirective.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], IdentificationDirective.prototype, "isFocusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], IdentificationDirective.prototype, "size", void 0);
    IdentificationDirective = IdentificationDirective_1 = __decorate([
        Directive({
            selector: "[ibmIconIdentification]"
        }),
        __metadata("design:paramtypes", [ElementRef])
    ], IdentificationDirective);
    return IdentificationDirective;
}());
export { IdentificationDirective };
var IdentificationModule = /** @class */ (function () {
    function IdentificationModule() {
    }
    IdentificationModule = __decorate([
        NgModule({
            declarations: [
                IdentificationComponent,
                IdentificationDirective,
            ],
            exports: [
                IdentificationComponent,
                IdentificationDirective,
            ]
        })
    ], IdentificationModule);
    return IdentificationModule;
}());
export { IdentificationModule };
//# sourceMappingURL=data:application/json;base64,