(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('tslib'), require('@angular/core'), require('@carbon/icon-helpers')) :
    typeof define === 'function' && define.amd ? define(['exports', 'tslib', '@angular/core', '@carbon/icon-helpers'], factory) :
    (global = global || self, factory((global.CarbonIconsAngular = global.CarbonIconsAngular || {}, global.CarbonIconsAngular.QH = {}), global.tslib, global.ng.core, global.CarbonIconHelpers));
}(this, (function (exports, tslib, core, iconHelpers) { 'use strict';

    var QHComponent = /** @class */ (function () {
        function QHComponent() {
            this.focusable = false;
        }
        tslib.__decorate([
            core.Input(),
            tslib.__metadata("design:type", String)
        ], QHComponent.prototype, "ariaLabel", void 0);
        tslib.__decorate([
            core.Input(),
            tslib.__metadata("design:type", String)
        ], QHComponent.prototype, "ariaLabelledby", void 0);
        tslib.__decorate([
            core.Input(),
            tslib.__metadata("design:type", Boolean)
        ], QHComponent.prototype, "ariaHidden", void 0);
        tslib.__decorate([
            core.Input(),
            tslib.__metadata("design:type", String)
        ], QHComponent.prototype, "title", void 0);
        tslib.__decorate([
            core.Input(),
            tslib.__metadata("design:type", Boolean)
        ], QHComponent.prototype, "focusable", void 0);
        tslib.__decorate([
            core.Input(),
            tslib.__metadata("design:type", String)
        ], QHComponent.prototype, "innerClass", void 0);
        tslib.__decorate([
            core.Input(),
            tslib.__metadata("design:type", String)
        ], QHComponent.prototype, "size", void 0);
        QHComponent = tslib.__decorate([
            core.Component({
                selector: "ibm-icon-q-h",
                template: "\n    <svg\n      ibmIconQH\n      [size]=\"size\"\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
            })
        ], QHComponent);
        return QHComponent;
    }());
    var QHDirective = /** @class */ (function () {
        function QHDirective(elementRef) {
            this.elementRef = elementRef;
            this.isFocusable = false;
            this.icons = {
                "32": {
                    metadata: { "moduleName": "QH32", "filepath": "Q/H/32.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 32, "height": 32 }, "content": [{ "elem": "path", "attrs": { "d": "M18 9L18 15 14 15 14 9 12 9 12 23 14 23 14 17 18 17 18 23 20 23 20 9 18 9z" } }], "name": "H", "size": 32 }, "size": 32 },
                    svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M18 9L18 15 14 15 14 9 12 9 12 23 14 23 14 17 18 17 18 23 20 23 20 9 18 9z\"></path></svg>"
                },
                "24": {
                    metadata: { "moduleName": "QH24", "filepath": "Q/H/24.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 24, "height": 24 }, "content": [{ "elem": "path", "attrs": { "d": "M18 9L18 15 14 15 14 9 12 9 12 23 14 23 14 17 18 17 18 23 20 23 20 9 18 9z" } }], "name": "H", "size": 24 }, "size": 24 },
                    svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M18 9L18 15 14 15 14 9 12 9 12 23 14 23 14 17 18 17 18 23 20 23 20 9 18 9z\"></path></svg>"
                },
                "20": {
                    metadata: { "moduleName": "QH20", "filepath": "Q/H/20.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 20, "height": 20 }, "content": [{ "elem": "path", "attrs": { "d": "M18 9L18 15 14 15 14 9 12 9 12 23 14 23 14 17 18 17 18 23 20 23 20 9 18 9z" } }], "name": "H", "size": 20 }, "size": 20 },
                    svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M18 9L18 15 14 15 14 9 12 9 12 23 14 23 14 17 18 17 18 23 20 23 20 9 18 9z\"></path></svg>"
                },
                "16": {
                    metadata: { "moduleName": "QH16", "filepath": "Q/H/16.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 16, "height": 16 }, "content": [{ "elem": "path", "attrs": { "d": "M18 9L18 15 14 15 14 9 12 9 12 23 14 23 14 17 18 17 18 23 20 23 20 9 18 9z" } }], "name": "H", "size": 16 }, "size": 16 },
                    svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"16\" height=\"16\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M18 9L18 15 14 15 14 9 12 9 12 23 14 23 14 17 18 17 18 23 20 23 20 9 18 9z\"></path></svg>"
                },
            };
        }
        QHDirective_1 = QHDirective;
        QHDirective.prototype.ngAfterViewInit = function () {
            var svg = this.elementRef.nativeElement;
            svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
            var icon = this.icons[this.size];
            var domParser = new DOMParser();
            var rawSVG = icon.svg;
            var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
            var node = svgElement.firstChild;
            while (node) {
                // importNode makes a clone of the node
                // this ensures we keep looping over the nodes in the parsed document
                svg.appendChild(svg.ownerDocument.importNode(node, true));
                node = node.nextSibling;
            }
            var attributes = iconHelpers.getAttributes({
                width: icon.metadata.descriptor.attrs.height,
                height: icon.metadata.descriptor.attrs.height,
                viewBox: icon.metadata.descriptor.attrs.viewBox,
                title: this.title,
                "aria-label": this.ariaLabel,
                "aria-labelledby": this.ariaLabelledby,
                "aria-hidden": this.ariaHidden,
                focusable: this.isFocusable.toString()
            });
            var attrKeys = Object.keys(attributes);
            for (var i = 0; i < attrKeys.length; i++) {
                var key = attrKeys[i];
                var value = attributes[key];
                if (key === "title") {
                    continue;
                }
                if (value) {
                    svg.setAttribute(key, value);
                }
            }
            if (attributes.title) {
                var title = document.createElement("title");
                title.textContent = attributes.title;
                QHDirective_1.titleIdCounter++;
                title.setAttribute("id", "q-h-" + QHDirective_1.titleIdCounter);
                svg.appendChild(title);
                svg.setAttribute("aria-labelledby", "q-h-" + QHDirective_1.titleIdCounter);
            }
        };
        var QHDirective_1;
        QHDirective.titleIdCounter = 0;
        QHDirective.ctorParameters = function () { return [
            { type: core.ElementRef }
        ]; };
        tslib.__decorate([
            core.Input(),
            tslib.__metadata("design:type", String)
        ], QHDirective.prototype, "ariaLabel", void 0);
        tslib.__decorate([
            core.Input(),
            tslib.__metadata("design:type", String)
        ], QHDirective.prototype, "ariaLabelledby", void 0);
        tslib.__decorate([
            core.Input(),
            tslib.__metadata("design:type", Boolean)
        ], QHDirective.prototype, "ariaHidden", void 0);
        tslib.__decorate([
            core.Input(),
            tslib.__metadata("design:type", String)
        ], QHDirective.prototype, "title", void 0);
        tslib.__decorate([
            core.Input(),
            tslib.__metadata("design:type", Boolean)
        ], QHDirective.prototype, "isFocusable", void 0);
        tslib.__decorate([
            core.Input(),
            tslib.__metadata("design:type", String)
        ], QHDirective.prototype, "size", void 0);
        QHDirective = QHDirective_1 = tslib.__decorate([
            core.Directive({
                selector: "[ibmIconQH]"
            }),
            tslib.__metadata("design:paramtypes", [core.ElementRef])
        ], QHDirective);
        return QHDirective;
    }());
    var QHModule = /** @class */ (function () {
        function QHModule() {
        }
        QHModule = tslib.__decorate([
            core.NgModule({
                declarations: [
                    QHComponent,
                    QHDirective,
                ],
                exports: [
                    QHComponent,
                    QHDirective,
                ]
            })
        ], QHModule);
        return QHModule;
    }());

    exports.QHComponent = QHComponent;
    exports.QHDirective = QHDirective;
    exports.QHModule = QHModule;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
