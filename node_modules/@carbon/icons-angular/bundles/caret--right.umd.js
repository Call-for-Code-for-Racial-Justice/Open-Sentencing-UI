(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('tslib'), require('@angular/core'), require('@carbon/icon-helpers')) :
    typeof define === 'function' && define.amd ? define(['exports', 'tslib', '@angular/core', '@carbon/icon-helpers'], factory) :
    (global = global || self, factory((global.CarbonIconsAngular = global.CarbonIconsAngular || {}, global.CarbonIconsAngular.CaretRight = {}), global.tslib, global.ng.core, global.CarbonIconHelpers));
}(this, (function (exports, tslib, core, iconHelpers) { 'use strict';

    var CaretRightComponent = /** @class */ (function () {
        function CaretRightComponent() {
            this.focusable = false;
        }
        tslib.__decorate([
            core.Input(),
            tslib.__metadata("design:type", String)
        ], CaretRightComponent.prototype, "ariaLabel", void 0);
        tslib.__decorate([
            core.Input(),
            tslib.__metadata("design:type", String)
        ], CaretRightComponent.prototype, "ariaLabelledby", void 0);
        tslib.__decorate([
            core.Input(),
            tslib.__metadata("design:type", Boolean)
        ], CaretRightComponent.prototype, "ariaHidden", void 0);
        tslib.__decorate([
            core.Input(),
            tslib.__metadata("design:type", String)
        ], CaretRightComponent.prototype, "title", void 0);
        tslib.__decorate([
            core.Input(),
            tslib.__metadata("design:type", Boolean)
        ], CaretRightComponent.prototype, "focusable", void 0);
        tslib.__decorate([
            core.Input(),
            tslib.__metadata("design:type", String)
        ], CaretRightComponent.prototype, "innerClass", void 0);
        tslib.__decorate([
            core.Input(),
            tslib.__metadata("design:type", String)
        ], CaretRightComponent.prototype, "size", void 0);
        CaretRightComponent = tslib.__decorate([
            core.Component({
                selector: "ibm-icon-caret-right",
                template: "\n    <svg\n      ibmIconCaretRight\n      [size]=\"size\"\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
            })
        ], CaretRightComponent);
        return CaretRightComponent;
    }());
    var CaretRightDirective = /** @class */ (function () {
        function CaretRightDirective(elementRef) {
            this.elementRef = elementRef;
            this.isFocusable = false;
            this.icons = {
                "32": {
                    metadata: { "moduleName": "CaretRight32", "filepath": "caret--right/32.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 32, "height": 32 }, "content": [{ "elem": "path", "attrs": { "d": "M12 8L22 16 12 24z" } }], "name": "caret--right", "size": 32 }, "size": 32 },
                    svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M12 8L22 16 12 24z\"></path></svg>"
                },
                "24": {
                    metadata: { "moduleName": "CaretRight24", "filepath": "caret--right/24.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 24, "height": 24 }, "content": [{ "elem": "path", "attrs": { "d": "M12 8L22 16 12 24z" } }], "name": "caret--right", "size": 24 }, "size": 24 },
                    svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M12 8L22 16 12 24z\"></path></svg>"
                },
                "20": {
                    metadata: { "moduleName": "CaretRight20", "filepath": "caret--right/20.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 20, "height": 20 }, "content": [{ "elem": "path", "attrs": { "d": "M12 8L22 16 12 24z" } }], "name": "caret--right", "size": 20 }, "size": 20 },
                    svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M12 8L22 16 12 24z\"></path></svg>"
                },
                "16": {
                    metadata: { "moduleName": "CaretRight16", "filepath": "caret--right/16.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 16, "height": 16 }, "content": [{ "elem": "path", "attrs": { "d": "M12 8L22 16 12 24z" } }], "name": "caret--right", "size": 16 }, "size": 16 },
                    svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"16\" height=\"16\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M12 8L22 16 12 24z\"></path></svg>"
                },
                "glyph": {
                    metadata: { "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 5 8", "fill": "currentColor", "width": "5", "height": "8" }, "content": [{ "elem": "path", "attrs": { "d": "M0 0L5 4 0 8z" } }], "name": "caret--right", "size": "glyph" }, "moduleName": "CaretRightGlyph", "filepath": "caret--right/index.js", "size": "glyph" },
                    svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"5\" height=\"8\" viewBox=\"0 0 5 8\" aria-hidden=\"true\"><path d=\"M0 0L5 4 0 8z\"></path></svg>"
                },
            };
        }
        CaretRightDirective_1 = CaretRightDirective;
        CaretRightDirective.prototype.ngAfterViewInit = function () {
            var svg = this.elementRef.nativeElement;
            svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
            var icon = this.icons[this.size];
            var domParser = new DOMParser();
            var rawSVG = icon.svg;
            var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
            var node = svgElement.firstChild;
            while (node) {
                // importNode makes a clone of the node
                // this ensures we keep looping over the nodes in the parsed document
                svg.appendChild(svg.ownerDocument.importNode(node, true));
                node = node.nextSibling;
            }
            var attributes = iconHelpers.getAttributes({
                width: icon.metadata.descriptor.attrs.height,
                height: icon.metadata.descriptor.attrs.height,
                viewBox: icon.metadata.descriptor.attrs.viewBox,
                title: this.title,
                "aria-label": this.ariaLabel,
                "aria-labelledby": this.ariaLabelledby,
                "aria-hidden": this.ariaHidden,
                focusable: this.isFocusable.toString()
            });
            var attrKeys = Object.keys(attributes);
            for (var i = 0; i < attrKeys.length; i++) {
                var key = attrKeys[i];
                var value = attributes[key];
                if (key === "title") {
                    continue;
                }
                if (value) {
                    svg.setAttribute(key, value);
                }
            }
            if (attributes.title) {
                var title = document.createElement("title");
                title.textContent = attributes.title;
                CaretRightDirective_1.titleIdCounter++;
                title.setAttribute("id", "caret-right-" + CaretRightDirective_1.titleIdCounter);
                svg.appendChild(title);
                svg.setAttribute("aria-labelledby", "caret-right-" + CaretRightDirective_1.titleIdCounter);
            }
        };
        var CaretRightDirective_1;
        CaretRightDirective.titleIdCounter = 0;
        CaretRightDirective.ctorParameters = function () { return [
            { type: core.ElementRef }
        ]; };
        tslib.__decorate([
            core.Input(),
            tslib.__metadata("design:type", String)
        ], CaretRightDirective.prototype, "ariaLabel", void 0);
        tslib.__decorate([
            core.Input(),
            tslib.__metadata("design:type", String)
        ], CaretRightDirective.prototype, "ariaLabelledby", void 0);
        tslib.__decorate([
            core.Input(),
            tslib.__metadata("design:type", Boolean)
        ], CaretRightDirective.prototype, "ariaHidden", void 0);
        tslib.__decorate([
            core.Input(),
            tslib.__metadata("design:type", String)
        ], CaretRightDirective.prototype, "title", void 0);
        tslib.__decorate([
            core.Input(),
            tslib.__metadata("design:type", Boolean)
        ], CaretRightDirective.prototype, "isFocusable", void 0);
        tslib.__decorate([
            core.Input(),
            tslib.__metadata("design:type", String)
        ], CaretRightDirective.prototype, "size", void 0);
        CaretRightDirective = CaretRightDirective_1 = tslib.__decorate([
            core.Directive({
                selector: "[ibmIconCaretRight]"
            }),
            tslib.__metadata("design:paramtypes", [core.ElementRef])
        ], CaretRightDirective);
        return CaretRightDirective;
    }());
    var CaretRightModule = /** @class */ (function () {
        function CaretRightModule() {
        }
        CaretRightModule = tslib.__decorate([
            core.NgModule({
                declarations: [
                    CaretRightComponent,
                    CaretRightDirective,
                ],
                exports: [
                    CaretRightComponent,
                    CaretRightDirective,
                ]
            })
        ], CaretRightModule);
        return CaretRightModule;
    }());

    exports.CaretRightComponent = CaretRightComponent;
    exports.CaretRightDirective = CaretRightDirective;
    exports.CaretRightModule = CaretRightModule;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
