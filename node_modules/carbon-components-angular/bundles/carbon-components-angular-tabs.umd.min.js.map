{"version":3,"sources":["ng://carbon-components-angular/tabs/tab-header.component.ts","ng://carbon-components-angular/tabs/tab-header-group.component.ts","ng://carbon-components-angular/tabs/tab.component.ts","ng://carbon-components-angular/tabs/tab-headers.component.ts","ng://carbon-components-angular/tabs/tabs.component.ts","ng://carbon-components-angular/tabs/tabs.module.ts"],"sourcesContent":["import {\n\tComponent,\n\tInput,\n\tViewChild,\n\tElementRef,\n\tOutput,\n\tAfterViewInit\n} from \"@angular/core\";\n\nimport { Tab } from \"./tab.component\";\nimport { EventEmitter } from \"@angular/core\";\n\n@Component({\n\tselector: \"ibm-tab-header\",\n\ttemplate: `\n\t\t<li\n\t\t\t[ngClass]=\"{\n\t\t\t\t'bx--tabs__nav-item--selected': active,\n\t\t\t\t'bx--tabs__nav-item--disabled': disabled\n\t\t\t}\"\n\t\t\tclass=\"bx--tabs__nav-item\"\n\t\t\trole=\"presentation\"\n\t\t\t(click)=\"selectTab()\">\n\t\t\t<a\n\t\t\t\t#tabItem\n\t\t\t\t[attr.aria-selected]=\"active\"\n\t\t\t\tdraggable=\"false\"\n\t\t\t\tclass=\"bx--tabs__nav-link\"\n\t\t\t\thref=\"javascript:void(0)\"\n\t\t\t\t[title]=\"title\"\n\t\t\t\t[attr.tabindex]=\"(active? 0 : -1)\"\n\t\t\t\trole=\"tab\">\n\t\t\t\t<ng-content></ng-content>\n\t\t\t</a>\n\t\t</li>\n\t`\n})\n\nexport class TabHeader implements AfterViewInit {\n\t/**\n\t * Indicates whether the `Tab` is active/selected.\n\t * Determines whether it's `TabPanel` is rendered.\n\t */\n\t@Input() active = false;\n\t/**\n\t * Indicates whether or not the `Tab` item is disabled.\n\t */\n\t@Input() disabled = false;\n\t/**\n\t * Reference to the corresponsing tab pane.\n\t */\n\t@Input() paneReference: Tab;\n\t@Input() title;\n\t/**\n\t * Set to 'true' to have pane reference cached and not reloaded on tab switching.\n\t */\n\t@Input() set cacheActive(shouldCache: boolean) {\n\t\tthis._cacheActive = shouldCache;\n\n\t\t// Updates the pane references associated with the tab header when cache active is changed.\n\t\tif (this.paneReference) {\n\t\t\tthis.paneReference.cacheActive = this.cacheActive;\n\t\t}\n\t}\n\n\t@Input() set paneTabIndex(tabIndex: number | null) {\n\t\tif (this.paneReference) {\n\t\t\tthis.paneReference.tabIndex = tabIndex;\n\t\t}\n\t}\n\n\tget cacheActive() {\n\t\treturn this._cacheActive;\n\t}\n\n\t/**\n\t * Value 'selected' to be emitted after a new `Tab` is selected.\n\t */\n\n\t@Output() selected = new EventEmitter<any>();\n\n\t// @ts-ignore\n\t@ViewChild(\"tabItem\", { static: true }) tabItem: ElementRef;\n\n\tprotected _cacheActive = false;\n\n\tngAfterViewInit() {\n\t\tsetTimeout(() => {\n\t\t\tthis.title = this.title ? this.title : this.tabItem.nativeElement.textContent;\n\t\t});\n\t}\n\n\tselectTab() {\n\t\tthis.tabItem.nativeElement.focus();\n\t\tif (!this.disabled) {\n\t\t\tthis.selected.emit();\n\t\t\tthis.active = true;\n\t\t\tif (this.paneReference) {\n\t\t\t\tthis.paneReference.active = true;\n\t\t\t}\n\t\t}\n\t}\n}\n","import {\n\tComponent,\n\tQueryList,\n\tInput,\n\tHostListener,\n\tContentChildren,\n\tOnDestroy,\n\tAfterContentInit,\n\tElementRef,\n\tTemplateRef,\n\tOnChanges,\n\tSimpleChanges\n} from \"@angular/core\";\n\nimport { TabHeader } from \"./tab-header.component\";\nimport { Subscription } from \"rxjs\";\n\n@Component({\n\tselector: \"ibm-tab-header-group\",\n\ttemplate: `\n\t<nav\n\t\tclass=\"bx--tabs\"\n\t\t[ngClass]=\"{\n\t\t\t'bx--skeleton': skeleton,\n\t\t\t'bx--tabs--container': type === 'container'\n\t\t}\"\n\t\trole=\"navigation\"\n\t\t[attr.aria-label]=\"ariaLabel\"\n\t\t[attr.aria-labelledby]=\"ariaLabelledby\">\n\t\t<div\n\t\t\tclass=\"bx--tabs-trigger\"\n\t\t\ttabindex=\"0\"\n\t\t\t(click)=\"showTabList()\"\n\t\t\t(keydown)=\"onDropdownKeydown($event)\">\n\t\t\t<a\n\t\t\t\thref=\"javascript:void(0)\"\n\t\t\t\tclass=\"bx--tabs-trigger-text\"\n\t\t\t\ttabindex=\"-1\"\n\t\t\t\t*ngIf=\"(!getSelectedTab().headingIsTemplate && getSelectedTab().heading != '') || getSelectedTab().headingIsTemplate\">\n\t\t\t\t<ng-container *ngIf=\"!getSelectedTab().headingIsTemplate\">\n\t\t\t\t\t{{ getSelectedTab().heading }}\n\t\t\t\t</ng-container>\n\t\t\t\t<ng-template\n\t\t\t\t\t*ngIf=\"getSelectedTab().headingIsTemplate\"\n\t\t\t\t\t[ngTemplateOutlet]=\"getSelectedTab().heading\"\n\t\t\t\t\t[ngTemplateOutletContext]=\"{$implicit: getSelectedTab().context}\">\n\t\t\t\t</ng-template>\n\t\t\t</a>\n\t\t\t<svg width=\"10\" height=\"5\" viewBox=\"0 0 10 5\">\n\t\t\t\t<path d=\"M0 0l5 4.998L10 0z\" fill-rule=\"evenodd\"></path>\n\t\t\t</svg>\n\t\t</div>\n\t\t<ul\n\t\t\t#tabList\n\t\t\t[ngClass]=\"{\n\t\t\t\t'bx--tabs__nav--hidden': !tabListVisible\n\t\t\t}\"\n\t\t\t(keydown)=\"tabDropdownKeydown($event)\"\n\t\t\tclass=\"bx--tabs__nav\"\n\t\t\trole=\"tablist\">\n\t\t\t<li role=\"presentation\">\n\t\t\t\t<ng-container *ngIf=\"contentBefore\" [ngTemplateOutlet]=\"contentBefore\"></ng-container>\n\t\t\t</li>\n\t\t\t<ng-content></ng-content>\n\t\t\t<li role=\"presentation\">\n\t\t\t\t<ng-container *ngIf=\"contentAfter\" [ngTemplateOutlet]=\"contentAfter\"></ng-container>\n\t\t\t</li>\n\t\t</ul>\n\t</nav>\n\t`\n})\nexport class TabHeaderGroup implements AfterContentInit, OnDestroy, OnChanges {\n\t/**\n\t * Set to 'true' to have tabs automatically activated and have their content displayed when they receive focus.\n\t */\n\t@Input() followFocus: boolean;\n\t/**\n\t * Set to `true` to put tabs in a loading state.\n\t */\n\t@Input() skeleton = false;\n\t/**\n\t * Sets the aria label on the nav element.\n\t */\n\t@Input() ariaLabel: string;\n\t/**\n\t * Sets the aria labelledby on the nav element.\n\t */\n\t@Input() ariaLabelledby: string;\n\n\t@Input() contentAfter: TemplateRef<any>;\n\n\t@Input() contentBefore: TemplateRef<any>;\n\n\t/**\n\t * Set to 'true' to have all pane references associated with each tab header\n\t * in the tab header group cached and not reloaded on tab switching.\n\t */\n\t@Input() cacheActive = false;\n\n\t@Input() isNavigation = false;\n\t@Input() type: \"default\" | \"container\" = \"default\";\n\n\t/**\n\t * ContentChildren of all the tabHeaders.\n\t */\n\t@ContentChildren(TabHeader) tabHeaderQuery: QueryList<TabHeader>;\n\t/**\n\t * Keeps track of all the subscriptions to the tab header selection events.\n\t */\n\tselectedSubscriptionTracker = new Subscription();\n\n\tpublic tabListVisible = false;\n\t/**\n\t * Controls the manual focusing done by tabbing through headings.\n\t */\n\tpublic currentSelectedIndex = 0;\n\n\tprivate _cacheActive = false;\n\n\tconstructor(protected elementRef: ElementRef) {}\n\n\t// keyboard accessibility\n\t/**\n\t * Controls the keydown events used for tabbing through the headings.\n\t */\n\t@HostListener(\"keydown\", [\"$event\"])\n\tkeyboardInput(event) {\n\t\tlet tabHeadersArray = Array.from<any>(this.tabHeaderQuery);\n\n\t\tif (event.key === \"Right\" || event.key === \"ArrowRight\") {\n\t\t\tif (this.currentSelectedIndex < tabHeadersArray.length - 1) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tif (this.followFocus && !tabHeadersArray[this.currentSelectedIndex + 1].disabled) {\n\t\t\t\t\ttabHeadersArray[this.currentSelectedIndex + 1].selectTab();\n\t\t\t\t} else {\n\t\t\t\t\ttabHeadersArray[this.currentSelectedIndex + 1].tabItem.nativeElement.focus();\n\t\t\t\t\tthis.currentSelectedIndex++;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tif (this.followFocus && !tabHeadersArray[0].disabled) {\n\t\t\t\t\ttabHeadersArray[0].selectTab();\n\t\t\t\t} else {\n\t\t\t\t\ttabHeadersArray[0].tabItem.nativeElement.focus();\n\t\t\t\t\tthis.currentSelectedIndex = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (event.key === \"Left\" || event.key === \"ArrowLeft\") {\n\t\t\tif (this.currentSelectedIndex > 0) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tif (this.followFocus && !tabHeadersArray[this.currentSelectedIndex - 1].disabled) {\n\t\t\t\t\ttabHeadersArray[this.currentSelectedIndex - 1].selectTab();\n\t\t\t\t} else {\n\t\t\t\t\ttabHeadersArray[this.currentSelectedIndex - 1].tabItem.nativeElement.focus();\n\t\t\t\t\tthis.currentSelectedIndex--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tif (this.followFocus && !tabHeadersArray[tabHeadersArray.length - 1].disabled) {\n\t\t\t\t\ttabHeadersArray[tabHeadersArray.length - 1].selectTab();\n\t\t\t\t} else {\n\t\t\t\t\ttabHeadersArray[tabHeadersArray.length - 1].tabItem.nativeElement.focus();\n\t\t\t\t\tthis.currentSelectedIndex = tabHeadersArray.length - 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (event.key === \"Home\") {\n\t\t\tevent.preventDefault();\n\t\t\tif (this.followFocus && !tabHeadersArray[0].disabled) {\n\t\t\t\ttabHeadersArray[0].selectTab();\n\t\t\t} else {\n\t\t\t\ttabHeadersArray[0].tabItem.nativeElement.focus();\n\t\t\t\tthis.currentSelectedIndex = 0;\n\t\t\t}\n\t\t}\n\n\t\tif (event.key === \"End\") {\n\t\t\tevent.preventDefault();\n\t\t\tif (this.followFocus && !tabHeadersArray[tabHeadersArray.length - 1].disabled) {\n\t\t\t\ttabHeadersArray[tabHeadersArray.length - 1].selectTab();\n\t\t\t} else {\n\t\t\t\ttabHeadersArray[tabHeadersArray.length - 1].tabItem.nativeElement.focus();\n\t\t\t\tthis.currentSelectedIndex = tabHeadersArray.length - 1;\n\t\t\t}\n\t\t}\n\n\t\t// `\"Spacebar\"` is IE11 specific value\n\t\tif ((event.key === \" \" || event.key === \"Spacebar\") && !this.followFocus) {\n\t\t\ttabHeadersArray[this.currentSelectedIndex].selectTab();\n\t\t}\n\n\t\t// dropdown list handler\n\t\tif (event.key === \"Escape\") {\n\t\t\tthis.tabListVisible = false;\n\t\t}\n\t}\n\n\t@HostListener(\"focusout\", [\"$event\"])\n\tfocusOut(event) {\n\t\tif (this.tabListVisible && !this.elementRef.nativeElement.contains(event.relatedTarget)) {\n\t\t\tthis.tabListVisible = false;\n\t\t}\n\t}\n\n\tngAfterContentInit() {\n\t\tthis.selectedSubscriptionTracker.unsubscribe();\n\n\t\tif (this.tabHeaderQuery) {\n\t\t\tthis.tabHeaderQuery.toArray()\n\t\t\t\t.forEach(tabHeader => {\n\t\t\t\t\ttabHeader.cacheActive = this.cacheActive;\n\t\t\t\t\ttabHeader.paneTabIndex = this.isNavigation ? null : 0;\n\t\t\t\t});\n\t\t}\n\n\t\tconst selectedSubscriptions = this.tabHeaderQuery.toArray().forEach(tabHeader => {\n\t\t\ttabHeader.selected.subscribe(() => {\n\t\t\t\tthis.currentSelectedIndex = this.tabHeaderQuery.toArray().indexOf(tabHeader);\n\t\t\t\t// The Filter takes the current selected tab out, then all other headers are\n\t\t\t\t// deactivated and their associated pane references are also deactivated.\n\t\t\t\tthis.tabHeaderQuery.toArray().filter(header => header !== tabHeader)\n\t\t\t\t\t.forEach(filteredHeader => {\n\t\t\t\t\t\tfilteredHeader.active = false;\n\t\t\t\t\t\tif (filteredHeader.paneReference) {\n\t\t\t\t\t\t\tfilteredHeader.paneReference.active = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t});\n\t\t});\n\t\tthis.selectedSubscriptionTracker.add(selectedSubscriptions);\n\n\t\tsetTimeout(() => this.tabHeaderQuery.toArray()[this.currentSelectedIndex].selectTab());\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (this.tabHeaderQuery) {\n\t\t\tif (changes.cacheActive) {\n\t\t\t\tthis.tabHeaderQuery.toArray().forEach(tabHeader => tabHeader.cacheActive = this.cacheActive);\n\t\t\t}\n\n\t\t\tif (changes.isNavigation) {\n\t\t\t\tthis.tabHeaderQuery.toArray()\n\t\t\t\t\t.forEach(tabHeader => tabHeader.paneTabIndex = this.isNavigation ? null : 0);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic getSelectedTab(): any {\n\t\tconst selected =  this.tabHeaderQuery.toArray()[this.currentSelectedIndex];\n\t\tif (selected) {\n\t\t\treturn selected;\n\t\t}\n\t\treturn {\n\t\t\theadingIsTemplate: false,\n\t\t\theading: \"\"\n\t\t};\n\t}\n\n\tpublic showTabList() {\n\t\tthis.tabListVisible = true;\n\t\tconst focusTarget = this.tabHeaderQuery.toArray().find(tab => {\n\t\t\tconst tabContainer = tab.tabItem.nativeElement.parentElement;\n\t\t\treturn !tabContainer.classList.contains(\"bx--tabs__nav-item--selected\");\n\t\t});\n\t\tfocusTarget.tabItem.nativeElement.focus();\n\t}\n\n\tpublic onDropdownKeydown(event: KeyboardEvent) {\n\t\tswitch (event.key) {\n\t\t\tcase \" \":\n\t\t\tcase \"Spacebar\":\n\t\t\tcase \"Enter\":\n\t\t\t\tevent.preventDefault();\n\t\t\t\tthis.showTabList();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tpublic tabDropdownKeydown(event: KeyboardEvent) {\n\t\tif (!this.tabListVisible) { return; }\n\n\t\tconst target = (event.target as HTMLElement).closest(\"a\");\n\n\t\tconst headers = this.tabHeaderQuery.toArray().filter(tab =>\n\t\t\t!tab.tabItem.nativeElement.parentElement.classList.contains(\"bx--tabs__nav-item--disabled\") &&\n\t\t\t!tab.tabItem.nativeElement.parentElement.classList.contains(\"bx--tabs__nav-item--selected\"));\n\n\t\t// unless focus can move, it should remain on the target\n\t\tlet next: HTMLElement = target;\n\t\tlet previous: HTMLElement = target;\n\n\t\tfor (let i = 0; i < headers.length; i++) {\n\t\t\tif (headers[i].tabItem.nativeElement === target) {\n\t\t\t\tif (i + 1 < headers.length) {\n\t\t\t\t\tnext = headers[i + 1].tabItem.nativeElement;\n\t\t\t\t}\n\t\t\t\tif (i - 1 >= 0) {\n\t\t\t\t\tprevious = headers[i - 1].tabItem.nativeElement;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tswitch (event.key) {\n\t\t\tcase \"ArrowDown\":\n\t\t\tcase \"Down\": // IE11 specific value\n\t\t\t\tnext.focus();\n\t\t\t\tbreak;\n\t\t\tcase \"ArrowUp\":\n\t\t\tcase \"Up\": // IE11 specific value\n\t\t\t\tprevious.focus();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tngOnDestroy() {\n\t\tthis.selectedSubscriptionTracker.unsubscribe();\n\t}\n}\n","import {\n\tComponent,\n\tOnInit,\n\tInput,\n\tOutput,\n\tEventEmitter,\n\tContentChild,\n\tTemplateRef,\n\tHostBinding\n} from \"@angular/core\";\n\n\nlet nextId = 0;\n\n/**\n* The `Tab` component is a child of the `Tabs` component.\n* It represents one `Tab` item and its content within a panel of other `Tab` items.\n*\n*\n* `Tab` takes a string or `TemplateRef` for the header, and any content for the body of the tab.\n* Disabled states should be handled by the application (ie. switch to the tab, but display some\n* indication as to _why_ the tab is disabled).\n*\n* When the tab is selected the `select` output will be triggered.\n* The `select` output will also be triggered for the active tab when the tabs are loaded or updated.\n*\n*\n* Tab with string header:\n*\n* ```html\n* <ibm-tab heading='tab1'>\n* \ttab 1 content\n* </ibm-tab>\n* ```\n*\n* Tab with custom header:\n*\n* ```html\n* <ng-template #tabHeading>\n* \t<svg ibmIcon=\"facebook\"\n* \t\tsize=\"sm\"\n* \t\tstyle=\"margin-right: 7px;\">\n* \t</svg>\n* \tHello Tab 1\n* </ng-template>\n* <ibm-tabs>\n* \t<ibm-tab [heading]=\"tabHeading\">\n* \t\tTab 1 content <svg ibmIcon=\"alert\" size=\"lg\"></svg>\n* \t</ibm-tab>\n* \t<ibm-tab heading='Tab2'>\n* \t\tTab 2 content\n* \t</ibm-tab>\n* \t<ibm-tab heading='Tab3'>\n* \t\tTab 3 content\n* \t</ibm-tab>\n* </ibm-tabs>\n* ```\n*/\n@Component({\n\tselector: \"ibm-tab\",\n\ttemplate: `\n\t\t<div\n\t\t\t[attr.tabindex]=\"tabIndex\"\n\t\t\trole=\"tabpanel\"\n\t\t\t*ngIf=\"shouldRender()\"\n\t\t\t[ngStyle]=\"{'display': active ? null : 'none'}\"\n\t\t\t[attr.aria-labelledby]=\"id + '-header'\">\n\t\t\t<ng-content></ng-content>\n\t\t</div>\n\t`\n})\nexport class Tab implements OnInit {\n\t/**\n\t * Boolean value reflects if the `Tab` is using a custom template for the heading.\n\t * Default value is false.\n\t */\n\tpublic headingIsTemplate = false;\n\n\t/**\n\t * The `Tab`'s title to be displayed or custom temaplate for the `Tab` heading.\n\t */\n\t@Input() heading: string | TemplateRef<any>;\n\t/**\n\t * Optional override for the `tabItem's`'s title attribute which is set in `TabHeaders`.\n\t * `tabItem`'s title attribute is automatically set to `heading`.\n\t *\n\t * You might want to use this if you set `heading` to a `TemplateRef`.\n\t */\n\t@Input() title: string;\n\t/**\n\t * Allows the user to pass data to the custom template for the `Tab` heading.\n\t */\n\t@Input() context: any;\n\t/**\n\t * Indicates whether the `Tab` is active/selected.\n\t * Determines whether it's `TabPanel` is rendered.\n\t */\n\t@Input() active = false;\n\t/**\n\t * Indicates whether or not the `Tab` item is disabled.\n\t */\n\t@Input() disabled = false;\n\n\t@Input() tabIndex = 0;\n\t// do we need id's?\n\t/**\n\t * Sets the id of the `Tab`. Will be uniquely generated if not provided.\n\t */\n\t@Input() id = `n-tab-${nextId++}`;\n\t/**\n\t * Set to true to have Tab items cached and not reloaded on tab switching.\n\t */\n\t@Input() set cacheActive(shouldCache: boolean) {\n\t\tthis._cacheActive = shouldCache;\n\t}\n\t/**\n\t * Value 'selected' to be emitted after a new `Tab` is selected.\n\t */\n\t@Output() selected: EventEmitter<void> = new EventEmitter<void>();\n\n\t/**\n\t * Used to set the id property on the element.\n\t */\n\t@HostBinding(\"attr.id\") attrClass = this.id;\n\n\tget cacheActive() {\n\t\treturn this._cacheActive;\n\t}\n\n\tprotected _cacheActive = false;\n\n\t/**\n\t * Checks for custom heading template on initialization and updates the value\n\t * of the boolean 'headingIsTemplate'.\n\t */\n\tngOnInit() {\n\t\tif (this.heading instanceof TemplateRef) {\n\t\t\tthis.headingIsTemplate = true;\n\t\t}\n\t}\n\n\t/**\n\t * Emit the status of the `Tab`, specifically 'select' and 'selected' properties.\n\t */\n\tdoSelect() {\n\t\tthis.selected.emit();\n\t}\n\n\t/**\n\t* Returns value indicating whether this `Tab` should be rendered in a `TabPanel`.\n\t*/\n\tshouldRender() {\n\t\treturn this.active || this.cacheActive;\n\t}\n}\n","import {\n\tComponent,\n\tQueryList,\n\tInput,\n\tHostListener,\n\tViewChild,\n\tContentChildren,\n\tAfterContentInit,\n\tViewChildren,\n\tElementRef,\n\tTemplateRef,\n\tOnChanges,\n\tSimpleChanges\n} from \"@angular/core\";\n\nimport { Tab } from \"./tab.component\";\n\n\n/**\n * The `TabHeaders` component contains the `Tab` items and controls scroll functionality\n * if content has overflow.\n */\n@Component({\n\tselector: \"ibm-tab-headers\",\n\ttemplate: `\n\t\t<nav\n\t\t\tclass=\"bx--tabs\"\n\t\t\t[ngClass]=\"{\n\t\t\t\t'bx--skeleton': skeleton,\n\t\t\t\t'bx--tabs--container': type === 'container'\n\t\t\t}\"\n\t\t\trole=\"navigation\"\n\t\t\t[attr.aria-label]=\"ariaLabel\"\n\t\t\t[attr.aria-labelledby]=\"ariaLabelledby\">\n\t\t\t<div\n\t\t\t\tclass=\"bx--tabs-trigger\"\n\t\t\t\ttabindex=\"0\"\n\t\t\t\t(click)=\"showTabList()\"\n\t\t\t\t(keydown)=\"onDropdownKeydown($event)\">\n\t\t\t\t<a\n\t\t\t\t\thref=\"#\"\n\t\t\t\t\t(click)=\"$event.preventDefault()\"\n\t\t\t\t\tclass=\"bx--tabs-trigger-text\"\n\t\t\t\t\ttabindex=\"-1\">\n\t\t\t\t\t<ng-container *ngIf=\"!getSelectedTab().headingIsTemplate\">\n\t\t\t\t\t\t{{ getSelectedTab().heading }}\n\t\t\t\t\t</ng-container>\n\t\t\t\t\t<ng-template\n\t\t\t\t\t\t*ngIf=\"getSelectedTab().headingIsTemplate\"\n\t\t\t\t\t\t[ngTemplateOutlet]=\"getSelectedTab().heading\"\n\t\t\t\t\t\t[ngTemplateOutletContext]=\"{$implicit: getSelectedTab().context}\">\n\t\t\t\t\t</ng-template>\n\t\t\t\t</a>\n\t\t\t\t<svg width=\"10\" height=\"5\" viewBox=\"0 0 10 5\">\n\t\t\t\t\t<path d=\"M0 0l5 4.998L10 0z\" fill-rule=\"evenodd\"></path>\n\t\t\t\t</svg>\n\t\t\t</div>\n\t\t\t<ul\n\t\t\t\t#tabList\n\t\t\t\t[ngClass]=\"{\n\t\t\t\t\t'bx--tabs__nav--hidden': !tabListVisible\n\t\t\t\t}\"\n\t\t\t\tclass=\"bx--tabs__nav\"\n\t\t\t\trole=\"tablist\">\n\t\t\t\t<li role=\"presentation\">\n\t\t\t\t\t<ng-container *ngIf=\"contentBefore\" [ngTemplateOutlet]=\"contentBefore\"></ng-container>\n\t\t\t\t</li>\n\t\t\t\t<li\n\t\t\t\t\t*ngFor=\"let tab of tabs; let i = index;\"\n\t\t\t\t\t[ngClass]=\"{\n\t\t\t\t\t\t'bx--tabs__nav-item--selected': tab.active,\n\t\t\t\t\t\t'bx--tabs__nav-item--disabled': tab.disabled\n\t\t\t\t\t}\"\n\t\t\t\t\tclass=\"bx--tabs__nav-item\"\n\t\t\t\t\trole=\"presentation\"\n\t\t\t\t\t(click)=\"selectTab(tabItem, tab, i)\"\n\t\t\t\t\t(keydown)=\"tabDropdownKeydown($event)\">\n\t\t\t\t\t<a\n\t\t\t\t\t\t#tabItem\n\t\t\t\t\t\t[attr.aria-selected]=\"tab.active\"\n\t\t\t\t\t\t[attr.tabindex]=\"(tab.active?0:-1)\"\n\t\t\t\t\t\t[attr.aria-controls]=\"tab.id\"\n\t\t\t\t\t\t[attr.aria-disabled]=\"tab.disabled\"\n\t\t\t\t\t\t(focus)=\"onTabFocus(tabItem, i)\"\n\t\t\t\t\t\t(click)=\"$event.preventDefault()\"\n\t\t\t\t\t\tdraggable=\"false\"\n\t\t\t\t\t\tid=\"{{tab.id}}-header\"\n\t\t\t\t\t\tclass=\"bx--tabs__nav-link\"\n\t\t\t\t\t\t[title]=\"tab.title ? tab.title : tab.heading\"\n\t\t\t\t\t\thref=\"#\"\n\t\t\t\t\t\trole=\"tab\">\n\t\t\t\t\t\t<ng-container *ngIf=\"!tab.headingIsTemplate\">\n\t\t\t\t\t\t\t{{ tab.heading }}\n\t\t\t\t\t\t</ng-container>\n\t\t\t\t\t\t<ng-template\n\t\t\t\t\t\t\t*ngIf=\"tab.headingIsTemplate\"\n\t\t\t\t\t\t\t[ngTemplateOutlet]=\"tab.heading\"\n\t\t\t\t\t\t\t[ngTemplateOutletContext]=\"{$implicit: tab.context}\">\n\t\t\t\t\t\t</ng-template>\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t\t<li role=\"presentation\">\n\t\t\t\t\t<ng-container *ngIf=\"contentAfter\" [ngTemplateOutlet]=\"contentAfter\"></ng-container>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</nav>\n\t`\n})\n\nexport class TabHeaders implements AfterContentInit, OnChanges {\n\t/**\n\t * List of `Tab` components.\n\t */\n\t// disable the next line because we need to rename the input\n\t// tslint:disable-next-line\n\t@Input(\"tabs\") tabInput: QueryList<Tab>;\n\t/**\n\t * Set to 'true' to have `Tab` items cached and not reloaded on tab switching.\n\t * Duplicate from `n-tabs` to support standalone headers\n\t */\n\t@Input() cacheActive = false;\n\t/**\n\t * Set to 'true' to have tabs automatically activated and have their content displayed when they receive focus.\n\t */\n\t@Input() followFocus: boolean;\n\t/**\n\t * Set to `true` to put tabs in a loading state.\n\t */\n\t@Input() skeleton = false;\n\t/**\n\t * Sets the aria label on the nav element.\n\t */\n\t@Input() ariaLabel: string;\n\t/**\n\t * Sets the aria labelledby on the nav element.\n\t */\n\t@Input() ariaLabelledby: string;\n\n\t@Input() contentBefore: TemplateRef<any>;\n\t@Input() contentAfter: TemplateRef<any>;\n\n\t@Input() type: \"default\" | \"container\" = \"default\";\n\n\t/**\n\t * Gets the Unordered List element that holds the `Tab` headings from the view DOM.\n\t */\n\t// @ts-ignore\n\t@ViewChild(\"tabList\", { static: true }) headerContainer;\n\t/**\n\t * ContentChild of all the n-tabs\n\t */\n\t@ContentChildren(Tab) tabQuery: QueryList<Tab>;\n\t/**\n\t * set to tabQuery if tabInput is empty\n\t */\n\tpublic tabs: QueryList<Tab>;\n\t/**\n\t * The index of the first visible tab.\n\t */\n\tpublic firstVisibleTab = 0;\n\t/**\n\t * The DOM element containing the `Tab` headings displayed.\n\t */\n\t@ViewChildren(\"tabItem\") allTabHeaders: QueryList<ElementRef>;\n\t/**\n\t * Controls the manual focusing done by tabbing through headings.\n\t */\n\tpublic currentSelectedTab: number;\n\tpublic tabListVisible = false;\n\n\tconstructor(protected elementRef: ElementRef) {}\n\n\t// keyboard accessibility\n\t/**\n\t * Controls the keydown events used for tabbing through the headings.\n\t */\n\t@HostListener(\"keydown\", [\"$event\"])\n\tkeyboardInput(event) {\n\t\tlet tabsArray = Array.from<any>(this.tabs);\n\n\t\t// \"Right\" is an ie11 specific value\n\t\tif (event.key === \"Right\" || event.key === \"ArrowRight\") {\n\t\t\tif (this.currentSelectedTab < this.allTabHeaders.length - 1) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tif (this.followFocus) {\n\t\t\t\t\tthis.selectTab(event.target, tabsArray[this.currentSelectedTab + 1], this.currentSelectedTab);\n\t\t\t\t}\n\t\t\t\tthis.allTabHeaders.toArray()[this.currentSelectedTab + 1].nativeElement.focus();\n\t\t\t} else {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tif (this.followFocus) {\n\t\t\t\t\tthis.selectTab(event.target, tabsArray[0], 0);\n\t\t\t\t}\n\t\t\t\tthis.allTabHeaders.first.nativeElement.focus();\n\t\t\t}\n\t\t}\n\n\t\t// \"Left\" is an ie11 specific value\n\t\tif (event.key === \"Left\" || event.key === \"ArrowLeft\") {\n\t\t\tif (this.currentSelectedTab > 0) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tif (this.followFocus) {\n\t\t\t\t\tthis.selectTab(event.target, tabsArray[this.currentSelectedTab - 1], this.currentSelectedTab);\n\t\t\t\t}\n\t\t\t\tthis.allTabHeaders.toArray()[this.currentSelectedTab - 1].nativeElement.focus();\n\t\t\t} else {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tif (this.followFocus) {\n\t\t\t\t\tthis.selectTab(event.target, tabsArray[this.allTabHeaders.length - 1], this.allTabHeaders.length);\n\t\t\t\t}\n\t\t\t\tthis.allTabHeaders.toArray()[this.allTabHeaders.length - 1].nativeElement.focus();\n\t\t\t}\n\t\t}\n\n\t\tif (event.key === \"Home\") {\n\t\t\tevent.preventDefault();\n\t\t\tif (this.followFocus) {\n\t\t\t\tthis.selectTab(event.target, tabsArray[0], 0);\n\t\t\t}\n\t\t\tthis.allTabHeaders.toArray()[0].nativeElement.focus();\n\t\t}\n\n\t\tif (event.key === \"End\") {\n\t\t\tevent.preventDefault();\n\t\t\tif (this.followFocus) {\n\t\t\t\tthis.selectTab(event.target, tabsArray[this.allTabHeaders.length - 1], this.allTabHeaders.length);\n\t\t\t}\n\t\t\tthis.allTabHeaders.toArray()[this.allTabHeaders.length - 1].nativeElement.focus();\n\t\t}\n\n\t\t// `\"Spacebar\"` is IE11 specific value\n\t\tif ((event.key === \" \" || event.key === \"Spacebar\") && !this.followFocus) {\n\t\t\tthis.selectTab(event.target, tabsArray[this.currentSelectedTab], this.currentSelectedTab);\n\t\t}\n\n\t\t// dropdown list handler\n\t\tif (event.key === \"Escape\") {\n\t\t\tthis.hideTabList();\n\t\t}\n\t}\n\n\t@HostListener(\"focusout\", [\"$event\"])\n\tfocusOut(event) {\n\t\tif (this.tabListVisible && !this.elementRef.nativeElement.contains(event.relatedTarget)) {\n\t\t\tthis.tabListVisible = false;\n\t\t}\n\t}\n\n\tngAfterContentInit() {\n\t\tif (!this.tabInput) {\n\t\t\tthis.tabs = this.tabQuery;\n\t\t} else {\n\t\t\tthis.tabs = this.tabInput;\n\t\t}\n\n\t\tthis.tabs.forEach(tab => tab.cacheActive = this.cacheActive);\n\t\tthis.tabs.changes.subscribe(() => {\n\t\t\tthis.setFirstTab();\n\t\t});\n\t\tthis.setFirstTab();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (this.tabs && changes.cacheActive) {\n\t\t\tthis.tabs.forEach(tab => tab.cacheActive = this.cacheActive);\n\t\t}\n\t}\n\n\t/**\n\t * Controls manually focusing tabs.\n\t */\n\tpublic onTabFocus(ref: HTMLElement, index: number) {\n\t\tif (this.tabListVisible) { return; }\n\t\tthis.currentSelectedTab = index;\n\t\t// reset scroll left because we're already handling it\n\t\tthis.headerContainer.nativeElement.parentElement.scrollLeft = 0;\n\t}\n\n\tpublic getSelectedTab(): any {\n\t\tconst selected = this.tabs.find(tab => tab.active);\n\t\tif (selected) {\n\t\t\treturn selected;\n\t\t}\n\t\treturn {headingIsTemplate: false, heading: \"\"};\n\t}\n\n\tpublic showTabList() {\n\t\tthis.tabListVisible = true;\n\t\tconst focusTarget = this.allTabHeaders.find(tab => {\n\t\t\tconst tabContainer = tab.nativeElement.parentElement;\n\t\t\treturn !tabContainer.classList.contains(\"bx--tabs__nav-item--selected\");\n\t\t});\n\t\tfocusTarget.nativeElement.focus();\n\t}\n\n\tpublic hideTabList() {\n\t\tthis.tabListVisible = false;\n\t}\n\n\tpublic onDropdownKeydown(event: KeyboardEvent) {\n\t\tswitch (event.key) {\n\t\t\tcase \" \":\n\t\t\tcase \"Spacebar\":\n\t\t\tcase \"Enter\":\n\t\t\t\tevent.preventDefault();\n\t\t\t\tthis.showTabList();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tpublic tabDropdownKeydown(event: KeyboardEvent) {\n\t\tif (!this.tabListVisible) { return; }\n\t\tconst target = (event.target as HTMLElement).closest(\"a\");\n\n\t\tconst headers = this.allTabHeaders.toArray().filter(tab =>\n\t\t\t!tab.nativeElement.parentElement.classList.contains(\"bx--tabs__nav-item--disabled\") &&\n\t\t\t!tab.nativeElement.parentElement.classList.contains(\"bx--tabs__nav-item--selected\"));\n\n\t\t// unless the focus can move, it should remain on the target\n\t\tlet next: HTMLElement = target;\n\t\tlet previous: HTMLElement = target;\n\n\t\tfor (let i = 0; i < headers.length; i++) {\n\t\t\tif (headers[i].nativeElement === target) {\n\t\t\t\tif (i + 1 < headers.length) {\n\t\t\t\t\tnext = headers[i + 1].nativeElement;\n\t\t\t\t}\n\t\t\t\tif (i - 1 >= 0) {\n\t\t\t\t\tprevious = headers[i - 1].nativeElement;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tswitch (event.key) {\n\t\t\tcase \"ArrowDown\":\n\t\t\tcase \"Down\": // IE11 specific value\n\t\t\t\tnext.focus();\n\t\t\t\tbreak;\n\t\t\tcase \"ArrowUp\":\n\t\t\tcase \"Up\": // IE11 specific value\n\t\t\t\tprevious.focus();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * Selects `Tab` 'tab' and moves it into view on the view DOM if it is not already.\n\t */\n\tpublic selectTab(ref: HTMLElement, tab: Tab, tabIndex: number) {\n\t\tif (tab.disabled) {\n\t\t\treturn;\n\t\t}\n\n\t\t// hide the tablist on mobile\n\t\tthis.tabListVisible = false;\n\t\tthis.currentSelectedTab = tabIndex;\n\t\tthis.tabs.forEach(_tab => _tab.active = false);\n\t\ttab.active = true;\n\t\ttab.doSelect();\n\t}\n\n\t/**\n\t * Determines which `Tab` is initially selected.\n\t */\n\tprotected setFirstTab() {\n\t\tsetTimeout(() => {\n\t\t\tlet firstTab = this.tabs.find(tab => tab.active);\n\t\t\tif (!firstTab && this.tabs.first) {\n\t\t\t\tfirstTab = this.tabs.first;\n\t\t\t\tfirstTab.active = true;\n\t\t\t}\n\t\t\tif (firstTab) {\n\t\t\t\tfirstTab.doSelect();\n\t\t\t}\n\t\t});\n\t}\n}\n","import {\n\tComponent,\n\tInput,\n\tContentChildren,\n\tQueryList,\n\tAfterContentInit,\n\tContentChild,\n\tOnChanges,\n\tSimpleChanges\n} from \"@angular/core\";\nimport { Tab } from \"./tab.component\";\nimport { TabHeaders } from \"./tab-headers.component\";\n\n\n/**\n * Build out your application's tabs using this component.\n * This is the parent of the `Tab` and `TabHeader` components.\n *\n * [See demo](../../?path=/story/tabs--basic)\n *\n * `Tabs` expects a set of `n-tab` elements\n *\n * ```html\n * <ibm-tabs>\n * \t<ibm-tab heading='tab1'>\n * \t\ttab 1 content\n * \t</ibm-tab>\n * \t<ibm-tab heading='tab1'>\n * \t\ttab 2 content\n * \t</ibm-tab>\n * \t<!-- ... -->\n * \t<ibm-tab heading='tab1'>\n * \t\ttab n content\n * \t</ibm-tab>\n * </ibm-tabs>\n * ```\n *\n * <example-url>../../iframe.html?id=tabs--basic</example-url>\n */\n@Component({\n\tselector: \"ibm-tabs\",\n\ttemplate: `\n\t\t\t<ibm-tab-headers\n\t\t\t\t*ngIf=\"hasTabHeaders() && position === 'top'\"\n\t\t\t\t[skeleton]=\"skeleton\"\n\t\t\t\t[tabs]=\"tabs\"\n\t\t\t\t[followFocus]=\"followFocus\"\n\t\t\t\t[cacheActive]=\"cacheActive\"\n\t\t\t\t[contentBefore]=\"before\"\n\t\t\t\t[contentAfter]=\"after\"\n\t\t\t\t[ariaLabel]=\"ariaLabel\"\n\t\t\t\t[ariaLabelledby]=\"ariaLabelledby\"\n\t\t\t\t[type]=\"type\">\n\t\t\t</ibm-tab-headers>\n\t\t\t<ng-content></ng-content>\n\t\t\t<ng-template #before>\n\t\t\t\t<ng-content select=\"[before]\"></ng-content>\n\t\t\t</ng-template>\n\t\t\t<ng-template #after>\n\t\t\t\t<ng-content select=\"[after]\"></ng-content>\n\t\t\t</ng-template>\n\t\t\t<ibm-tab-headers\n\t\t\t\t*ngIf=\"hasTabHeaders() && position === 'bottom'\"\n\t\t\t\t[skeleton]=\"skeleton\"\n\t\t\t\t[tabs]=\"tabs\"\n\t\t\t\t[cacheActive]=\"cacheActive\"\n\t\t\t\t[type]=\"type\">\n\t\t\t</ibm-tab-headers>\n\t`\n})\nexport class Tabs implements AfterContentInit, OnChanges {\n\t/**\n\t * Takes either the string value 'top' or 'bottom' to place TabHeader\n\t * relative to the `TabPanel`s.\n\t */\n\t@Input() position: \"top\" | \"bottom\" = \"top\";\n\t/**\n\t * Set to 'true' to have `Tab` items cached and not reloaded on tab switching.\n\t */\n\t@Input() cacheActive = false;\n\t/**\n\t * Set to 'true' to have tabs automatically activated and have their content displayed when they receive focus.\n\t */\n\t@Input() followFocus = true;\n\t/**\n\t * Set to `true` to put tabs in a loading state.\n\t */\n\t@Input() skeleton = false;\n\t/**\n\t * Set to `true` to have the tabIndex of the all tabpanels be -1.\n\t */\n\t@Input() isNavigation = false;\n\t/**\n\t * Sets the aria label on the `TabHeader`s nav element.\n\t */\n\t@Input() ariaLabel: string;\n\t/**\n\t * Sets the aria labelledby on the `TabHeader`s nav element.\n\t */\n\t@Input() ariaLabelledby: string;\n\t/**\n\t * Sets the type of the `TabHeader`s\n\t */\n\t@Input() type: \"default\" | \"container\" = \"default\";\n\n\t/**\n\t * Maintains a `QueryList` of the `Tab` elements and updates if `Tab`s are added or removed.\n\t */\n\t@ContentChildren(Tab, { descendants: false }) tabs: QueryList<Tab>;\n\t/**\n\t * Content child of the projected header component\n\t */\n\t// @ts-ignore\n\t@ContentChild(TabHeaders, { static: false }) tabHeaders;\n\n\t/**\n\t * After content is initialized update `Tab`s to cache (if turned on) and set the initial\n\t * selected Tab item.\n\t */\n\tngAfterContentInit() {\n\t\tif (this.tabHeaders) {\n\t\t\tthis.tabHeaders.cacheActive = this.cacheActive;\n\t\t}\n\n\t\tthis.tabs.forEach(tab => {\n\t\t\ttab.tabIndex = this.isNavigation ? null : 0;\n\t\t});\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (this.tabHeaders && changes.cacheActive) {\n\t\t\tthis.tabHeaders.cacheActive = this.cacheActive;\n\t\t}\n\n\t\tif (this.tabs && changes.isNavigation) {\n\t\t\tthis.tabs.forEach(tab => {\n\t\t\t\ttab.tabIndex = this.isNavigation ? null : 0;\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * true if the n-tab's are passed directly to the component as children\n\t */\n\thasTabHeaders() {\n\t\treturn this.tabs.length > 0;\n\t}\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { Tabs } from \"./tabs.component\";\nimport { Tab } from \"./tab.component\";\nimport { TabHeaders } from \"./tab-headers.component\";\nimport { TabHeader } from \"./tab-header.component\";\nimport { TabHeaderGroup } from \"./tab-header-group.component\";\n\n@NgModule({\n\tdeclarations: [\n\t\tTabs,\n\t\tTab,\n\t\tTabHeaders,\n\t\tTabHeader,\n\t\tTabHeaderGroup\n\t],\n\texports: [\n\t\tTabs,\n\t\tTab,\n\t\tTabHeaders,\n\t\tTabHeader,\n\t\tTabHeaderGroup\n\t],\n\timports: [\n\t\tCommonModule\n\t]\n})\nexport class TabsModule {}\n"],"names":["Object","defineProperty","TabHeader","prototype","this","_cacheActive","shouldCache","paneReference","cacheActive","tabIndex","ngAfterViewInit","_this","setTimeout","title","tabItem","nativeElement","textContent","selectTab","focus","disabled","selected","emit","active","Component","args","selector","template","Input","Output","ViewChild","static","EventEmitter","TabHeaderGroup","keyboardInput","event","tabHeadersArray","Array","from","tabHeaderQuery","key","currentSelectedIndex","length","preventDefault","followFocus","tabListVisible","focusOut","elementRef","contains","relatedTarget","ngAfterContentInit","selectedSubscriptionTracker","unsubscribe","toArray","forEach","tabHeader","paneTabIndex","isNavigation","selectedSubscriptions","subscribe","indexOf","filter","header","filteredHeader","add","ngOnChanges","changes","getSelectedTab","headingIsTemplate","heading","showTabList","find","tab","parentElement","classList","onDropdownKeydown","tabDropdownKeydown","target","closest","headers","next","previous","i","ngOnDestroy","ElementRef","ContentChildren","HostListener","skeleton","type","Subscription","nextId","Tab","ngOnInit","TemplateRef","doSelect","shouldRender","HostBinding","id","attrClass","TabHeaders","tabsArray","tabs","currentSelectedTab","allTabHeaders","first","hideTabList","tabInput","tabQuery","setFirstTab","onTabFocus","ref","index","headerContainer","scrollLeft","_tab","firstTab","ViewChildren","firstVisibleTab","Tabs","tabHeaders","hasTabHeaders","descendants","ContentChild","position","NgModule","declarations","exports","imports","CommonModule","TabsModule"],"mappings":"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"}